#line 1 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/build/generated_src/code_intermediate.cpp"
#include <stdint.h>
// forward declare yyscan_t to improve type safety
#define YY_TYPEDEF_YY_SCANNER_T
struct yyguts_t;
typedef yyguts_t *yyscan_t;

#line 8 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/build/generated_src/code_intermediate.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 3
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

    #define yy_create_buffer codeYY_create_buffer

    #define yy_delete_buffer codeYY_delete_buffer

    #define yy_scan_buffer codeYY_scan_buffer

    #define yy_scan_string codeYY_scan_string

    #define yy_scan_bytes codeYY_scan_bytes

    #define yy_init_buffer codeYY_init_buffer

    #define yy_flush_buffer codeYY_flush_buffer

    #define yy_load_buffer_state codeYY_load_buffer_state

    #define yy_switch_to_buffer codeYY_switch_to_buffer

    #define yypush_buffer_state codeYYpush_buffer_state

    #define yypop_buffer_state codeYYpop_buffer_state

    #define yyensure_buffer_stack codeYYensure_buffer_stack

    #define yylex codeYYlex

    #define yyrestart codeYYrestart

    #define yylex_init codeYYlex_init

    #define yylex_init_extra codeYYlex_init_extra

    #define yylex_destroy codeYYlex_destroy

    #define yyget_debug codeYYget_debug

    #define yyset_debug codeYYset_debug

    #define yyget_extra codeYYget_extra

    #define yyset_extra codeYYset_extra

    #define yyget_in codeYYget_in

    #define yyset_in codeYYset_in

    #define yyget_out codeYYget_out

    #define yyset_out codeYYset_out

    #define yyget_leng codeYYget_leng

    #define yyget_text codeYYget_text

    #define yyget_lineno codeYYget_lineno

    #define yyset_lineno codeYYset_lineno

        #define yyget_column codeYYget_column

        #define yyset_column codeYYset_column

    #define yywrap codeYYwrap

    #define yyalloc codeYYalloc

    #define yyrealloc codeYYrealloc

    #define yyfree codeYYfree

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE codeYYrestart(yyin ,yyscanner )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via codeYYrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

void codeYYrestart ( FILE *input_file , yyscan_t yyscanner );
void codeYY_switch_to_buffer ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
YY_BUFFER_STATE codeYY_create_buffer ( FILE *file, int size , yyscan_t yyscanner );
void codeYY_delete_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void codeYY_flush_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void codeYYpush_buffer_state ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
void codeYYpop_buffer_state ( yyscan_t yyscanner );

static void codeYYensure_buffer_stack ( yyscan_t yyscanner );
static void codeYY_load_buffer_state ( yyscan_t yyscanner );
static void codeYY_init_buffer ( YY_BUFFER_STATE b, FILE *file , yyscan_t yyscanner );
#define YY_FLUSH_BUFFER codeYY_flush_buffer(YY_CURRENT_BUFFER ,yyscanner)

YY_BUFFER_STATE codeYY_scan_buffer ( char *base, yy_size_t size , yyscan_t yyscanner );
YY_BUFFER_STATE codeYY_scan_string ( const char *yy_str , yyscan_t yyscanner );
YY_BUFFER_STATE codeYY_scan_bytes ( const char *bytes, int len , yyscan_t yyscanner );

void *codeYYalloc ( yy_size_t , yyscan_t yyscanner );
void *codeYYrealloc ( void *, yy_size_t , yyscan_t yyscanner );
void codeYYfree ( void * , yyscan_t yyscanner );

#define yy_new_buffer codeYY_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        codeYYensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            codeYY_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        codeYYensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            codeYY_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#define codeYYwrap(yyscanner) (/*CONSTCOND*/1)
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

typedef int yy_state_type;

#define yytext_ptr yytext_r

static yy_state_type yy_get_previous_state ( yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  , yyscan_t yyscanner);
static int yy_get_next_buffer ( yyscan_t yyscanner );
static void yynoreturn yy_fatal_error ( const char* msg , yyscan_t yyscanner );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yyg->yy_c_buf_p = yy_cp;
#define YY_NUM_RULES 242
#define YY_END_OF_BUFFER 243
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_acclist[8382] =
    {   0,
      240,  240,  116,  240,  116,  240,  117,  240,  117,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,16436,  240,  240,  240,  240,  240,
      240,  102,  240,  102,  240,  182,  240,  182,  240,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  151,
      240,  151,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  243,  241,  242,  239,  242,
        1,  241,  242,  237,  241,  242,  238,  241,  242,  241,

      242,  241,  242,  240,  241,  242,  241,  242,  241,  242,
      116,  241,  242,  119,  241,  242,  116,  237,  241,  242,
      116,  238,  241,  242,  116,  241,  242,  116,  241,  242,
      241,  242,  116,  240,  241,  242,  116,  241,  242,  116,
      241,  242,  117,  241,  242,  120,  241,  242,  117,  237,
      241,  242,  117,  238,  241,  242,  117,  241,  242,  117,
      241,  242,  117,  240,  241,  242,  117,  241,  242,  117,
      241,  242,  126,  129,  241,  242,  130,  239,  242,    1,
      126,  129,  241,  242,  128,  129,  241,  242,  126,  129,
      237,  241,  242,  126,  129,  238,  241,  242,  126,  129,

      241,  242,  126,  129,  241,  242,  126,  129,  240,  241,
      242,  126,  129,  241,  242,  126,  129,  241,  242,   24,
       25,  241,  242,  239,  242,    1,   24,   25,  241,  242,
       23,   24,  241,  242,   24,   25,  237,  241,  242,   24,
       25,  238,  241,  242,   24,  241,  242,   24,   25,  241,
      242,   24,  241,  242,   24,   25,  240,  241,  242,   24,
       25,  241,  242,   24,  241,  242,  205,  233,  241,  242,
      205,  233,  241,  242,    1,  205,  233,  241,  242,  205,
      233,  237,  241,  242,  205,  233,  238,  241,  242,  241,
      242,  233,  241,  242,  205,  233,  241,  242,  205,  233,

      240,  241,  242,  205,  233,  241,  242,  233,  241,  242,
      208,  211,  241,  242,  210,  239,  242,    1,  209,  211,
      241,  242,  208,  211,  237,  241,  242,  208,  211,  238,
      241,  242,  208,  211,  241,  242,  208,  211,  241,  242,
      208,  211,  241,  242,  208,  211,  240,  241,  242,  208,
      211,  241,  242,  208,  211,  241,  242,  215,  218,  241,
      242,  217,  239,  242,    1,  215,  218,  241,  242,  215,
      218,  237,  241,  242,  215,  218,  238,  241,  242,  218,
      241,  242,  215,  218,  241,  242,  215,  218,  241,  242,
      215,  218,  240,  241,  242,  215,  218,  241,  242,  215,

      218,  241,  242,   91,  241,  242,  113,  241,  242, 8300,
      241,  242,16490,16492,16495,  115,  241,  242,  237,  241,
      242,   91,  238,  241,  242,  241,  242,    9,   91,  241,
      242,  138,  241,  242,    9,   91,  241,  242,  135,  241,
      242,   91,  241,  242,  164,  241,  242,  114,  164,  241,
      242,  131,  241,  242,  132,  241,  242,  133,  241,  242,
      241,  242, 8300,  241,  242,16490,16492,16495, 8300,  241,
      242,16490,16492,16495, 8300,  241,  242,16490,16492,16495,
     8300,  241,  242,16490,16492,16495, 8300,  241,  242,16490,
    16492,16495, 8300,  241,  242,16490,16492,16495, 8300,  241,

      242,16490,16492,16495,  138,  237,  241,  242,   91,  241,
      242,  163,  238,  241,  242, 8300,  241,  242,16490,16492,
    16495, 8300,  241,  242,16490,16492,16495, 8300,  241,  242,
    16490,16492,16495, 8300,  241,  242,16490,16492,16495, 8300,
      241,  242,16490,16492,16495, 8300,  241,  242,16490,16492,
    16495, 8300,  241,  242,16490,16492,16495, 8300,  241,  242,
    16490,16492,16495, 8300,  241,  242,16490,16492,16495, 8300,
      241,  242,16490,16492,16495, 8300,  241,  242,16490,16492,
    16495, 8300,  241,  242,16490,16492,16495, 8300,  241,  242,
    16490,16492,16495, 8300,  241,  242,16490,16492,16495, 8300,

      241,  242,16490,16492,16495, 8300,  241,  242,16490,16492,
    16495, 8300,  241,  242,16490,16492,16495, 8300,  241,  242,
    16490,16492,16495, 8300,  241,  242,16490,16492,16495, 8300,
      241,  242,16490,16492,16495,   28,  241,  242,   29,  241,
      242,   91,  241,  242, 8300,  240,  241,  242,16490,16492,
    16495,  241,  242,   22,  241,  242,   91,  241,  242,  180,
      241,  242,  171,  241,  242,16582,  180,  241,  242,  180,
      241,  242,  179,  237,  241,  242,  181,  238,  241,  242,
      180,  241,  242,  180,  241,  242,  173,  241,  242,  180,
      241,  242,  241,  242,  180,  241,  242,  241,  242,  114,

      241,  242,  241,  242,  172,  241,  242,  180,  241,  242,
      180,  241,  242,  180,  241,  242,  241,  242,  171,  241,
      242,16582,  171,  241,  242,16582,  171,  241,  242,16582,
      171,  241,  242,16582,  171,  241,  242,16582,  171,  241,
      242,16582,  171,  241,  242,16582,  180,  241,  242,  171,
      241,  242,16582,  171,  241,  242,16582,  171,  241,  242,
    16582,  171,  241,  242,16582,  171,  241,  242,16582,  171,
      241,  242,16582,  171,  241,  242,16582,  171,  241,  242,
    16582,  171,  241,  242,16582,  171,  241,  242,16582,  171,
      241,  242,16582,  171,  241,  242,16582,  171,  241,  242,

    16582,  171,  241,  242,16582,  171,  241,  242,16582,  171,
      241,  242,16582,  171,  241,  242,16582,  171,  241,  242,
    16582,  171,  241,  242,16582,  171,  241,  242,16582,   28,
      174,  241,  242,  180,  241,  242,  180,  241,  242,  171,
      240,  241,  242,16582,  180,  241,  242,  219,  241,  242,
        1,  219,  241,  242,  113,  219,  241,  242, 8329,  219,
      241,  242,16520,16521,  115,  219,  241,  242,  181,  219,
      238,  241,  242,  219,  241,  242,  219,  241,  242,  219,
      241,  242,  219,  241,  242,  219,  241,  242, 8329,  241,
      242,16520,16521, 8329,  241,  242,16520,16521, 8329,  241,

      242,16520,16521,  219,  237,  241,  242,  219,  241,  242,
      219,  238,  241,  242, 8329,  241,  242,16520,16521,   29,
      219,  241,  242,  219,  241,  242, 8329,  219,  240,  241,
      242,16520,16521,  219,  241,  242,  219,  241,  242,  171,
      241,  242,16584,16585,  180,  241,  242,  202,  241,  242,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,

      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      171,  241,  242,16584,16585,  171,  241,  242,16584,16585,
      174,  241,  242,  171,  240,  241,  242,16584,16585,  196,
      241,  242,  115,  241,  242,  193,  241,  242,  196,  241,

      242,  196,  241,  242,  196,  241,  242,  194,  241,  242,
      196,  240,  241,  242,  241,  242,   34,   35,   43,  241,
      242,   32,  241,  242,   50,  241,  242,   31,  241,  242,
       34,   35,   43,  241,  242,   53,  241,  242,   34,   35,
       43,  240,  241,  242,  241,  242,   38,  241,  242,   37,
      239,  242,    1,   38,  241,  242,   36,   38,  237,  241,
      242,   38,  238,  241,  242,   38,  241,  242,   38,  241,
      242,   38,  237,  241,  242,   38,  240,  241,  242,   38,
      241,  242,   38,  241,  242,   42,  241,  242,   41,  239,
      242,    1,   42,  241,  242,   39,   42,  237,  241,  242,

       40,   42,  238,  241,  242,   42,  241,  242,   42,  241,
      242,   42,  237,  241,  242,   42,  238,  241,  242,   42,
      240,  241,  242,   42,  241,  242,   42,  241,  242,  241,
      242,   45,  241,  242,   51,  241,  242,   45,  240,  241,
      242,  241,  242,    8,  239,  242,   49,  241,  242,    9,
      241,  242,   46,  241,  242,  241,  242,   49,  241,  242,
       49,  241,  242,   49,  241,  242,   49,  241,  242,   49,
      240,  241,  242,  241,  242,   55,  241,  242,   62,  237,
      241,  242,   65,  241,  242,  241,  242,   56,  241,  242,
       57,  241,  242,  241,  242,  241,  242,   55,  241,  242,

       55,  241,  242,   55,  240,  241,  242,  241,  242,16436,
       22,  241,  242,  241,  242,   60,  241,  242,   61,  241,
      242,   63,  237,  241,  242,   64,  238,  241,  242,   58,
      241,  242,   59,  241,  242,  241,  242,16405,    1,  241,
      242,16405,  237,  241,  242,16405,  238,  241,  242,16405,
      241,  242,16405,  241,  242,16405,  240,  241,  242,16405,
      241,  242,16405,  241,  242,16405,   97,  241,  242,   98,
      241,  242,  241,  242,  241,  242,  241,  242,  241,  242,
      241,  242,  241,  242,  241,  242,  241,  242,  241,  242,
      241,  242,  241,  242,  241,  242,  241,  242,  241,  242,

      241,  242,  241,  242,  241,  242,  241,  242,  100,  241,
      242,  102,  241,  242,  241,  242,   99,  241,  242,  100,
      241,  242,  100,  241,  242,  100,  241,  242,  100,  241,
      242,  100,  241,  242,  100,  241,  242,  100,  241,  242,
      100,  241,  242,  100,  241,  242,  100,  241,  242,  100,
      241,  242,  100,  241,  242,  100,  241,  242,  100,  241,
      242,  100,  241,  242,  100,  241,  242,  241,  242,  100,
      240,  241,  242,  192,  241,  242,  182,  192,  241,  242,
      182,  239,  242,    1,  192,  241,  242,  191,  192,  241,
      242,  188,  192,  241,  242,  192,  237,  241,  242,  192,

      238,  241,  242,  192,  241,  242,  183,  192,  241,  242,
      192,  241,  242,  188,  192,  241,  242,  188,  192,  241,
      242,  188,  192,  241,  242,  188,  192,  241,  242,  188,
      192,  241,  242,  188,  192,  241,  242,  185,  192,  241,
      242,  188,  192,  240,  241,  242,  182,  192,  241,  242,
      192,  241,  242,   19,  241,  242,   20,  239,  242,    1,
       19,  241,  242,   18,   19,  241,  242,   19,  237,  241,
      242,   19,  238,  241,  242,   19,  241,  242,   10,   19,
      241,  242,   12,   19,  241,  242,   19,  241,  242,   18,
       19,  241,  242,   18,   19,  241,  242,   18,   19,  241,

      242,   18,   19,  241,  242,   18,   19,  241,  242,   18,
       19,  241,  242,   18,   19,  241,  242,   18,   19,  241,
      242,   18,   19,  241,  242,   18,   19,  241,  242,   18,
       19,  241,  242,   18,   19,  241,  242,   18,   19,  241,
      242,   18,   19,  241,  242,   18,   19,  241,  242,   18,
       19,  241,  242,   18,   19,  240,  241,  242,   19,  241,
      242,   19,  241,  242,   17,   18,   19,  241,  242,   11,
       19,  237,  241,  242,   17,   18,   19,  240,  241,  242,
       15,   18,   19,  241,  242,   16,   19,  238,  241,  242,
       15,   18,   19,  241,  242,   15,   18,   19,  241,  242,

       15,   18,   19,  241,  242,   15,   18,   19,  241,  242,
       15,   18,   19,  241,  242,   15,   18,   19,  241,  242,
       15,   18,   19,  241,  242,   15,   18,   19,  241,  242,
       15,   18,   19,  241,  242,   15,   18,   19,  241,  242,
       15,   18,   19,  241,  242,   15,   18,   19,  241,  242,
       15,   18,   19,  241,  242,   15,   18,   19,  240,  241,
      242,  161,  241,  242,  162,  239,  242,    1,  161,  241,
      242,  155,  161,  241,  242,  148,  156,  160,  161,  241,
      242,  161,  241,  242,  157,  161,  237,  241,  242,  158,
      161,  238,  241,  242,  161,  241,  242,  161,  241,  242,

      148,  160,  161,  241,  242,  139,  161,  237,  241,  242,
      140,  161,  238,  241,  242,  139,  161,  241,  242,  140,
      161,  241,  242,  148,  160,  161,  240,  241,  242,  161,
      241,  242,  161,  241,  242,  156,  160,  161,  241,  242,
    16533,16534,  160,  161,  241,  242,16533,16534,  160,  161,
      240,  241,  242,16533,16534,  151,  161,  241,  242,    1,
      151,  161,  241,  242,  153,  161,  241,  242,  156,  160,
      161,  241,  242,  151,  161,  237,  241,  242,  151,  161,
      238,  241,  242,  151,  161,  241,  242,  151,  161,  241,
      242,  151,  160,  161,  241,  242,  161,  241,  242,  151,

      160,  161,  240,  241,  242,  151,  161,  241,  242,  151,
      161,  241,  242,  144,  147,  241,  242,  146,  239,  242,
        1,  144,  147,  241,  242,  144,  147,  237,  241,  242,
      144,  147,  238,  241,  242,  147,  241,  242,  144,  147,
      241,  242,  144,  147,  241,  242,  144,  147,  240,  241,
      242,  144,  147,  241,  242,  144,  147,  241,  242,  241,
      242,  239,  242,    1,  241,  242,  191,  241,  242,  189,
      241,  242,  190,  241,  242,  189,  241,  242,  189,  241,
      242,  189,  241,  242,  189,  241,  242,  189,  241,  242,
      189,  241,  242,  189,  241,  242,  189,  241,  242,  189,

      241,  242,  189,  241,  242,  189,  241,  242,  189,  241,
      242,  189,  241,  242,  189,  241,  242,  189,  241,  242,
      189,  241,  242,  185,  241,  242,  189,  240,  241,  242,
      241,  242,   73,  241,  242,   74,  241,  242,   73,  240,
      241,  242,   77,  241,  242,   76,  239,  242,    1,   77,
      241,  242,   75,   77,  241,  242,   77,  237,  241,  242,
       77,  238,  241,  242,   77,  241,  242,   77,  241,  242,
       75,   77,  240,  241,  242,   77,  241,  242,   77,  241,
      242,  123,  124,  241,  242,  125,  239,  242,    1,  123,
      124,  241,  242,  123,  124,  237,  241,  242,  124,  238,

      241,  242,  123,  124,  241,  242,  123,  124,  241,  242,
      123,  124,  238,  241,  242,  123,  124,  240,  241,  242,
      123,  124,  241,  242,  123,  124,  241,  242,  178,  241,
      242,  177,  239,  242,    1,  178,  241,  242,  113,  178,
      241,  242,  115,  178,  241,  242,  178,  237,  241,  242,
      178,  238,  241,  242,  178,  241,  242,  178,  241,  242,
      178,  241,  242,  114,  178,  241,  242,  178,  241,  242,
      178,  241,  242,  178,  241,  242,  178,  241,  242,  175,
      178,  241,  242,  176,  178,  241,  242,  178,  240,  241,
      242,  178,  241,  242,  178,  241,  242,  234,  236,  235,

      240,  234,  236,  116,  116,  118,  234,  116,  118,  236,
      119,  235,  121,  116,  240,  116,  116,  116,  118,  234,
      116,  118,  236,  117,  117,  118,  234,  117,  118,  236,
      117,  235,  117,  240,  117,  117,  117,  118,  234,  117,
      118,  236,  126,  127,  126,  234,  126,  236,  126,  240,
      126,  126,  126,  234,  126,  236,   25,  221,  221,  221,
      236,   26,   25,  240,   25,  236,  205,  233,  233,  205,
      233,  206,  204,  234,  204,  233,  236,  205,  233,  235,
      205,  233,  240,  205,  233,  233,  204,  234,  204,  233,
      236,  208,  208,  208,  234,  208,  236,  208,  235,  207,

      208,  240,  208,  208,  208,  234,  208,  236,  215,  214,
      216,  234,  215,  216,  236,  215,  235,  215,  240,  215,
      215,  216,  234,  215,  216,  236, 8300, 8300,16490,16492,
    16495, 8303, 8298, 8298, 8300,16490,16492,16495,   89,  135,
      114,  114,  164,  164,  114,  114,  164,  114,  114, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495,16495,
       90, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,

    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8279, 8300,16467,16471,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8284, 8300,16476,16490,
    16492,16495, 8280, 8300,16468,16472,16490,16492,16495, 8300,

    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,

    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,  240,16490,16492,16495,   22,  180,
      171,16582,  197, 8390,  171,16582,  180,  181,  180,  114,
      180,  180,  180,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,

    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,   82,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,  240,

    16582, 8329, 8329,16520,16521, 8328, 8329,16520,16521,16520,
     8329,16520,16521, 8329,16520,16521, 8329,  240,16520,16521,
      171,16584,16585, 8392, 8393,  202,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,

    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,

      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,  240,16584,
    16585,  196,  195,  196,  196,  196,  240,   50,   53,   34,
       35,   43,   32,   50,   34,   35,   43,   53,   34,   35,
       43,  240,   51,   45,   45,  240,   49,   49,   49,   49,
       49,   49,  240,   55,   55,   55,   55,   55,   55,  240,
    16436,   22, 8244, 8244,16405, 8213,  234,16405,  236,16405,
     8213,  235,  240,16405,16405,16405,  234,16405,  236,16405,
     8284,16476,  100,  102,  100,  100,  100,  100,  100,  100,

      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  240,  182,  185,  182,
      188,  188,  188,  188,  188,  188,  188,  188,  240,  182,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       18, 8284,16476,   18,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,  240,   17,   18,   13,   17,   18,
      240,   15,   18,   15,   18,   15,   18,   15,   18,   15,
       18,   15,   18,   15,   18,   14,   15,   18,   15,   18,
       15,   18,   15,   18,   15,   18,   15,   18,   15,   18,
       15,   18,   15,   18,   15,   18,   15,   18,   15,   18,

      240,  148,  160,  142,  234,  141,  236,  155,  235,  148,
      160,  240,  142,  234,  141,  236,  160,16533,16534, 8342,
     8341,  160,  240,16533,16534,  151,  160,  151,  234,  151,
      236,  159,  235,  151,  160,  152,  151,  160,  240,  151,
      151,  151,  234,  151,  236,  144,  143,  145,  234,  144,
      145,  236,  144,  235,  144,  240,  144,  144,  145,  234,
      144,  145,  236,  189,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  189,  240,   73,
       73,  240,   75,   75,  240,  123,  122,  123,  234,  123,

      236,  123,  235,  123,  240,  123,  123,  123,  234,  123,
      236,  227,  226,  227,  116,  116,  116,  227,  116,  116,
      116,  116,  116,  116,  226,  227,  116,  117,  117,  117,
      227,  117,  117,  117,  117,  117,  117,  226,  227,  117,
      126,  126,  126,  227,  126,  126,  126,  126,  126,  126,
      226,  227,  126,   27,   27,  227,  233,  233,  226,  227,
      233,  233,  208,  208,  208,  227,  208,  208,  208,  208,
      208,  208,  226,  227,  208,  213,  215,  227,  215,  215,
      226,  227,  215,16491, 8297,16489,16494, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495,  134,

      134,  114,  114,  114,  114,  114,  164,  114,  114,  114,
      165,  114,  165, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495,  112, 8300,16490,16492,16495,
    16495,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8272, 8300,
    16464,16465,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,

    16490,16492,16495, 8300,16490,16492,16495,   85,   85, 8279,
     8300,   85,   85, 8300,16490,16492,16495, 8275,   85, 8303,
       85, 8298,   85,   85, 8298,   85,   85, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8280, 8300,16468,
    16472,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8284, 8300,

       86,   86, 8280, 8300,   86,   86, 8300,16490,16492,16495,
     8276,   86, 8303,   86, 8298,   86,   86, 8298,   86,   86,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8284, 8300,
    16476,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,

    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,

    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300, 8300,16490,16492,16495,  171,  171,16582,  114,  114,
      171,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  169,  169,  169,  171,16582,  169,  197,
      169,  169, 8390,  169,  169,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,

    16582,  171,16582,  171,16582,  171,16582,  167,  167,  167,
      171,16582,  167,  197,  167,  167, 8390,  167,  167,  170,
      170,  170,  171,16582,  170,  197,  170,  170, 8390,  170,
      170,  171,16582,   82,   82,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,

    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582, 8329,
    16520,16521,16520,16520, 8329, 8329,16520,16521,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  169,  169,  169,  171,16584,16585,  169, 8392,  169,

      169, 8393,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      167,  167,  167,  171,16584,16585,  167, 8392,  167,  167,
     8393,  170,  170,  170,  171,16584,16585,  170, 8392,  170,
      170, 8393,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,

    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,

    16585,   34,   43,   34,   35,   43,   45,   49,   49,   49,
       49,   55,   55,   55,   55, 8244, 8244, 8244,16405,16405,
      227,16405,16405,16405,16405,16405,16405,  226,  227,16405,
    16405, 8284, 8297,16489,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  167,  167,  100,  167,  167,  167,  167,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  188,  188,  188,  188,  186,  188,  188,   18,   18,
       18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   15,   18,   15,   18,
       15,   18,   15,   18,   15,   18,   15,   18,   15,   18,

       15,   18,   15,   18,   15,   18,   15,   18,   15,   18,
       15,   18,   15,   18,   15,   18,  154,  141,  141,  227,
      141,  226,  227,  141,  151,  151,  151,  227,  151,  151,
      151,  151,  151,  151,  226,  227,  151,  144,  227,  144,
      144,  226,  227,  144,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  167,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  189,   75,  122,
      123,  123,  123,  227,  123,  123,  123,  123,  123,  123,
      226,  227,  123,  231,  232,  227,  226,  230,  231,  225,
      226,  227,  116,  231,  116,  116,  232,  116,  227,  116,

      116,  116,  226,  116,  230,  231,  116,  116,  225,  116,
      226,  227,  116,  117,  231,  117,  117,  232,  117,  227,
      117,  117,  117,  226,  117,  230,  231,  117,  117,  225,
      117,  226,  227,  117,  126,  231,  126,  126,  232,  126,
      227,  126,  126,  126,  226,  126,  230,  231,  126,  126,
      225,  126,  226,  227,  126,  203,  232,  227,  233,  226,
      233,  226,  227,  233,  233,  208,  231,  208,  208,  231,
      208,  232,  208,  227,  208,  227,  208,  208,  208,  226,
      208,  230,  231,  208,  230,  231,  208,  208,  225,  208,
      226,  227,  208,  226,  227,  208,  213,  215,  227,  215,

      226,  215,  226,  227,  215, 8297,16489,16494, 8299,16491,
    16494, 8297, 8302, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8301,16493,  114,  114,  114,
      164,  114,  114,  114,  114,  114,  165,  114, 8300, 8300,
    16490,16492,16495, 8298,   30, 8272,16464,16465, 8280,16468,
    16472, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495,16494,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495,   79,   79, 8272, 8300,   79,   79, 8300,16490,16492,
    16495,   79, 8273, 8303,   79, 8298,   79,   79, 8298,   79,

       79, 8284, 8300,16476,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8284, 8300,16476,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8279, 8300, 8275, 8303, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8279, 8300,16467,16471,16490,16492,16495,
     8272, 8300,16464,16465,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,

    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495,   86, 8280, 8300, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8280, 8300,
     8276, 8303, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8272, 8300,16464,16465,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,

    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8272, 8300,16464,16465,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,

    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495,  171,
      171,16582,16583,  114,  171,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  166,
      166,  166,  171,16582,  166,  197,  166,  166, 8390,  166,
      166,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,

    16582,  171,16582,  171,16582,  171,16582,  170,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,

      171,16582,16520,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  166,  166,  166,  171,16584,16585,
      166, 8392,  166,  166, 8393,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,

    16585,  171,16584,16585,  170,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,

    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,   44,   34,   35,   43,   34,   35,   43,
       45,   30,   49,   49,   49,   49,   55,   55,   55,   55,
     8244, 8244, 8244,  231,16405, 8213,  231,16405,  232,16405,
      227,16405, 8213,  227,16405,16405,  226,16405,  230,  231,
    16405, 8213,  230,  231,16405,  225,16405,  226,  227,16405,
     8213,  226,  227,16405, 8284,16476, 8284,16476,  100, 8297,

      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  188,  188,  188,
      188,  188,   18,   18,   18,   18, 8284,16476,   18, 8284,
    16476,   18,   18,   18,   18,   18,   18,   18,   18,   18,
       18,   14,   15,   18,   14,   15,   18,   15,   18,   15,
       18,   15,   18,   15,   18,   15,   18,   15,   18,   15,
       18,   15,   18,   15,   18,   15,   18,  154,  141,  227,
      141,  226,  227,  141,  151,  231,  151,  151,  232,  151,
      227,  151,  151,  151,  226,  151,  230,  231,  151,  151,
      225,  151,  226,  227,  151,  144,  227,  144,  226,  144,

      226,  227,  144,  189,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  189,  189,  189,
      189,  189,   73,   75,  122,  123,  231,  123,  123,  232,
      123,  227,  123,  123,  123,  226,  123,  230,  231,  123,
      123,  225,  123,  226,  227,  123,  228,  223,  220,  230,
      226,  229,  229,  224,  116,  230,  116,  226,  116,  229,
      116,  229,  116,  117,  230,  117,  226,  117,  229,  117,
      229,  117,  126,  230,  126,  226,  126,  229,  126,  229,
      126,  226,  233,  233,  227,  208,  230,  208,  230,  208,
      226,  208,  226,  208,  229,  208,  229,  208,  229,  226,

      227,  208,  208,  215,  226,  215, 8297,16495,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8301,  114,  114,
      114, 8297,16489,16494,   79, 8272,   79,   79, 8273,   86,
     8280,   86, 8276,   86, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8285, 8300,16477,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8272, 8300, 8273, 8303, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8272, 8300,16464,16465,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,

    16490,16492,16495, 8300,16490,16492,16495, 8272, 8300,16464,
    16465,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495,   79, 8272,
     8300, 8197, 8300,16389,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8272, 8300,16464,16465,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,

    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,

    16492,16495, 8300,16490,16492,16495,   79,   78,   79, 8300,
    16490,16492,16495, 8279, 8300,16467,16471,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8272, 8300,16464,16465,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495,  171,
      171,16582,16583, 8391,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,

      171,16582,  171,16582,  171,16582,  171,16582,  166,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  166,   78,  166, 8390,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,

    16582,  171,16582,  171,16582,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  166,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,

    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,

    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
       35,   34,   35,   43,   49,   49,   49,   49,   55,   55,
       55,   55, 8244, 8244, 8244,  230,16405, 8213,  230,  226,
    16405, 8213,  226,  229,16405, 8213,  229,  229,16405,16405,
     8213, 8285,16477,   96,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  101,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  188,16568,  188,  188,  188,  188,   18,
       18,   18, 8285,16477,   18,   18,   18,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   15,   18,   15,   18,
       15,   18,   15,   18,   15,   18,   15,   18,   15,   18,

       15,   18,   15,   18,   15,   18,   15,   18,   15,   18,
      141,  151,  230,  151,  226,  151,  229,  151,  229,  151,
      144,  226,  144,  189,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  189,  189,  189,
      189,  189,   73,  122,  123,  230,  123,  226,  123,  229,
      123,  229,  123,  222,  226,  207,  224, 8297,16489,16495,
     8297,16489,16495,16495,16495, 8300,16490,16492,16495,   78,
      114,  114,  114,  114,  114, 8297, 8279,16467,16471, 8272,
    16464,16465, 8272, 8273, 8280, 8276, 8300,16490,16492,16495,
     8285, 8300, 8300,16490,16492,16495, 8300,16490,16492,16495,

     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495,    6,   79,
     8272, 8300, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8272, 8300, 8197, 8300,
     8197, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,

    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8272, 8300,16464,
    16465,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8272, 8300,16464,16465,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495,   78, 8300,16490,16492,16495, 8300,16490,16492,16495,

     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495,   72,   79, 8272, 8300,   72,   79, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
       78, 8390,  171,16582,  168,  168,  168,  171,16582,  168,
      197,  168,  168, 8390,  168,  168,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,

      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16584,16585,  168,  168,  168,
      171,16584,16585,  168, 8392,  168,  168, 8393,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,

      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,

    16584,16585,  171,16584,16585,   34,   35,   43,   49,   49,
       49,   49,16432,   55,   55,   54,   55,   55, 8244, 8244,
     8244, 8285, 8297,16489,  100,  168,  168,  100,  168,  168,
      168,  168,  100,  100,  100,  100,  101,  100,  100,  100,
      100, 8376,  188,  188,  188,  188,  188,  188,  188,  188,
       18,   18,   18,   18,   18,   18,   18,   18,   15,   18,
       15,   18,   15,   18,   15,   18,   15,   18,   15,   18,
       15,   18,  189,  168,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  189,  122,  212,
     8297, 8297,16489,16495, 8297,16489,16495,16494,16495, 8300,

    16490,16492,16495,   78,  114,  114,  114,  114,  114,  114,
       85, 8279,   85, 8275,   85, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495,    6, 8272, 8300, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8272, 8300,16464,16465,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8272, 8300,16464,16465,16490,16492,16495,

     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8272, 8284, 8300,16464,
    16465,16476,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495,   79,
     8272, 8300, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495,   72, 8272, 8300,   72, 8300,16490,16492,16495,

      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16582,  171,16582,  171,16582,  171,16582,  171,16582,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,

      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,   34,   35,   43,   49,   47,
       49,   49, 8240,   54,   55, 8244, 8244, 8244,   54, 8297,
    16489,  100,  100,  100,  100,  100,  188,  188,  188,  188,

      188,  188,  188,  188,   18,   18,   18,   18,   15,   18,
       15,   18,   15,   18,  189,  189,  189,  189,  189,  189,
      189,  122,  213, 8297,16489,16495,16495, 8300,16490,16492,
    16495,16488, 8297,16489,16495, 8279, 8275, 8300,16490,16492,
    16495, 8300,16490,16492,16495,   70,   79, 8272, 8300,   70,
       79, 8300,16490,16492,16495, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495,   69,   79,   69,   79, 8272, 8300,   69,   79,   69,
       79, 8300,16490,16492,16495,   69,   79, 8273, 8303,   69,
       79, 8298,   69,   79,   69,   79, 8298,   69,   79,   69,

       79,   69, 8300,16490,16492,16495, 8300,16490,16492,16495,
     8300,16490,16492,16495,   79, 8272, 8284, 8300, 8272, 8300,
    16464,16465,16490,16492,16495,    7, 8300,    7, 8300, 8300,
    16490,16492,16495, 8272, 8300, 8300,16490,16492,16495, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8272, 8300,16464,16465,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495,    2,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  166,  167,  166,  167,  166,  167,  171,
    16582,  166,  167,  197,  166,  167,  166,  167, 8390,  166,

      167,  166,  167,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,  171,16584,
    16585,  166,  167,  166,  167,  166,  167,  171,16584,16585,
      166,  167, 8392,  166,  167,  166,  167, 8393,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,   34,
       35,   43,   49,   55, 8244,   69,  100,  188,  188,  188,
      188,  188,  187,  188,   18,  189,  122, 8297,16489,16495,

    16495, 8300,16490,16492,16495,16488, 8296,16488, 8297, 8297,
    16489,16495, 8272,16464,16465, 8300,16490,16492,16495,   70,
     8272, 8300,   70, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8272, 8300,   94, 8297,16489,16494, 8300,16490,16492,
    16495, 8272, 8284, 8300,   79,   79, 8272, 8300,   79,   79,
     8300,16490,16492,16495,   67,   79, 8273, 8303,   79, 8298,
       79,   79, 8298,   79,   79,    4, 8300,16490,16492,16495,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495,   69,   79, 8272, 8300,   69,   79, 8300,16490,
    16492,16495,  171,16582,  171,16582,  171,16582,  171,16582,

      171,16582,  171,16582,  171,16582,  171,16582,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,   34,   35,   43,   49, 8244,  100,  188,  188,
      188,  188,  188,   18,  189,  122, 8297,16489,16495,16495,
     8300,16490,16492,16495,16488,    3,   79, 8272,    3,   79,
     8300,16490,16492,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495,    4, 8272,16464,16465,   94, 8297,16489,16494,
       94,16494,   94, 8297,    6, 8300,   68, 8272, 8300,   68,
     8273, 8303, 8298, 8298,   68, 8273, 8303, 8300, 8300,16490,

    16492,16495,   68, 8303,16491,   68, 8297,16489,16494, 8300,
    16490,16492,16495, 8300,16490,16492,16495, 8300,16490,16492,
    16495, 8300,16490,16492,16495, 8300,16490,16492,16495, 8272,
     8300,   95, 8297,16489,16494, 8300,16490,16492,16495,  171,
    16582,  171,16582,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16582,  171,16584,16585,  171,16584,
    16585,  171,16584,16585,  171,16584,16585,  171,16584,16585,
      171,16584,16585,  171,16584,16585,  171,16584,16585,   34,
       35,   43,  100,  188,  188,  188,  188,  188,   18,  189,
      122, 8297,16489,16495,16495, 8300, 8300,16490,16492,16495,

       67, 8303,    3, 8272,    3, 8300,  103, 8300,16490,16492,
    16495,   94, 8297,   94, 8297,16489,16494,   66, 8299,16491,
     8297,   68, 8302,16495, 8300,16490,16492,16495, 8300,16490,
    16492,16495, 8300,16490,16492,16495, 8300,16490,16492,16495,
       95, 8297,16489,16494,   95,16494,   95, 8297, 8300,16490,
    16492,16495,  103,  171,16582,  171,16582,  171,16582,  171,
    16582,  171,16582,  171,16584,16585,  171,16584,16585,  171,
    16584,16585,  171,16584,16585,  171,16584,16585,16568,  188,
      188,  122, 8297,16489,16495,16495,   68, 8303,  103, 8297,
    16495,16495,16495, 8300, 8300,16490,16492,16495, 8300,16490,

    16492,16495, 8300,16490,16492,16495,   95, 8297,   95,  171,
    16582,  171,16582,  171,16584,16585,  171,16584,16585,  188,
      188,  122, 8297,16489,16495,16495, 8297,16489,16495,16494,
    16495, 8300,16490,16492,16495,  171,16582,  171,16584,16585,
       33,   44,  122, 8297, 8297,16489,16495,16494, 8297,16489,
     8297,16494,    6, 8300,16490,16492,16495,  171,16582,  171,
    16584,16585,   33,  122, 8297, 8297,16489, 8300,16490,16492,
    16495,  171,16582,  171,16584,16585,  122,   71,  122,  122,
      122
    } ;

static const flex_int16_t yy_accept[4196] =
    {   0,
        1,    2,    3,    5,    7,    9,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       46,   47,   48,   49,   50,   51,   52,   54,   56,   58,
       60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
       70,   72,   74,   75,   76,   77,   78,   79,   80,   81,
       82,   83,   84,   85,   86,   87,   89,   91,   94,   97,
      100,  102,  104,  107,  109,  111,  114,  117,  121,  125,
      128,  131,  133,  137,  140,  143,  146,  149,  153,  157,

      160,  163,  167,  170,  173,  177,  180,  185,  189,  194,
      199,  203,  207,  212,  216,  220,  224,  226,  231,  235,
      240,  245,  248,  252,  255,  260,  264,  267,  271,  275,
      280,  285,  290,  292,  295,  299,  304,  308,  311,  315,
      318,  323,  328,  333,  337,  341,  345,  350,  354,  358,
      362,  365,  370,  375,  380,  383,  387,  391,  396,  400,
      404,  407,  410,  416,  419,  422,  426,  428,  432,  435,
      439,  442,  445,  448,  452,  455,  458,  461,  463,  469,
      475,  481,  487,  493,  499,  505,  509,  512,  516,  522,
      528,  534,  540,  546,  552,  558,  564,  570,  576,  582,

      588,  594,  600,  606,  612,  618,  624,  630,  636,  639,
      642,  645,  652,  654,  657,  660,  663,  667,  670,  673,
      677,  681,  684,  687,  690,  693,  695,  698,  700,  703,
      705,  708,  711,  714,  717,  719,  723,  727,  731,  735,
      739,  743,  747,  750,  754,  758,  762,  766,  770,  774,
      778,  782,  786,  790,  794,  798,  802,  806,  810,  814,
      818,  822,  826,  830,  834,  837,  840,  845,  848,  851,
      855,  859,  865,  869,  874,  877,  880,  883,  886,  889,
      894,  899,  904,  908,  911,  915,  920,  924,  927,  934,
      937,  940,  945,  948,  951,  956,  961,  966,  971,  976,

      981,  986,  991,  996, 1001, 1006, 1011, 1016, 1021, 1026,
     1031, 1036, 1041, 1046, 1051, 1056, 1061, 1066, 1071, 1076,
     1081, 1084, 1090, 1093, 1096, 1099, 1102, 1105, 1108, 1111,
     1115, 1117, 1122, 1125, 1128, 1131, 1136, 1139, 1145, 1147,
     1150, 1153, 1157, 1162, 1166, 1169, 1172, 1176, 1180, 1183,
     1186, 1189, 1192, 1196, 1201, 1206, 1209, 1212, 1216, 1220,
     1224, 1227, 1230, 1232, 1235, 1238, 1242, 1244, 1247, 1250,
     1253, 1256, 1258, 1261, 1264, 1267, 1270, 1274, 1276, 1279,
     1283, 1286, 1288, 1291, 1294, 1296, 1298, 1301, 1304, 1308,
     1311, 1314, 1316, 1319, 1322, 1326, 1330, 1333, 1336, 1339,

     1343, 1347, 1351, 1354, 1357, 1361, 1364, 1367, 1370, 1373,
     1375, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1391, 1393,
     1395, 1397, 1399, 1401, 1403, 1405, 1407, 1409, 1412, 1415,
     1417, 1420, 1423, 1426, 1429, 1432, 1435, 1438, 1441, 1444,
     1447, 1450, 1453, 1456, 1459, 1462, 1465, 1468, 1470, 1474,
     1477, 1481, 1484, 1488, 1492, 1496, 1500, 1504, 1507, 1511,
     1514, 1518, 1522, 1526, 1530, 1534, 1538, 1542, 1547, 1551,
     1554, 1557, 1560, 1564, 1568, 1572, 1576, 1579, 1583, 1587,
     1590, 1594, 1598, 1602, 1606, 1610, 1614, 1618, 1622, 1626,
     1630, 1634, 1638, 1642, 1646, 1650, 1654, 1659, 1662, 1665,

     1670, 1675, 1681, 1686, 1691, 1696, 1701, 1706, 1711, 1716,
     1721, 1726, 1731, 1736, 1741, 1746, 1751, 1756, 1762, 1765,
     1768, 1772, 1776, 1782, 1785, 1790, 1795, 1798, 1801, 1806,
     1811, 1816, 1820, 1824, 1830, 1833, 1836, 1843, 1849, 1856,
     1860, 1865, 1869, 1874, 1879, 1884, 1888, 1892, 1897, 1900,
     1906, 1910, 1914, 1918, 1921, 1926, 1931, 1936, 1939, 1943,
     1947, 1952, 1956, 1960, 1962, 1964, 1967, 1970, 1973, 1976,
     1979, 1982, 1985, 1988, 1991, 1994, 1997, 2000, 2003, 2006,
     2009, 2012, 2015, 2018, 2021, 2024, 2027, 2031, 2033, 2036,
     2039, 2043, 2046, 2049, 2053, 2057, 2061, 2065, 2068, 2071,

     2076, 2079, 2082, 2086, 2089, 2094, 2099, 2103, 2107, 2111,
     2116, 2121, 2125, 2129, 2132, 2135, 2139, 2143, 2147, 2151,
     2155, 2158, 2161, 2164, 2168, 2171, 2174, 2177, 2180, 2184,
     2188, 2192, 2195, 2198, 2198, 2198, 2199, 2200, 2201, 2202,
     2202, 2202, 2203, 2204, 2205, 2208, 2211, 2213, 2214, 2216,
     2217, 2218, 2221, 2224, 2225, 2228, 2231, 2233, 2235, 2236,
     2237, 2240, 2243, 2244, 2245, 2247, 2249, 2251, 2252, 2253,
     2255, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2263, 2265,
     2266, 2267, 2269, 2270, 2272, 2272, 2273, 2275, 2278, 2281,
     2284, 2286, 2287, 2289, 2292, 2293, 2294, 2296, 2298, 2300,

     2301, 2301, 2303, 2304, 2305, 2307, 2309, 2310, 2311, 2313,
     2316, 2318, 2320, 2321, 2322, 2324, 2327, 2328, 2328, 2332,
     2333, 2334, 2334, 2335, 2335, 2335, 2339, 2339, 2339, 2339,
     2339, 2339, 2340, 2341, 2342, 2342, 2343, 2344, 2345, 2345,
     2345, 2345, 2346, 2348, 2349, 2350, 2350, 2350, 2350, 2350,
     2350, 2350, 2350, 2350, 2350, 2350, 2350, 2354, 2358, 2362,
     2362, 2366, 2370, 2370, 2371, 2372, 2372, 2372, 2372, 2376,
     2380, 2384, 2388, 2392, 2396, 2400, 2404, 2408, 2412, 2416,
     2420, 2424, 2431, 2435, 2439, 2443, 2447, 2451, 2455, 2459,
     2463, 2467, 2471, 2475, 2479, 2483, 2487, 2493, 2500, 2504,

     2508, 2512, 2516, 2520, 2524, 2528, 2532, 2536, 2540, 2544,
     2548, 2552, 2556, 2560, 2564, 2568, 2572, 2576, 2580, 2584,
     2588, 2592, 2596, 2600, 2604, 2608, 2612, 2616, 2620, 2624,
     2628, 2632, 2636, 2640, 2640, 2644, 2649, 2649, 2650, 2650,
     2650, 2651, 2651, 2653, 2654, 2654, 2655, 2655, 2655, 2657,
     2658, 2658, 2658, 2658, 2659, 2660, 2660, 2660, 2660, 2661,
     2661, 2662, 2663, 2664, 2664, 2664, 2664, 2664, 2664, 2664,
     2664, 2664, 2664, 2666, 2668, 2670, 2672, 2674, 2676, 2678,
     2680, 2682, 2684, 2686, 2688, 2690, 2692, 2694, 2696, 2698,
     2700, 2702, 2704, 2706, 2708, 2710, 2712, 2714, 2716, 2718,

     2720, 2722, 2724, 2726, 2728, 2730, 2732, 2734, 2737, 2739,
     2741, 2743, 2745, 2747, 2749, 2751, 2753, 2755, 2757, 2759,
     2761, 2763, 2765, 2767, 2769, 2771, 2773, 2775, 2777, 2779,
     2781, 2783, 2785, 2787, 2789, 2791, 2793, 2795, 2797, 2799,
     2802, 2803, 2803, 2806, 2807, 2807, 2807, 2807, 2807, 2810,
     2810, 2811, 2811, 2811, 2811, 2814, 2814, 2817, 2821, 2821,
     2821, 2824, 2825, 2825, 2826, 2827, 2830, 2833, 2836, 2839,
     2842, 2845, 2848, 2851, 2854, 2857, 2860, 2863, 2866, 2869,
     2872, 2875, 2878, 2881, 2884, 2887, 2890, 2893, 2896, 2899,
     2902, 2905, 2908, 2911, 2914, 2917, 2920, 2923, 2926, 2929,

     2932, 2935, 2938, 2941, 2944, 2947, 2950, 2953, 2956, 2959,
     2962, 2965, 2968, 2971, 2974, 2977, 2980, 2983, 2986, 2989,
     2992, 2995, 2998, 3001, 3004, 3007, 3010, 3013, 3016, 3019,
     3022, 3025, 3028, 3032, 3032, 3033, 3034, 3035, 3036, 3038,
     3038, 3039, 3040, 3040, 3043, 3043, 3043, 3043, 3043, 3044,
     3045, 3048, 3049, 3053, 3053, 3053, 3054, 3055, 3055, 3057,
     3057, 3058, 3058, 3059, 3060, 3061, 3062, 3064, 3064, 3065,
     3065, 3065, 3065, 3065, 3066, 3067, 3068, 3069, 3071, 3072,
     3073, 3073, 3074, 3075, 3076, 3077, 3079, 3081, 3083, 3085,
     3086, 3087, 3089, 3091, 3091, 3091, 3091, 3091, 3091, 3091,

     3091, 3091, 3091, 3091, 3091, 3093, 3093, 3093, 3093, 3093,
     3093, 3093, 3093, 3093, 3093, 3093, 3093, 3093, 3093, 3093,
     3094, 3094, 3094, 3094, 3095, 3095, 3096, 3097, 3098, 3099,
     3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109,
     3110, 3111, 3112, 3113, 3114, 3115, 3116, 3116, 3116, 3118,
     3119, 3119, 3119, 3119, 3119, 3119, 3120, 3121, 3122, 3123,
     3124, 3125, 3126, 3127, 3128, 3130, 3131, 3132, 3133, 3134,
     3135, 3136, 3137, 3138, 3139, 3140, 3141, 3144, 3145, 3146,
     3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3156, 3156,
     3158, 3159, 3162, 3164, 3166, 3168, 3170, 3172, 3174, 3176,

     3179, 3181, 3183, 3185, 3187, 3189, 3191, 3193, 3195, 3197,
     3199, 3202, 3204, 3204, 3204, 3206, 3208, 3210, 3213, 3215,
     3217, 3217, 3220, 3221, 3222, 3226, 3227, 3228, 3230, 3232,
     3234, 3236, 3237, 3240, 3241, 3242, 3244, 3246, 3247, 3248,
     3250, 3253, 3255, 3257, 3258, 3259, 3261, 3264, 3264, 3265,
     3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275,
     3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285,
     3286, 3287, 3288, 3290, 3290, 3291, 3291, 3293, 3294, 3294,
     3294, 3296, 3297, 3297, 3298, 3300, 3302, 3304, 3306, 3307,
     3308, 3310, 3312, 3312, 3312, 3312, 3312, 3312, 3312, 3313,

     3313, 3313, 3313, 3313, 3313, 3315, 3315, 3316, 3317, 3319,
     3320, 3321, 3322, 3323, 3324, 3327, 3328, 3329, 3330, 3332,
     3333, 3334, 3335, 3336, 3337, 3340, 3341, 3342, 3343, 3345,
     3346, 3347, 3348, 3349, 3350, 3353, 3354, 3355, 3356, 3356,
     3356, 3358, 3359, 3359, 3359, 3362, 3363, 3364, 3365, 3367,
     3368, 3369, 3370, 3371, 3372, 3375, 3376, 3376, 3377, 3379,
     3380, 3383, 3384, 3384, 3385, 3385, 3385, 3385, 3385, 3388,
     3388, 3392, 3396, 3396, 3400, 3401, 3402, 3402, 3402, 3402,
     3402, 3402, 3403, 3404, 3404, 3405, 3406, 3408, 3409, 3409,
     3409, 3410, 3410, 3412, 3413, 3414, 3414, 3418, 3418, 3418,

     3418, 3418, 3418, 3418, 3418, 3418, 3418, 3418, 3418, 3418,
     3418, 3418, 3422, 3426, 3426, 3427, 3431, 3431, 3431, 3432,
     3432, 3432, 3433, 3437, 3441, 3445, 3449, 3456, 3460, 3464,
     3468, 3472, 3476, 3480, 3484, 3488, 3492, 3496, 3500, 3504,
     3508, 3509, 3512, 3513, 3518, 3521, 3523, 3524, 3526, 3527,
     3528, 3532, 3536, 3540, 3544, 3548, 3552, 3556, 3560, 3564,
     3568, 3575, 3579, 3583, 3587, 3591, 3595, 3599, 3601, 3602,
     3605, 3606, 3611, 3614, 3616, 3617, 3619, 3620, 3621, 3625,
     3629, 3635, 3639, 3643, 3647, 3651, 3655, 3659, 3663, 3667,
     3671, 3675, 3679, 3683, 3687, 3691, 3695, 3699, 3703, 3707,

     3711, 3715, 3719, 3723, 3727, 3731, 3735, 3739, 3743, 3747,
     3751, 3755, 3759, 3763, 3767, 3771, 3775, 3779, 3783, 3787,
     3791, 3795, 3799, 3803, 3807, 3811, 3812, 3812, 3816, 3816,
     3816, 3816, 3816, 3817, 3819, 3819, 3819, 3820, 3821, 3822,
     3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822,
     3822, 3822, 3822, 3822, 3824, 3826, 3828, 3830, 3832, 3834,
     3836, 3838, 3840, 3842, 3844, 3846, 3848, 3850, 3852, 3854,
     3856, 3858, 3860, 3862, 3864, 3865, 3866, 3869, 3871, 3872,
     3874, 3875, 3876, 3878, 3880, 3882, 3884, 3886, 3888, 3890,
     3892, 3894, 3896, 3898, 3900, 3902, 3904, 3906, 3908, 3909,

     3910, 3913, 3915, 3916, 3918, 3919, 3920, 3921, 3922, 3925,
     3927, 3928, 3930, 3931, 3932, 3934, 3935, 3936, 3938, 3940,
     3942, 3944, 3946, 3948, 3950, 3952, 3954, 3956, 3958, 3960,
     3962, 3964, 3966, 3968, 3970, 3972, 3974, 3976, 3978, 3980,
     3982, 3984, 3986, 3988, 3990, 3992, 3994, 3996, 3998, 4000,
     4002, 4004, 4006, 4008, 4010, 4012, 4014, 4016, 4018, 4020,
     4020, 4020, 4020, 4023, 4023, 4023, 4023, 4024, 4024, 4025,
     4026, 4026, 4029, 4032, 4035, 4038, 4041, 4044, 4047, 4050,
     4053, 4056, 4059, 4062, 4065, 4068, 4071, 4074, 4077, 4080,
     4083, 4086, 4089, 4092, 4093, 4094, 4098, 4100, 4101, 4103,

     4106, 4109, 4112, 4115, 4118, 4121, 4124, 4127, 4130, 4133,
     4136, 4139, 4142, 4145, 4148, 4151, 4152, 4153, 4157, 4159,
     4160, 4162, 4163, 4164, 4168, 4170, 4171, 4173, 4176, 4179,
     4182, 4185, 4188, 4191, 4194, 4197, 4200, 4203, 4206, 4209,
     4212, 4215, 4218, 4221, 4224, 4227, 4230, 4233, 4236, 4239,
     4242, 4245, 4248, 4251, 4254, 4257, 4260, 4263, 4266, 4269,
     4272, 4275, 4278, 4281, 4284, 4287, 4290, 4293, 4296, 4299,
     4302, 4302, 4303, 4303, 4304, 4307, 4308, 4308, 4309, 4310,
     4311, 4312, 4312, 4312, 4313, 4314, 4315, 4316, 4317, 4318,
     4319, 4320, 4321, 4323, 4324, 4325, 4326, 4327, 4328, 4331,

     4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332,
     4332, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333,
     4333, 4333, 4333, 4333, 4333, 4333, 4333, 4335, 4335, 4335,
     4335, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343,
     4344, 4345, 4346, 4348, 4349, 4350, 4351, 4352, 4353, 4354,
     4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4362, 4362,
     4362, 4362, 4362, 4362, 4363, 4364, 4365, 4366, 4368, 4369,
     4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379,
     4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4389, 4391,
     4393, 4395, 4397, 4399, 4401, 4403, 4405, 4407, 4409, 4411,

     4413, 4415, 4417, 4417, 4418, 4418, 4418, 4419, 4421, 4424,
     4425, 4426, 4427, 4429, 4430, 4431, 4432, 4433, 4434, 4437,
     4438, 4440, 4441, 4444, 4445, 4446, 4447, 4448, 4449, 4450,
     4451, 4452, 4453, 4454, 4456, 4457, 4458, 4459, 4460, 4461,
     4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4469, 4470,
     4470, 4471, 4472, 4473, 4475, 4476, 4477, 4478, 4479, 4480,
     4483, 4484, 4484, 4484, 4484, 4484, 4485, 4485, 4486, 4487,
     4487, 4487, 4488, 4490, 4490, 4491, 4493, 4493, 4495, 4496,
     4498, 4500, 4501, 4502, 4504, 4507, 4508, 4510, 4513, 4514,
     4516, 4517, 4519, 4521, 4522, 4523, 4525, 4528, 4529, 4531,

     4534, 4535, 4537, 4538, 4540, 4542, 4543, 4544, 4546, 4549,
     4550, 4552, 4555, 4556, 4556, 4558, 4560, 4562, 4565, 4566,
     4568, 4569, 4571, 4573, 4575, 4577, 4578, 4579, 4581, 4584,
     4587, 4588, 4590, 4593, 4596, 4597, 4597, 4598, 4598, 4600,
     4602, 4605, 4606, 4609, 4610, 4611, 4612, 4612, 4613, 4613,
     4614, 4614, 4614, 4618, 4622, 4626, 4626, 4626, 4626, 4626,
     4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628, 4629, 4630,
     4632, 4633, 4634, 4634, 4634, 4635, 4635, 4636, 4636, 4638,
     4639, 4640, 4640, 4644, 4645, 4645, 4645, 4645, 4645, 4649,
     4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649,

     4649, 4652, 4656, 4660, 4660, 4664, 4664, 4664, 4664, 4665,
     4665, 4665, 4666, 4670, 4674, 4678, 4682, 4683, 4686, 4687,
     4692, 4695, 4697, 4698, 4700, 4701, 4702, 4708, 4712, 4716,
     4722, 4726, 4730, 4734, 4738, 4742, 4746, 4750, 4754, 4758,
     4762, 4764, 4764, 4766, 4770, 4774, 4781, 4788, 4792, 4796,
     4800, 4804, 4808, 4812, 4815, 4819, 4823, 4827, 4831, 4835,
     4839, 4841, 4841, 4843, 4847, 4851, 4855, 4859, 4863, 4867,
     4874, 4878, 4882, 4886, 4890, 4894, 4898, 4902, 4906, 4910,
     4914, 4918, 4919, 4923, 4927, 4931, 4935, 4939, 4943, 4947,
     4951, 4955, 4959, 4963, 4967, 4971, 4975, 4982, 4986, 4990,

     4994, 4998, 5002, 5006, 5010, 5014, 5018, 5022, 5026, 5030,
     5030, 5030, 5030, 5031, 5033, 5033, 5033, 5034, 5034, 5035,
     5036, 5036, 5036, 5036, 5036, 5036, 5036, 5036, 5036, 5036,
     5036, 5036, 5036, 5036, 5036, 5036, 5038, 5040, 5042, 5044,
     5046, 5048, 5050, 5051, 5052, 5055, 5057, 5058, 5060, 5061,
     5062, 5064, 5066, 5068, 5070, 5072, 5074, 5076, 5078, 5080,
     5082, 5084, 5086, 5088, 5090, 5092, 5094, 5096, 5098, 5100,
     5102, 5104, 5106, 5108, 5109, 5111, 5113, 5115, 5117, 5119,
     5121, 5123, 5125, 5127, 5129, 5131, 5133, 5135, 5137, 5139,
     5141, 5143, 5145, 5147, 5149, 5151, 5153, 5155, 5157, 5159,

     5161, 5163, 5165, 5167, 5169, 5171, 5173, 5175, 5177, 5179,
     5181, 5183, 5185, 5187, 5189, 5191, 5193, 5195, 5197, 5199,
     5201, 5203, 5203, 5204, 5207, 5210, 5213, 5216, 5219, 5222,
     5225, 5226, 5227, 5231, 5233, 5234, 5236, 5239, 5242, 5245,
     5248, 5251, 5254, 5257, 5260, 5263, 5266, 5269, 5272, 5275,
     5278, 5281, 5284, 5287, 5290, 5293, 5296, 5299, 5302, 5305,
     5306, 5309, 5312, 5315, 5318, 5321, 5324, 5327, 5330, 5333,
     5336, 5339, 5342, 5345, 5348, 5351, 5354, 5357, 5360, 5363,
     5366, 5369, 5372, 5375, 5378, 5381, 5384, 5387, 5390, 5393,
     5396, 5399, 5402, 5405, 5408, 5411, 5414, 5417, 5420, 5423,

     5426, 5429, 5432, 5435, 5438, 5441, 5444, 5444, 5445, 5446,
     5447, 5448, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5457,
     5457, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5466,
     5468, 5469, 5471, 5473, 5475, 5476, 5477, 5479, 5482, 5485,
     5486, 5488, 5491, 5494, 5495, 5495, 5495, 5495, 5497, 5499,
     5499, 5499, 5499, 5499, 5499, 5499, 5499, 5499, 5499, 5499,
     5499, 5499, 5499, 5499, 5500, 5501, 5501, 5501, 5502, 5503,
     5504, 5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513,
     5514, 5515, 5516, 5517, 5518, 5518, 5518, 5518, 5518, 5519,
     5520, 5521, 5522, 5523, 5524, 5525, 5526, 5529, 5532, 5533,

     5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5545,
     5548, 5550, 5552, 5554, 5556, 5558, 5560, 5562, 5564, 5566,
     5568, 5568, 5569, 5569, 5571, 5574, 5575, 5577, 5578, 5580,
     5582, 5583, 5584, 5586, 5589, 5590, 5592, 5595, 5596, 5598,
     5600, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611,
     5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 5621,
     5622, 5623, 5624, 5625, 5625, 5626, 5628, 5629, 5631, 5633,
     5634, 5635, 5637, 5640, 5641, 5643, 5646, 5647, 5648, 5649,
     5649, 5650, 5650, 5651, 5652, 5653, 5654, 5654, 5655, 5657,
     5659, 5661, 5663, 5664, 5666, 5668, 5670, 5672, 5673, 5675,

     5677, 5679, 5681, 5682, 5684, 5685, 5686, 5688, 5690, 5692,
     5694, 5696, 5698, 5700, 5702, 5703, 5704, 5704, 5704, 5706,
     5707, 5708, 5708, 5708, 5708, 5708, 5708, 5709, 5710, 5714,
     5718, 5718, 5719, 5719, 5719, 5719, 5719, 5719, 5719, 5720,
     5721, 5721, 5721, 5721, 5721, 5722, 5722, 5725, 5725, 5725,
     5725, 5727, 5728, 5730, 5730, 5730, 5730, 5730, 5730, 5730,
     5730, 5730, 5730, 5730, 5730, 5730, 5732, 5733, 5735, 5739,
     5743, 5743, 5749, 5749, 5749, 5753, 5757, 5761, 5765, 5767,
     5767, 5769, 5773, 5777, 5781, 5785, 5792, 5796, 5800, 5804,
     5808, 5815, 5819, 5823, 5827, 5831, 5835, 5839, 5842, 5848,

     5852, 5856, 5863, 5863, 5867, 5871, 5875, 5879, 5883, 5887,
     5891, 5895, 5899, 5903, 5907, 5911, 5915, 5919, 5923, 5927,
     5931, 5935, 5939, 5943, 5947, 5951, 5951, 5951, 5955, 5959,
     5963, 5967, 5971, 5975, 5979, 5983, 5987, 5991, 5995, 5999,
     6003, 6007, 6008, 6010, 6014, 6021, 6025, 6029, 6033, 6037,
     6041, 6048, 6052, 6056, 6060, 6060, 6060, 6061, 6063, 6064,
     6064, 6065, 6065, 6065, 6065, 6065, 6065, 6065, 6065, 6065,
     6065, 6065, 6065, 6065, 6065, 6065, 6067, 6069, 6071, 6073,
     6075, 6077, 6079, 6081, 6083, 6085, 6087, 6089, 6091, 6093,
     6095, 6097, 6099, 6101, 6103, 6105, 6107, 6109, 6110, 6112,

     6114, 6116, 6116, 6118, 6120, 6122, 6124, 6126, 6128, 6130,
     6132, 6134, 6136, 6138, 6140, 6142, 6144, 6146, 6148, 6150,
     6152, 6154, 6156, 6158, 6160, 6162, 6164, 6166, 6168, 6170,
     6172, 6174, 6176, 6178, 6180, 6182, 6183, 6186, 6188, 6190,
     6192, 6194, 6196, 6198, 6200, 6202, 6204, 6206, 6209, 6212,
     6215, 6218, 6221, 6224, 6227, 6230, 6233, 6236, 6239, 6242,
     6245, 6248, 6251, 6254, 6257, 6260, 6263, 6266, 6269, 6272,
     6273, 6276, 6279, 6282, 6285, 6288, 6291, 6294, 6297, 6300,
     6303, 6306, 6309, 6312, 6315, 6318, 6321, 6324, 6327, 6330,
     6333, 6336, 6339, 6342, 6345, 6348, 6351, 6354, 6357, 6360,

     6363, 6366, 6369, 6372, 6375, 6378, 6381, 6384, 6387, 6390,
     6393, 6396, 6399, 6402, 6405, 6408, 6411, 6412, 6415, 6416,
     6417, 6418, 6419, 6419, 6419, 6419, 6420, 6421, 6422, 6423,
     6424, 6425, 6426, 6428, 6430, 6432, 6434, 6436, 6438, 6440,
     6441, 6442, 6442, 6442, 6444, 6444, 6444, 6444, 6444, 6445,
     6445, 6445, 6445, 6445, 6445, 6445, 6445, 6445, 6445, 6445,
     6445, 6446, 6446, 6447, 6448, 6449, 6450, 6451, 6452, 6453,
     6455, 6456, 6457, 6458, 6459, 6460, 6461, 6462, 6463, 6464,
     6464, 6464, 6464, 6464, 6466, 6467, 6468, 6469, 6470, 6471,
     6472, 6475, 6476, 6477, 6478, 6479, 6480, 6481, 6482, 6483,

     6484, 6485, 6486, 6487, 6489, 6491, 6493, 6495, 6497, 6499,
     6501, 6503, 6505, 6507, 6509, 6511, 6511, 6511, 6512, 6514,
     6516, 6518, 6520, 6521, 6523, 6524, 6525, 6526, 6527, 6528,
     6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538,
     6539, 6540, 6541, 6542, 6543, 6544, 6544, 6545, 6547, 6549,
     6551, 6553, 6554, 6554, 6554, 6554, 6555, 6556, 6558, 6558,
     6558, 6558, 6558, 6561, 6564, 6564, 6564, 6565, 6565, 6566,
     6570, 6570, 6571, 6571, 6571, 6572, 6573, 6574, 6575, 6576,
     6577, 6577, 6580, 6583, 6584, 6584, 6585, 6585, 6585, 6585,
     6585, 6585, 6585, 6585, 6585, 6585, 6585, 6585, 6585, 6586,

     6586, 6587, 6591, 6591, 6593, 6593, 6597, 6601, 6605, 6609,
     6613, 6617, 6621, 6625, 6629, 6633, 6637, 6641, 6645, 6649,
     6653, 6657, 6661, 6665, 6669, 6673, 6677, 6679, 6679, 6679,
     6681, 6682, 6686, 6690, 6690, 6694, 6698, 6702, 6706, 6710,
     6714, 6718, 6722, 6726, 6730, 6734, 6738, 6742, 6746, 6750,
     6754, 6758, 6765, 6765, 6765, 6769, 6773, 6777, 6784, 6788,
     6792, 6793, 6797, 6801, 6805, 6809, 6813, 6817, 6819, 6823,
     6827, 6831, 6831, 6831, 6831, 6833, 6833, 6833, 6833, 6833,
     6833, 6833, 6833, 6833, 6833, 6833, 6833, 6833, 6833, 6835,
     6836, 6837, 6840, 6842, 6843, 6845, 6846, 6847, 6849, 6851,

     6853, 6855, 6857, 6859, 6861, 6863, 6865, 6867, 6869, 6871,
     6873, 6875, 6877, 6879, 6881, 6883, 6885, 6887, 6887, 6887,
     6887, 6889, 6891, 6891, 6893, 6895, 6897, 6899, 6901, 6903,
     6905, 6907, 6909, 6911, 6913, 6915, 6917, 6919, 6921, 6923,
     6925, 6927, 6929, 6931, 6933, 6935, 6937, 6939, 6941, 6943,
     6945, 6948, 6949, 6950, 6954, 6956, 6957, 6959, 6962, 6965,
     6968, 6971, 6974, 6977, 6980, 6983, 6986, 6989, 6992, 6995,
     6998, 7001, 7004, 7007, 7010, 7013, 7016, 7019, 7019, 7022,
     7025, 7028, 7031, 7034, 7037, 7040, 7043, 7046, 7049, 7052,
     7055, 7058, 7061, 7064, 7067, 7070, 7073, 7076, 7079, 7082,

     7085, 7088, 7091, 7094, 7097, 7100, 7103, 7106, 7109, 7110,
     7111, 7112, 7114, 7114, 7114, 7114, 7115, 7116, 7118, 7119,
     7120, 7121, 7122, 7122, 7123, 7123, 7123, 7123, 7123, 7123,
     7123, 7123, 7123, 7123, 7123, 7125, 7126, 7127, 7128, 7130,
     7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140,
     7141, 7142, 7142, 7142, 7142, 7142, 7142, 7143, 7144, 7145,
     7146, 7147, 7148, 7149, 7150, 7151, 7152, 7153, 7154, 7155,
     7156, 7157, 7158, 7159, 7161, 7163, 7165, 7167, 7169, 7171,
     7173, 7174, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183,
     7184, 7185, 7186, 7187, 7188, 7189, 7189, 7190, 7190, 7191,

     7191, 7191, 7192, 7195, 7198, 7198, 7199, 7200, 7204, 7205,
     7206, 7207, 7208, 7209, 7210, 7211, 7211, 7213, 7214, 7216,
     7216, 7216, 7216, 7216, 7216, 7216, 7216, 7216, 7216, 7216,
     7216, 7220, 7220, 7224, 7228, 7232, 7236, 7239, 7243, 7247,
     7251, 7258, 7262, 7266, 7270, 7274, 7278, 7282, 7286, 7286,
     7286, 7290, 7290, 7294, 7301, 7305, 7309, 7313, 7317, 7326,
     7330, 7334, 7338, 7342, 7346, 7350, 7353, 7353, 7353, 7357,
     7361, 7365, 7369, 7373, 7377, 7381, 7385, 7389, 7393, 7396,
     7397, 7397, 7401, 7401, 7401, 7401, 7401, 7401, 7401, 7401,
     7401, 7401, 7401, 7401, 7401, 7401, 7403, 7405, 7407, 7409,

     7411, 7413, 7415, 7417, 7419, 7421, 7423, 7425, 7427, 7429,
     7431, 7431, 7431, 7433, 7433, 7435, 7437, 7439, 7441, 7443,
     7445, 7447, 7449, 7451, 7453, 7455, 7457, 7459, 7461, 7463,
     7465, 7467, 7469, 7471, 7474, 7477, 7480, 7483, 7486, 7489,
     7492, 7495, 7498, 7501, 7504, 7507, 7510, 7513, 7516, 7519,
     7522, 7525, 7528, 7531, 7534, 7537, 7540, 7543, 7546, 7549,
     7552, 7555, 7558, 7561, 7564, 7567, 7570, 7573, 7576, 7579,
     7580, 7582, 7583, 7583, 7584, 7584, 7584, 7585, 7586, 7587,
     7588, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7590, 7592,
     7593, 7594, 7595, 7596, 7597, 7597, 7597, 7597, 7597, 7597,

     7597, 7597, 7598, 7599, 7600, 7601, 7602, 7603, 7604, 7605,
     7606, 7607, 7608, 7609, 7611, 7613, 7615, 7616, 7617, 7618,
     7619, 7620, 7621, 7622, 7622, 7623, 7623, 7623, 7624, 7627,
     7628, 7632, 7633, 7633, 7633, 7636, 7637, 7637, 7638, 7638,
     7638, 7638, 7638, 7638, 7638, 7638, 7638, 7638, 7642, 7642,
     7646, 7650, 7652, 7656, 7660, 7664, 7668, 7672, 7672, 7672,
     7674, 7678, 7680, 7686, 7690, 7693, 7695, 7698, 7700, 7702,
     7707, 7711, 7715, 7719, 7726, 7728, 7729, 7730, 7734, 7736,
     7736, 7736, 7736, 7736, 7736, 7736, 7740, 7744, 7748, 7752,
     7759, 7763, 7767, 7767, 7767, 7768, 7768, 7768, 7768, 7768,

     7768, 7768, 7768, 7768, 7768, 7770, 7772, 7774, 7776, 7778,
     7780, 7782, 7782, 7782, 7784, 7786, 7788, 7792, 7795, 7797,
     7800, 7802, 7804, 7806, 7808, 7810, 7812, 7814, 7816, 7818,
     7821, 7824, 7827, 7830, 7833, 7836, 7839, 7842, 7844, 7846,
     7851, 7854, 7856, 7859, 7862, 7865, 7868, 7871, 7874, 7877,
     7880, 7883, 7884, 7884, 7885, 7886, 7886, 7887, 7888, 7888,
     7888, 7888, 7888, 7888, 7888, 7888, 7889, 7890, 7891, 7892,
     7893, 7895, 7896, 7897, 7897, 7898, 7898, 7898, 7901, 7902,
     7906, 7906, 7907, 7908, 7908, 7908, 7908, 7908, 7909, 7910,
     7913, 7913, 7913, 7913, 7916, 7916, 7920, 7920, 7923, 7924,

     7928, 7932, 7932, 7932, 7934, 7934, 7934, 7934, 7934, 7938,
     7942, 7945, 7946, 7949, 7950, 7955, 7959, 7961, 7962, 7964,
     7965, 7966, 7966, 7966, 7966, 7966, 7966, 7966, 7966, 7966,
     7966, 7967, 7967, 7971, 7975, 7979, 7983, 7987, 7989, 7993,
     7993, 7993, 7993, 7993, 7993, 7995, 7997, 7999, 7999, 7999,
     8001, 8003, 8005, 8007, 8009, 8012, 8015, 8018, 8021, 8024,
     8027, 8030, 8033, 8036, 8037, 8037, 8038, 8038, 8039, 8039,
     8039, 8039, 8039, 8039, 8040, 8041, 8042, 8043, 8044, 8045,
     8046, 8046, 8047, 8047, 8050, 8051, 8055, 8055, 8055, 8055,
     8056, 8056, 8059, 8061, 8061, 8065, 8065, 8069, 8073, 8077,

     8077, 8081, 8083, 8085, 8087, 8087, 8088, 8090, 8090, 8093,
     8094, 8095, 8095, 8095, 8098, 8099, 8099, 8103, 8105, 8105,
     8105, 8105, 8106, 8106, 8107, 8107, 8107, 8110, 8110, 8114,
     8114, 8114, 8114, 8114, 8114, 8114, 8114, 8114, 8114, 8114,
     8114, 8114, 8118, 8122, 8126, 8130, 8132, 8132, 8132, 8132,
     8132, 8136, 8140, 8140, 8140, 8140, 8142, 8144, 8146, 8146,
     8146, 8148, 8150, 8152, 8154, 8156, 8159, 8162, 8165, 8168,
     8171, 8174, 8177, 8180, 8183, 8183, 8184, 8184, 8184, 8184,
     8184, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, 8191,
     8192, 8195, 8196, 8197, 8201, 8203, 8203, 8205, 8206, 8206,

     8207, 8208, 8212, 8214, 8215, 8218, 8218, 8219, 8220, 8221,
     8221, 8222, 8222, 8224, 8224, 8224, 8224, 8225, 8225, 8225,
     8229, 8229, 8229, 8229, 8229, 8229, 8229, 8229, 8229, 8233,
     8237, 8241, 8245, 8247, 8249, 8253, 8253, 8253, 8253, 8254,
     8256, 8258, 8260, 8262, 8264, 8264, 8267, 8270, 8273, 8276,
     8279, 8279, 8279, 8280, 8280, 8280, 8280, 8280, 8281, 8281,
     8282, 8282, 8283, 8286, 8287, 8289, 8289, 8289, 8290, 8291,
     8291, 8291, 8291, 8291, 8291, 8291, 8292, 8292, 8292, 8293,
     8293, 8293, 8294, 8295, 8295, 8299, 8299, 8299, 8299, 8299,
     8299, 8299, 8303, 8307, 8309, 8310, 8310, 8310, 8312, 8314,

     8317, 8320, 8320, 8320, 8320, 8320, 8321, 8322, 8322, 8323,
     8326, 8326, 8326, 8327, 8327, 8327, 8327, 8327, 8330, 8330,
     8330, 8330, 8330, 8330, 8331, 8331, 8331, 8332, 8332, 8332,
     8332, 8332, 8332, 8336, 8336, 8336, 8338, 8341, 8341, 8341,
     8341, 8343, 8343, 8343, 8343, 8344, 8345, 8348, 8348, 8349,
     8349, 8349, 8351, 8352, 8353, 8353, 8353, 8354, 8354, 8354,
     8354, 8358, 8358, 8358, 8360, 8363, 8363, 8364, 8364, 8365,
     8365, 8366, 8368, 8368, 8368, 8368, 8368, 8372, 8372, 8374,
     8377, 8377, 8378, 8378, 8378, 8378, 8379, 8379, 8380, 8380,
     8380, 8381, 8381, 8382, 8382

    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       24,   25,   25,   26,   25,   27,   28,   29,   30,   31,
       32,   33,    1,   34,   35,   36,   35,   35,   37,   38,
       39,   39,   39,   39,   39,   40,   39,   39,   41,   42,
       39,   43,   44,   39,   45,   46,   39,   47,   39,   39,
       48,   49,   50,   51,   52,    1,   53,   54,   55,   56,

       57,   58,   59,   60,   61,   62,   63,   64,   65,   66,
       67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
       77,   78,   79,   80,   81,   82,    1,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,

       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83
    } ;

static const YY_CHAR yy_meta[84] =
    {   0,
        1,    2,    3,    4,    5,    1,    6,    1,    7,    1,
        1,    8,    9,   10,   11,    1,   12,   13,   14,   15,
       16,   16,   16,   16,   16,   16,   16,   16,   17,   18,
       19,   20,    1,    1,   21,   21,   21,   22,   23,   24,
       23,   25,   23,   23,   23,   23,   23,   26,   27,   28,
        1,   29,   21,   21,   21,   21,   21,   22,   23,   23,
       23,   23,   23,   24,   23,   23,   23,   25,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   30,    1,
       31,   32,   33
    } ;

static const flex_int32_t yy_base[4800] =
    {   0,
        0,    3,    8,   90,   26,  172,   64,  114,  122,  254,
      196,  249,  146,  273,  199,  311,  394,   39,  477,   50,
      560,   59,  643,   60,  726,   61,  809,   67,  890,  893,
      898,  917, 1000,   80, 1083,  100, 1165, 1247, 1330,  149,
     1411, 1493, 1170, 1575, 1656,  141, 1739,  188, 1822,  221,
     1905,  222, 1988,  223, 2071,  230, 2154,  289, 2237,  290,
     2320,  315, 1192, 1433, 2403,  328, 2486,  334, 2569,  338,
     1188, 1488, 2650, 2732,14074,44762,  342,44762,44762,44762,
        4,14066,13988,  344,   11,    0,44762,    0,    0,   12,
    14062,    0,13980,  348,   34,    0,44762,    0,    0,   81,

    14055,13978,  350,   91,    0,  355,    0,14050,    0,    0,
       93,14046,13969,  361,  117,    0,  367,    0,44762,    0,
        0,  138,14041,    6,13962,  369,  148,14021,  371,14018,
    14014,14012,14010,  167,  124,    5,  924,  216,13980,  903,
    44762,13978,13976,  251,   66,  185,   40,  940,  269,    0,
      948,    0,    0,    0,14004,  225,14015,13935,  950,  245,
    44762,44762, 2814,13965,  150,44762,   31,44762,44762,13980,
      969,  265, 2875, 2940,13982,44762,44762, 1222, 3015,  124,
    13955,14001,13967,13954,13942,44762, 1460,44762,13937,  893,
      231,  274,  858,  314,  910,  310,  327,13921,13914,  905,

      860, 1127,   88, 1197, 1154,  890, 1156,  251,44762,44762,
      982,13901, 1225,  176,  364,13945, 1453,13943,  206, 1232,
    44762, 1184,  280,44762,  186, 1277, 1161, 3054, 3119,13945,
    44762,  241,13931,  296, 1252, 1515, 1543, 1585, 1600, 1615,
     1619, 2689,13930, 2709, 1662, 2765, 2807, 2860, 2864, 3191,
     1496, 2734, 1604, 2786, 2922, 2880, 2788, 2941, 3032, 2990,
     2969, 2988, 3059,44762, 1139,44762, 3033, 1250,44762,44762,
    44762, 3148,13902,44762, 1241, 3144,  934,13921,13942, 3182,
     3186, 3234,44762, 1483,44762, 3246,44762, 1282, 3265, 1286,
     1167, 3269, 1296, 3280, 3307, 3314, 3344, 3351, 3374, 3381,

     3406, 3413, 1628, 2632, 3189, 2715, 3386, 2852, 3257, 1254,
     1368, 2917, 3397, 1379, 2885, 3418, 3148, 3433, 3444, 3226,
    44762, 1572,  128,44762,44762, 1425, 1473, 3155,44762, 1452,
     1562, 3483, 1504,  977,44762, 3505, 1170, 3514, 2745,44762,
     1414,44762,44762,44762, 1248,13939,44762,13859, 1579, 1258,
    44762, 1591,44762,44762,44762, 1296,13929,44762,44762,13852,
     1592, 1297, 1545,13914,44762,   16, 1683, 1716,    0,44762,
    44762,  902,13875,13852,13862,13869,13841, 1424,  241,44762,
    44762,13894,44762,44762,  274,    0, 1593, 1450, 1427, 3054,
    44762, 1228,44762,44762,44762,44762,44762,44762, 1444, 1552,

     1594, 1623, 2697, 1628, 2649, 2801, 2756,44762,44762,13853,
    13865,13881,13860,  921, 1161,13845,13846,13850, 1200,13834,
    13827,13843, 1612,  859,13830,13828,13839, 3518,  164,13861,
    44762, 3533, 3537, 3556, 3567, 3572, 3604, 3609, 3621, 3625,
     3657, 3663, 3694, 3698, 3706, 3711, 3748, 2656, 3715,44762,
     3728, 3764, 3784,44762,    0,44762,44762, 1503,44762,13882,
    13820,13810,13823,13820,13804,13804,44762,13787, 3806, 1553,
    44762, 2663,44762,    0,44762,44762, 1634,44762,44762,13860,
    13799,13811,13827,13806, 1393,13798,13790,13790, 1473,13771,
    13764,13781, 1647,13765,13761,13772,13743, 2704, 1663, 2714,

    44762, 2852,    0,44762,13785, 1463,13758,13749,13751, 1668,
    13735,13728,13746, 2854,13732,13721,13728,13668,44762, 2870,
    44762,44762,    0,13701,44762,44762, 1717,13741,    0,44762,
    44762,44762,44762,13663, 2916, 2695, 3356, 3393, 3643,    0,
        0,44762,    0,    0,    0, 2706,13738, 3885,    0, 3967,
     2971, 2753,    0, 3001,    0,    0,    0,13721, 2782,13732,
    13655, 3005, 2831, 3867, 3940, 3949,44762,    0,44762,13652,
    13661,13668,13647, 2612, 1172,13632,13611, 2631,13595,13585,
     2627, 2966,13591,13587,13598,44762,13569, 3986,13621,44762,
     1181,44762, 3067,44762, 2811,44762,44762, 2865,13642, 2926,

     3093, 2890,    0, 3116,    0,    0,13641, 2893,13635,    0,
    13555, 3153, 3033,44762, 3222,44762,44762,44762,44762,44762,
     3885, 3095, 4054, 4119,13629,13592,13627, 1494,44762,44762,
    13550, 3332, 3102, 3418, 3119,  233,  299,44762,13541, 3425,
     3134, 3440, 3194,    0, 1577, 2660,44762,44762,13540, 3461,
     3160, 3458, 3220,    0, 1600, 2742,    0,13539, 3524, 3186,
     3494, 3545,    0,44762, 2808, 2864,13537, 3579, 3264, 3739,
     3584,    0,44762, 3590, 3309, 2937,44762,13616,13516, 3617,
     3635,13575,    0, 3675,13574,44762, 2954, 2995,13573, 2765,
     3760, 3320, 3770, 3786,13539, 3387, 3540, 3582,13537,44762,

    13581, 1179, 3810, 3352, 3799, 3807,    0, 3122, 3122, 3064,
        0,13499, 3702, 3324, 3810, 3812, 4083, 4022, 4191,44762,
    44762,    0,13550, 4085, 4040, 4240,13565, 3182, 3447, 3845,
     3673,44762,44762, 4289, 4190, 4333, 4386, 4103,  878, 4147,
     4444,    0, 4491,  935, 2685,    0, 3921, 1364,13507,13511,
     1355,13503, 2998,13511, 2811, 2912, 1593, 3311, 3170,13554,
     2864, 1494, 4148, 4233,44762,13533, 4246, 3819, 3668, 1580,
     2939, 3342, 2595, 1619, 3121, 2750, 3572, 2971, 3163, 3697,
     3736, 4567, 3225, 2860, 1665, 3321, 3361, 3488, 3388, 3434,
     3271, 3102, 3465, 3613, 3591, 3173, 3769, 4650, 2769, 3785,

     3490, 3721, 3513,   47, 3423, 3674, 3555, 3523, 3777, 3877,
     3576, 3815, 3782, 3232, 4207, 3949, 3622, 3805, 3952, 3353,
     3802, 3696, 3818, 4107, 3485, 3470, 3860, 3792, 3895, 3295,
     3897,13496, 3806, 4027, 4289, 2681, 4054, 3879, 4032, 3863,
    44762, 4090, 4319,44762,13521,44762,13518,13513, 4364,44762,
     4053, 4134, 4176,44762,44762, 4427, 4666, 4715,    0,    0,
    13511,13509,13502, 3450,13467,13471, 3883,13462, 3991,13464,
     3917, 3932, 4413, 4590, 4527, 4761, 4776, 4780, 4795, 4810,
     4817, 4845, 4854, 4873, 4882, 4905, 4914, 4933, 4937, 4956,
     5020, 4977, 4986, 5043, 5076, 5104, 5108, 5123, 5127, 5148,

     5157, 5176, 5197, 5201, 5273, 5356, 5231, 5379, 5235, 5307,
     5398, 5413, 5428, 5314, 5443, 5447, 5462, 5477, 5481, 5216,
     5496, 5515, 4303, 4320, 4369, 4424, 4461, 4478, 4561, 4566,
     4643, 5014, 4652, 4773, 4695, 5270, 4796, 4888, 5139, 5457,
     4294, 5534, 5548,44762,13490,13484, 5391, 5562, 5591, 5597,
     5603,13486, 5610, 4183, 5625, 4196, 4221, 5658, 5662, 4473,
     5681,44762,13480,44762,44762, 5701, 5720, 5724, 5743, 5763,
     5782, 5786, 5805, 5827, 5836, 5857, 5866, 5888, 5897, 5927,
     5934, 5959, 5979, 6043, 5999, 6066, 6099, 6129, 6136, 6161,
     6180, 6200, 6219, 6223, 6253, 6272, 6291, 6363, 6446, 6322,

     6469, 6402, 6329, 6488, 6518, 6537, 6541, 6560, 6579, 6583,
     6613, 6632, 6636, 6655, 6715, 5586, 5853, 5944, 5970, 5196,
     5652, 5675, 5708, 6192, 6246, 5914, 6145, 5737, 6174, 6112,
     6357, 6369, 6587, 4100, 4152,44762, 4256, 4320, 4201, 4153,
     4065, 4104, 4272, 5085,    0,    0,13482,    0, 4294, 4115,
     6675, 4132, 6598, 5876, 4399,44762,13485,    0, 3771, 4504,
        0,13435,13428,13426,13428,13441,13405, 4456, 4034,13458,
        0,    0, 4182, 4190, 4492, 4367, 4357, 4259, 6687,44762,
        0,    0, 4208, 3141,44762, 4599, 4345,44762, 4200, 4742,
     4873, 4712, 4892,13431,13421,13442,13414,13410,13404,13417,

    13413,13387,13392,13392, 4328,13375,13377,13372,13372,13366,
     3198,13360,13364,13359,13353,13356,13354, 6078, 5062, 6084,
    13377,13365, 5346, 3690, 5420, 6698, 6706, 6710, 6481, 6759,
     6767, 6789, 6798, 6802, 6819, 6886, 6878, 6909, 6928, 6941,
     6949, 6958, 6979, 6991, 7010, 7021, 4558, 4608, 7027, 6141,
     7040,13328,13320,13336,13325,44762, 7062,    0,13304,13312,
    13298,13312,13287,13299,13279, 7082,    0,13306,13298,13318,
    13289,13285,13279,13296,13275,13278, 4329,13272,13271,13271,
    13270,13259, 3723,13251,13249,13258,13257,13233, 4781, 4968,
    44762, 5155,    0,13265,13228,13219,13237,13211,13215,    0,

    13209,13213,13211,13212,13204, 4057,13199,13197,13204,13203,
    13179,    0,13249, 4650, 3924, 4034,44762,13175, 4388, 4368,
     5991, 6807,44762,44762, 7075,    0,    0, 4334, 4142,44762,
     7161,44762, 7243, 4454, 4018, 4489, 4782,    0,44762, 4430,
     4267,    0,13172, 4485, 4321, 4671, 4797, 7211,    0,13188,
    13180,13201,13171,13163,13157,13173,13157,13148,13146, 7326,
    13140,13144,13143,13143,13146,13149,13129, 4341,13117,13112,
     4376,13122,13098, 7294,13145,13144, 2863, 4065,    0,13143,
     4678,    0,13163,13157, 4536, 4505,    0,13079, 4939, 4534,
     4742, 4888,13154,13116, 4847, 4978,13143, 4537,    0, 4966,

     5149,13140, 4573, 3929,    0, 4110, 6342, 6420, 5006, 5109,
     5167, 6810, 6859, 4523, 5081, 4562, 5621, 7085, 4710, 5157,
     5207, 7135, 7139, 4563, 4865, 4647, 5077, 5236,13146, 5515,
     5294, 5553, 5555, 4725,13143, 4739,44762, 4746,13133, 4592,
    13131, 5525,13129, 4608,13126, 4773, 6383, 7183, 4376, 5667,
     5965, 7215, 7218, 5070, 4562, 5143, 4926, 5039,13121, 5535,
    13117, 4824, 4475, 5292, 6610,13098, 4494,13097, 7119, 7221,
     7349, 7408, 5466, 7475,44762,13115, 7369, 4978, 7535,13096,
     5693, 7606,    0, 7284,44762, 7405, 7659, 4980, 7361, 6248,
    13111,    0, 7724,44762,    0, 7444, 7482,13048,13064,13060,

    13049,13038,13027,13026, 3895,13039,13023,13023,13020,13014,
    13002, 7791, 4203,13059,44762, 4682, 7516, 7461, 7539, 6764,
     5755, 6295, 4364, 4817, 4653, 4784, 7844, 4724, 3764,13018,
     4537, 5055, 4910, 4826, 4844, 5094, 5699, 4856,13015, 5214,
    44762, 7572, 7606,13013,44762,44762,    0,13032, 7187, 7610,
     4175,13005, 5260, 4731, 3375, 4994, 5277, 5067,13002,12994,
     7927, 5284, 4963, 5356, 5010, 5397, 5129, 7708,44762, 7784,
     7867,12992,44762,44762,    0,13015, 7401, 7724, 5164, 4323,
     5820, 5199,12990, 5450, 4918, 5327, 5525, 5245, 5349, 4571,
     5140, 4657, 5381, 5518, 5348, 5501, 5482, 4576, 4057, 5444,

     5023, 5112, 5400, 5539, 4407, 5528, 5460, 5570, 5565, 5255,
     1641, 5550, 5759, 5065, 5596, 5619, 5635, 5616, 5206, 5632,
     5637, 4884,12986,12982, 5726, 7950, 7969, 7999,12966,12975,
     5342,12994, 6157, 8013, 5846, 7877, 8029, 8066, 6487,12954,
    12969,12964,12951,12947,12940,12938, 5581,12954,12937,12937,
    12934,12929,12908, 7689, 8112, 8066, 8127, 8131, 8146, 8161,
     8220, 7798, 8181, 8254, 8261, 8291, 8306, 8310, 8325, 8340,
     8344, 8363, 8372, 8393,44762, 6503, 8400,44762,12951,44762,
    12953,12945, 8428, 8435, 8450, 8465, 8472, 8487, 8506, 8510,
     8529, 8582, 8549, 8605, 8624, 8639, 8654, 8669,44762, 6546,

     8673,44762,12944,44762,12944,12938,44762, 6578, 8694,44762,
    12934,44762,12935,12928, 8703, 7089, 5939, 8722, 8783, 8745,
     8726, 8817, 8824, 8839, 8854, 8873, 8877, 8896, 8905, 8926,
     8933, 8954, 8958, 8973, 8998, 9005, 9028, 9035, 9050, 9069,
     9084, 9103, 9124, 9131, 9152, 9159, 9182, 9191, 9210, 9231,
     9238, 9261, 9268, 9289, 9296, 9317, 9321, 9340, 9359,12924,
     7576, 7985, 8033, 5946, 7991, 8105, 9378, 6148, 7448, 7591,
     7645, 7649, 9382, 9401, 9423, 9442, 9446, 9476, 9480, 9548,
     9571, 9590, 9621, 9512, 9630, 9653, 9660, 9683, 9692, 9713,
     9722, 9745, 9770, 9777, 7696, 9800,44762,12921,44762, 9807,

     9837, 9841, 9860, 9881, 9890, 9911, 9915, 9936, 9989, 9956,
    10012,10031,10061,10080,10084,10103, 8805,10128,44762,12916,
    44762,10137, 9519,10158,44762,12915,44762,10162,10181,10242,
    10204,10265,10284,10314,10333,10337,10356,10386,10390,10409,
    10428,10432,10462,10466,10485,10505,10526,10535,10556,10560,
    10591,10598,10621,10630,10651,10670,10693,10702,10724,10733,
    10764,10783,10787,10806,10826,10845,10866,10870,10900,10907,
    12931,12924,    0,12882, 9189,12911,12873,12850,12861,12852,
    12850, 5736,12857, 5815, 5882, 5686, 6049,    0, 5753,12856,
     6554, 6723, 4558, 6322, 6922, 6834, 7494, 6280, 5786, 6597,

    12852,12847,12828,12834,12840,12824,12820,12828,12827,12822,
     5487,12819,12811,12806,12789,12786,12793,12788,12779,12785,
    12775,12777,12778,12800, 6867,12795, 5845, 6919, 8212, 7313,
     7399,10024,10277, 8617,10930,10938,10745,10943,10947,10953,
     9498, 8284,10960,12797,12787, 7466,10995,11008,11014,11018,
    11027,11048,11031,11079,11096,11110,11115, 5878, 6065,12752,
    12757,12757,12745,12732,12731,12727,12734,    0,12741,12740,
    12720,12703,12709,12713,12699,12710,12710,12693,12687,12693,
    12677,12677,12683,12678,12676,12680,12682,12669,12673,12658,
    12671,12671,12664,12657,12662,12632,12623,12622,12613,12610,

    12614,12606,12646,44762,12635, 8549,    0,    0,    0, 5538,
     8694, 8762, 6017, 5985, 6155, 9103, 9477, 5752, 6272, 5854,
    12631, 6296,12622, 5895,12582,12574,12557,12556,12561,12544,
    12542,12556,12556,    0,12539,12532,12532,12518,12518,12507,
    12501,12505,12491,12490,12489,12485,12483,    0, 4990,12524,
    12523, 6018, 6737,12515, 6234, 6518, 6841, 6971, 6024,12505,
     6027,    0, 6089,12513, 6197,44762,12495,44762,    0,    0,
    12497,    0,44762,12496,44762,    0,12499,    0,12477,    0,
     6107, 8506, 8873, 6432,    0, 8946,    0, 6466, 7002,    0,
    12449,    0, 6693, 7685, 8057, 6828,    0, 8193,    0, 6861,

     7034,    0,12442,    0,12448, 7137, 7182,12442,    0, 7452,
        0,12439, 5891,12416,44762,12420,12417,12416, 5663,12380,
     4738, 6617,12369, 5176, 6922, 7551, 9011, 5833,12341, 7050,
     9041,12335, 5838, 7057, 7179, 7070, 7110, 6120,12368,12357,
    12356, 6012, 9308, 7367, 7671, 7728, 9608, 9902,10755,44762,
    12338,10857,11152,11201,11257,11149,11129,10236,11327, 5726,
    11408,12332, 7833, 7883, 7663,11489, 7885, 8422,11215,11560,
     6078, 6098, 8708, 8930,12347, 6342,11625, 6127,11673,10355,
    11251,11308,11357,12322, 7750,11184,12291,12272, 8020,12288,
    12272,12268,12257,12240, 5866,12241,12224,12235,12216,12217,

     8168,11730, 5788,12265, 5357,12240, 9212,12232,11195, 9143,
     8384,10122, 5757, 5902, 5857, 6286,44762,11436,11458,12195,
    44762,44762,    0,12225,10183,11314, 8078, 5460, 6127, 8434,
     6065, 6159, 6279, 6198, 6342, 5895, 6231, 6336, 5799, 6439,
    11517,11524,44762,   26, 5524,11794,11877, 6450, 6324, 6203,
     6345,  287, 6561,11959, 6449, 6598, 6611, 6531, 6500, 6269,
    11589,11737,44762, 6355, 6605, 6549, 5849, 6661, 6535, 6680,
     6632, 6696, 6703, 6701, 6658, 6711, 6782, 6796, 6821, 6725,
     6884,12015, 6933, 6634, 6435, 6912, 6764, 6812, 6954, 7064,
     6938, 6955, 6681, 6788, 6721,  318, 7498, 7004, 7034, 6963,

     7173, 6969, 6512, 7037, 6991, 6915, 6875, 6999, 7153,  902,
     1177, 7194, 7290,11603, 7299,11377, 7807,11537,12075, 7837,
     1260, 1398,    0, 1517, 1583, 2631, 2652, 2719, 6727, 2812,
     2905, 2936, 2965, 3016,    0,11834,11900,11964,12020,11596,
    11973,11919,44762, 8180,12029,44762, 3102,44762, 3178, 3285,
    12153,12061,12187, 8054,12054,12194,12209,12224,12239,12243,
    12258,12262,12281,12304,12311,12326,12391,12474,12351,12425,
    12508,12432,12515, 9109,12530,12545,12566,12573,12588,12603,
    12610,12631,12638,12659,12663,12691, 7279,12698,12713,12736,
    12743,12766,12773,12794,12803,12822,12843,12852,12871,12890,

    12894,12915,12922,12950,12957,12978,12985,13000,13019, 8094,
    13023,13044,13051,13072,13076,13095,13116,13138,13147,13166,
    13175,11218, 9531,13196,13215,13235,13254,13275,13284,13305,
    13309,10579,13328,44762, 3309,44762,13371,13394,13413, 8238,
    13443,13462,13466,13487,13507,13526,13547,13556,13578,13587,
    13608,13612,13677,13760,13642,13711,13794,13718,13801,13831,
    13850,13873,13880,13903,13912,13935,13942,13967,13988,13997,
    14018,14037, 7439,14041,14062,14081,14085,14104,14123,14127,
    14158,14165,14188,14195,14220,14227,14259,14280,14289,14311,
    14320,14342,14361,14365,14386,14405,14409,14428,14449,14458,

    14483,14490,14515,14534,14538,14568, 3375,44762, 3385, 3440,
     3545,10046, 3615,44762, 3614, 3774, 3835, 3906, 3919, 4089,
     4222, 7407, 7473, 7538, 7524, 4270, 4385, 4701, 7501,44762,
     8169, 7539, 7583,    0, 9568, 9808, 7591, 7662,44762,10175,
     7686, 7737,    0, 7769, 4757, 4794, 4832, 7964, 8623, 4907,
     4982, 5246, 5276, 5309, 5344, 5405, 5553, 5583, 5591, 5699,
     5698, 5845, 5919,11415, 7202, 5977,11475,11626,11494,13406,
    14625, 8475,11786,12384,14574,14648,11817,14660,14664,14681,
    14696,14715,14732,14736, 5936, 5966, 6000, 6104, 6106, 6124,
     6146, 6173, 6191, 6219, 6262, 6332, 8150, 8823, 6373, 6395,

     6436, 6480, 6486, 6596, 6620, 6657, 6699, 6745, 6762, 7618,
     6794, 6892, 6932, 6992, 7031, 7051, 7074, 7061, 7076, 7075,
     7134,44762,11271,    0,    0, 7157,    0, 7144,    0, 7758,
     9963,10217, 7913,    0,10659,    0, 7942, 8056, 7193, 7212,
     7221, 7268, 7182, 7210, 7212,14806, 8581, 7207, 7216, 7214,
     7219, 7234, 7250, 7291, 7278, 7307, 7315, 7334, 7359, 7351,
     7365, 7411, 7504, 7436, 7447,    0, 7455,    0, 7469, 8261,
     8352, 7477,    0, 8406,    0, 7484, 7623,44762,44762, 7512,
     8186, 7525,44762,    0,44762, 7520, 7547,44762,    0, 8287,
        0, 9414, 8468,    0, 8302,    0, 9602, 8726,    0, 7544,

        0, 8549, 7654, 7554, 7657, 7579, 7534, 7781, 7675, 8112,
     7542, 9047, 8756, 7589, 8835, 8909, 7784, 7572, 7592, 7982,
     9872,10307,11716, 7609,14798,14829,14746,14846,14913,14982,
     7612, 7769, 8440, 9280, 9394, 8675,15031,15112, 9293, 9606,
     8058, 8125,11918,11747,15183,11056,13954,13247, 7643, 7633,
    10517,11331,44762, 7653, 7666, 7670, 7687, 7702, 7699, 7960,
     7714, 7758, 7768, 7764, 7753,11362,11479,44762,15246, 7842,
     7819, 8329,12008,14879, 7848, 8127, 8205, 8311,14918,14975,
    44762, 8264, 8017, 7927, 8086,15296, 8382, 8106, 8146, 8214,
     9704, 8087, 7970, 7826, 8275, 8343, 8216,15378, 9465, 8243,

     8178, 8935, 7790, 8285, 8497, 8367, 8206, 8432, 8342, 8408,
     8499, 8034, 8446, 8463, 8366, 8504, 8509, 8505, 8568, 8696,
     8563, 8638, 7878, 8599, 8678, 7854, 7898, 8643, 8486, 8492,
     8280, 8338, 8711, 8654, 8635, 8701, 8610, 8737, 8391, 8779,
     8720, 7959,    0, 8765,15449, 8518, 8830, 8813, 8727, 8853,
     9435, 8864, 8820, 8880, 7935, 7966, 8991,13337, 9187, 8012,
    44762, 8097, 8124, 8137, 8191, 8227, 8280, 8307, 8419, 8832,
     8434, 8556, 8594, 8634, 8642,13522,13963,15532,14424,14591,
    14989,15063,15059,14753,15140,15091,15147,15162,15183,15213,
    15615,15253,15319,15338,15385,15416,15655, 9688,15472,15571,

     9067, 8665,15686,15701,15705,15720,15724,15743,15762,15758,
    15777,15781,15809,15816,15841,15850,15871,15878,15899,15906,
    15929,15936,15957,15961,15976,15991,15998,16019,16034,16053,
    16057,16076,16091,16110,16125, 8721,44762,16140,16196,16163,
    16230,16237,16252,16267,16289,16298,16317,16144,16321,16393,
    16342,16361,16427,16434,16464,16487,16506,16525,16529,16550,
    16570,16589,16657,16612,16621,16697,16728,16747,16751,16770,
    16789,16808, 9207,16827,16846,16850,16881,16885,16904,16923,
    16942,16946,16965,16984,16988,17009,17018,17040,17049,17074,
    17081,17104,17111,17136,17145,17166,17185,17204,17208,17227,

    17250,17259,17281,17290,17311,17320,17341,17397,17361,17431,
    17438,17468,17487,17506,17510,17529, 8733,10453, 8728, 8771,
     8786, 8804, 8844, 8859, 8859, 9055, 8925, 8983, 8952, 8873,
     8872, 8869, 8975,44762, 9002,    0, 9042,44762,10403, 9092,
     8930, 8900, 8893, 9068, 8916, 8958, 8967, 8954,44762, 8956,
     8960, 8956, 8970, 8987, 8986, 9013, 9023, 9024, 9014, 9031,
    14841,    0,15651,15098,17581,15225,15368,16038,17573,15357,
    16793,16607,17604,17616,17637,17646,16831,17652,17685, 9013,
     9021, 9035, 9022,17689,12622,11683,13107,12785, 9066, 9037,
     9171, 9064, 9104, 9116, 9099, 9101, 9087, 9091, 9111, 9096,

     9110, 9113, 9128, 9129, 9160, 9175, 9147, 9157, 9144, 9145,
     9163, 9149, 9165, 9166, 9182, 9223, 9225, 9239,    0, 9268,
        0,11087, 9340, 9232, 9301, 9211, 9182,17768, 9202, 9235,
     9242, 9220,13750, 9221, 9217, 9224, 9239, 9247, 9250, 9252,
     9273, 9272, 9280, 9292, 9325, 9349, 9353,    0, 9349,    0,
     9719, 9362, 9640, 9346, 9364,44762, 9367,44762, 9372,    0,
     9313, 9329,17694,17791,17808,14896,17823,11836,17829,17885,
     9346,    0, 9789,12153,10548,10607,17927,17980, 9374,14968,
     9373,11701,11779,11827,11857,44762, 9341, 9347, 9357, 9350,
     9350, 9354, 9376, 9378, 9388, 9376, 9378, 9396,11994,12345,

    44762,18043, 9443,17862,14864,18096, 9392, 9453, 9401, 9458,
     9422, 9439, 9520, 9522,17892, 9481, 9447, 9551, 9603, 9612,
     9681, 9615, 9627, 9539, 9604, 9648,18160, 9410, 9418,17966,
    18020, 9705, 9463, 9455, 9526, 9671, 9712, 9588, 9684, 9642,
     9751, 9713, 9555, 9757, 9664, 9695, 9768, 9765, 9780, 9735,
     9749,18231, 9492, 9500, 9792, 9782, 9823, 9921, 9786, 9871,
    44762, 9817, 9870, 9892, 9571, 9891,18313,18038, 9832, 9837,
     9888, 9575, 9627, 9665,44762,    0, 9640, 9663, 9713, 9721,
     9725, 9747, 9779, 9793, 9803, 9794, 9795, 9824,17525,44762,
    10089,17722,44762, 9854,44762, 9882, 9889,18076,17959,17927,

    18101,18129,18138,18166,18254,18194,18273,18198,18318,18327,
    18346,18355,18376,18385,18404,18408,18436,10143, 9868, 9865,
    18455,18464, 9897,18483,18492,18513,18517,18532,18547,18562,
    18577,18592,18596,18615,18624,18643,18664,18671,18694,18751,
    18709,18791,18806,18810,18841,18860,18864,18879,18883,18898,
    18917,18921,12360,18954,44762, 9929,44762,18961,18984,18991,
    19014,19034,19053,19057,19076,19095,19118,19127,19152,19159,
    19184,19191,19216,19223,19255,19259,19289,19296,19319,19340,
    19344,19363,19382,19403,19407,19426,19447,19456,19478,19487,
    19509,19518,19539,19558,19578,19599,19656,19624,19620,19696,

    19715,19738,19747,19768,19772,19802,19811,13627, 9908, 9893,
     9914,11190, 9904, 9922, 9924,10027,10032,10003,10094, 9908,
     9926, 9929, 9932,10040, 9922, 9958, 9959, 9944, 9969, 9965,
     9975, 9989,10000, 9986,10299,17879,18701,15046,18743,10049,
    10063,11146,18902,19806,19841,19845,18845,19849,19857,19897,
    19905,11390,10039,10051,10049,19918,44762,10045,10040,10060,
    10059,10062,10080,10081,10080,10095,10086,10102,10110,10097,
    10100,10116,10107,10119,10136,10140,10131,10134,10148,10139,
    10159,    0,10149,10166,10167,10149,10158,10153,10171,10163,
    10161,10178,10179,10205,10205,10281,10288,10294,44762,10283,

    10471,19927,19939,19962,12825,16719,19996,20065,10278,10840,
    11066,44762,11251,12502,44762,15828,12455,12496,44762,10228,
    10272,10277,10278,10280,10272,10275,10281,10292,10286,10283,
    20136,10344,20197,10329,10341,10367,20000,10372,10350,10392,
    20254,10343,10448,10375,10452,10306,    0,10313,10319,10314,
    10405,10342,10359,20337,10397,10396,10437,10454,10682,10429,
        0,10714,10510,10475,10413,20419,10407,10416,10486,10478,
    10519,10589,10484,10449,10485,10511,    0,10514,20492,20034,
    10472,    0,10600,10490,10503,10526,10542,10560,10558,10546,
    10549,10558,10571,10569,10566,19422,20072,19866,20103,20141,

    20176,20220,19359,20377,20424,20293,20396,20433,20454,20473,
    10585,10571,20514,10591,20469,20534,20549,20564,20636,20587,
    20670,20677,20594,20692,20707,20726,20730,20745,20764,20785,
    20792,20807,20827,20852,20859,20884,20891,20916,20923,20946,
    20955,20978,20999,21019,21038,21057,21061,21091,21098,21121,
    21128,21153,21160,21232,21183,21266,21273,21303,21192,21322,
    21326,21345,21365,21384,21405,21424,21428,21447,14553,10586,
        0,10594,11422,44762,10606,10595,44762,10661,10619,10605,
        0,10616,10609,10620,    0,10637,10640,10644,10805,19979,
    20159,21459,20057,21465,10646,10645,10646,10640,10671,10670,

    10665,10668,10682,10687,10671,10680,10688,10683,10699,10701,
    10693,10698,10716,10703,10706,10723,10718,10715,10725,10734,
    10746,10757,10760,10813,10815,10803,10888,10831,21042,21470,
    21530,21507,10797,11207,21536,12682,12864,44762,10761,10775,
    10768,10761,10784,10778,10787,10776,10788,10796,10843,10830,
    21569,21591,10837,10813,10857,10809,10873,10794,10809,44762,
    21620,21625,10843,44762,44762,    0,10878,13489,18504,10854,
    10858,10859,21654,21704,21727,21761,21810,10924,21882,10855,
    10871,10887,10901,10889,10911,10913,10933,10920,10946,21956,
    10918,10936,10903,11573,44762,10920,10933,10941,10938,10968,

    10963,10972,10968,10979,21787,21484,21817,21851,21832,21905,
    20974,10970,10969,21996,44762,11244,21659,44762,11013,44762,
    11019,11022,22011,22015,22043,22047,22068,22075,22090,22115,
    22122,22145,22164,22168,22189,22208,22212,22231,13699,22252,
    44762,11026,44762,22271,22275,22294,22313,22317,22338,22357,
    17132,10989,11007,11228,11008,11009,44762,21586,11011,11016,
    11019,11029,11034,11021,11031,11032,11039,11047,11049,11068,
        0,11065,11066,11119,11122,11133,11127,21768,22350,22428,
    22387,22421,44762,11118,11666,12299,11300,14145,21888,22369,
    11088,11105,11111,12934,11101,11269,11167,22450,22480,11242,

    11270,11113,11130,22502,11265,14234,11157,11307,18292,11340,
    22509,11178,22532,11443,22582,11193,11203,22665,11216,22748,
    22831,11153,11160,11182,11176,11213,11212,11218,11250,11275,
    44762,11274,11290,11312,11357,11311,22605,14710,11323,11315,
    11301,11320,11328,11307,22227,22913,22917,11319,11353,22932,
    22936,22955,22964,22985,23006,23010,23031,23050,23054,23073,
    23092,23111,15184,11344,11360,11365,11368,20526,11371,11373,
    11383,11385,11401,11383,11388,11402,11393,11398,11418,11421,
    11482,11486,11494,23130,23134,23202,12755,12883,15555,20277,
    11442,13187,13296,11445,11478,11492,11949,11498,13436,11460,

    13843,13599,19246,23284,11520,44762,23291,11671,11522,11527,
    11539,23355,    0,44762,13661,14587,23438,44762,23521,23604,
    11750,23687,    0,11511,    0,23770,19394,    0,11899,11582,
    23853,23936,11492,11484,11492,11500,11515,11512,11532,11594,
    11517,11569,11543,11586,11553,23461,11600,14941,11579,11632,
    20107,11659,11552,11571,11578,24018,23149,24022,    0,11568,
    24037,24041,24056,24060,23298,24081,23169,24100,24119,24138,
    24157,24161,24180,16449,11570,21696,11582,11586,11602,11591,
    11600,15520,14207,12462,13782,14271,11605,11617,11684,11685,
    24199,24203,24233,11966,11693,11645,13730,14470,11709,24240,

    15406,11666,14611,14784,15233,12022,44762,14948,24290,20122,
    15024,15350,44762,11764,24373,24456,24539,24622,24705,24788,
    11653,11668,11679,11664,11679,11686,11998,11700,11781,11794,
    11800,16690,15491,21396,11721,11690,11692,11918,11743,24870,
    24874,24889,24893,24912,24932,24951,24955,24985,25006,25015,
    12076,11832,17353,11755,11762,15503,11780,15286,15508,15082,
    11860,11861,25027,25097,11857,11838,11887,11902,15593,15637,
    11901,    0,11952,25180,    0,12277,25046,12021,    0,25263,
        0,25346,25120,12186,    0,11832,11846,11851,11878,11886,
    11895,12020,11958,15800,15890,11914,11909,25034,25428,25065,

    25432,11982,12293,11918,11930,13665,14200,11994,11998,25504,
    16582,16098,12372,25587,11947,12023,25670,12567,16927,25753,
        0,    0,25836,17726,17123,16218,    0,12066,11982,11973,
    11978,12001,12031,12000,11994,25472,25527,12306,12412,12414,
    44762,12005,12019,12075,12086,18008,12568,    0,16373,12029,
    12091,25919,18448,16642,18441,18636,12103,12053,12054,12054,
    12137,12066,12060,25468,26001,12661,44762,12120,12183,12180,
    12640,    0,18785,12140,12142,12141,12152,12778,26005,26024,
    12208,12212,12207,12164,12173,12990,12224,12232,12233,12242,
    12243,12238,44762,44762,26096,26129,26162,26195,26228,26261,

    26294,26327,26360,26393,26426,26459,26492,26525,26558,26591,
    26624,26657,26690,26723,26756,26789,26822,26855,26887,26920,
    26952,26984,27016,27048,27080,27112,27144,27176,27208,27235,
    27262,27289,27316,27344,27377,27409,27441,27468,27495,27527,
    27554,27581,27614,27646,27679,27706,27739,27772,27805,27832,
    27859,27886,27919,27952,27985,28018,28051,28084,28117,28150,
    28183,28216,28249,28281,28308,28341,28373,28406,28438,28464,
    12305,28488,28521,28553,28585,28617,28649,28681,28713,28746,
    28778,28805,28837,28870,28902,28934,28966,28998,29030,29062,
    29094,29126,29158,29185,29212,29239,29266,29293,29320,29347,

    29374,29401,29428,29461,29493,29526,29558,29590,29622,29649,
    29676,29708,29735,29762,29795,29828,29861,29893,29926,29953,
    29986,30019,30046,30073,30100,30127,30160,30193,30226,30259,
    30292,30325,30358,30391,30424,30457,30490,30523,30556,30589,
    30622,30655,30688,30721,30754,30787,30820,30853,30886,30919,
    30952,30985,31018,31051,31084,31117,31150,31183,31216,31248,
    31281,31314,31347,31379,31411,31443,31475,31507,31539,31571,
    12344,31597,12316,12431,31621,31653,31686,31718,31751,31783,
    31815,31842,31875,31907,31939,31971,32004,32036,32068,32100,
    32132,32165,32197,32229,32261,32293,32325,32357,32389,32421,

    32448,32475,32502,32529,32561,32588,32615,32642,32669,32702,
    32735,32768,32801,32834,32866,32899,32931,32963,32995,33027,
    33059,33086,33113,33140,33173,33206,33239,33272,33305,33338,
    33371,33404,33437,33470,33503,33536,33563,33590,33617,33650,
    33683,33716,33749,33782,33815,33848,33881,33914,33947,33980,
    34013,34046,34079,34112,34145,34178,34211,34244,34277,34310,
    34343,34376,34409,34442,34475,34508,34541,34574,34607,34640,
    34673,34706,34739,34772,34805,34838,34871,34904,34937,34970,
    35003,35036,35069,35102,35135,35168,35201,35234,35267,35299,
    35331,35363,35395,35427,35459,35491,35523,12683,12690,35549,

    35567,12578,35591,35624,35656,35689,35722,35755,35788,35821,
    35854,35886,35913,35946,35978,36010,36042,36074,36106,36138,
    36171,36204,36237,36269,36301,36328,36355,36382,36409,36441,
    36468,36495,36522,36549,36582,36615,36648,36681,36714,36747,
    36780,36813,36846,36878,36910,36942,36969,36996,37023,37056,
    37089,37122,37155,37188,37221,37254,37287,37320,37353,37386,
    37419,37452,37485,37518,37545,37572,37599,37632,37665,37698,
    37731,37764,37797,37830,37863,37896,37929,37962,37995,38028,
    38061,38094,38127,38160,38193,38226,38259,38292,38325,38358,
    38391,38424,38457,38490,38523,38556,38589,38622,38655,38688,

    38721,38754,38786,38818,38850,38882,38914,38946,38978,39010,
    12934,39036,39054,39079,39111,39144,39171,39203,39235,39267,
    39294,39326,39353,39380,39407,39440,39473,39506,39539,39572,
    39605,39637,39664,39696,39728,39755,39782,39815,39848,39881,
    39914,39947,39980,40013,40040,40067,40100,40133,40166,40199,
    40232,40265,40298,40331,40364,40396,40428,40461,40493,40520,
    40552,13043,13080,40578,40603,40636,40668,40701,40734,40766,
    40799,40831,40863,40890,40917,40944,40976,41008,41041,41073,
    41100,41127,41154,41181,41214,41246,41279,41311,41343,41370,
    13200,13223,41402,41434,41467,41499,41531,41563,41590,41617,

    41644,41677,41709,41741,41768,41795,41822,41849,41882,41914,
    41946,41978,42010,42042,42074,42107,42134,42167,42199,42231,
    42264,42296,42328,42355,42382,42409,42441,42468,42495,42522,
    42555,42587,42619,42651,42683,42715,42747,42779,42811,42844,
    42877,42910,42943,42976,43009,43042,43074,43106,43138,43165,
    43192,43224,43251,43278,43305,43338,43370,43402,43434,43466,
    43499,43532,43565,43598,43631,43664,43696,43729,43761,43793,
    43825,43857,43884,43911,43944,43976,44008,44041,44074,44107,
    44139,44171,44203,44236,44269,44302,44334,44366,44399,44432,
    44464,44497,44530,44563,44596,44629,44662,44695,44728

    } ;

static const flex_int16_t yy_def[4800] =
    {   0,
     4195, 4195, 4196, 4196, 4197, 4197, 4198, 4198, 4199, 4199,
     4200, 4200, 4201, 4201, 4202, 4202, 4194,   17, 4194,   19,
     4194,   21, 4194,   23, 4194,   25, 4194,   27, 4203, 4203,
     4204, 4204, 4194,   33, 4194,   35, 4195, 4195, 4194,   39,
     4195, 4195, 4205, 4205, 4195,   45, 4194,   47, 4194,   49,
     4194,   51, 4194,   53, 4194,   55, 4194,   57, 4194,   59,
     4194,   61, 4206, 4206, 4194,   65, 4194,   67, 4194,   69,
     4207, 4207, 4208, 4208, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4209, 4194, 4209, 4209, 4209,
     4209, 4210, 4209, 4209, 4209, 4211, 4194, 4211, 4211, 4211,

     4211, 4211, 4211, 4211, 4212, 4194, 4212, 4194, 4212, 4212,
     4212, 4212, 4212, 4212, 4212, 4213, 4214, 4213, 4194, 4213,
     4213, 4194, 4213, 4194, 4213, 4213, 4194, 4215, 4215, 4215,
     4215, 4215, 4194, 4216, 4215, 4215, 4215, 4216, 4217, 4194,
     4194, 4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217, 4218,
     4194, 4218, 4218, 4218, 4194, 4218, 4218, 4218, 4218, 4218,
     4194, 4194, 4219, 4220, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4219,  179,
      179,  179,  179,  179,  179, 4194, 4221, 4194,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179, 4194, 4194,
     4222,  179, 4194, 4194, 4194, 4194, 4223, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4223, 4223, 4223, 4223, 4223,
     4223, 4223, 4194, 4223, 4223, 4223, 4223, 4223, 4223, 4223,
      250,  250,  250,  250,  250,  250,  250,  250,  250,  250,
      250,  250,  250, 4194, 4194, 4194,  250, 4194, 4194, 4194,
     4194, 4224, 4220, 4194, 4194, 4194, 4194, 4194, 4194, 4224,
     4224, 4224, 4194, 4225, 4194, 4224, 4194, 4226, 4224, 4194,
     4194, 4227, 4194, 4194, 4227, 4227, 4227, 4227, 4227, 4227,

     4227, 4227,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
     4194,  302, 4228, 4194, 4194, 4228, 4228, 4228, 4194, 4228,
     4194, 4229, 4194, 4194, 4194, 4229, 4194, 4229, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4230, 4194, 4230, 4194, 4194, 4231, 4194,
     4194, 4194, 4231, 4231, 4231, 4231, 4231, 4194, 4232, 4194,
     4194, 4194, 4194, 4194, 4194, 4233, 4232, 4232, 4232, 4194,
     4194, 4234, 4194, 4194, 4194, 4194, 4194, 4194, 4235, 4235,

     4235, 4235, 4235, 4235, 4235, 4235, 4235, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4236, 4194, 4194,
     4194, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236,
     4236, 4236, 4236, 4236, 4236, 4236, 4236, 4237, 4236, 4194,
     4194, 4194, 4194, 4194, 4238, 4194, 4194, 4194, 4194, 4194,
     4238, 4238, 4238, 4238, 4238, 4238, 4194, 4238, 4194, 4194,
     4194, 4194, 4194, 4239, 4194, 4194, 4194, 4194, 4194, 4194,
     4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239,
     4239, 4239, 4239, 4239, 4239, 4239, 4239, 4194, 4194, 4240,

     4194, 4240, 4241, 4194, 4241, 4241, 4241, 4241, 4241, 4241,
     4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241, 4194, 4194,
     4194, 4194, 4242, 4243, 4194, 4194, 4194, 4194, 4242, 4194,
     4194, 4194, 4194, 4242, 4194, 4194, 4244, 4244, 4244, 4245,
     4245, 4194, 4246, 4245, 4245, 4245, 4245, 4247, 4248, 4247,
     4245, 4245, 4249, 4194, 4249, 4249, 4249, 4194, 4249, 4249,
     4249, 4249, 4249, 4194, 4194, 4194, 4194, 4250, 4194, 4250,
     4250, 4250, 4250, 4250, 4250, 4250, 4250, 4250, 4250, 4250,
     4250, 4250, 4250, 4250, 4250, 4194, 4250, 4194, 4251, 4194,
     4251, 4194, 4194, 4194, 4252, 4194, 4194, 4194, 4194, 4252,

     4194, 4194, 4253, 4194, 4253, 4253, 4254, 4253, 4253, 4253,
     4253, 4253, 4253, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4255, 4255, 4255, 4194, 4194, 4255, 4255,
     4255, 4255, 4255, 4256, 4256, 4256, 4256, 4256, 4256, 4256,
     4256, 4256, 4257, 4194, 4257, 4257, 4257, 4257, 4257, 4257,
     4257, 4258, 4194, 4194, 4194, 4259, 4194, 4194, 4258, 4258,
     4259, 4260, 4261, 4260, 4194, 4194, 4194, 4261, 4260, 4260,
     4260, 4261, 4194, 4261, 4262, 4262, 4262, 4262, 4262, 4194,

     4194, 4262, 4262, 4262, 4262, 4262, 4263, 4194, 4194, 4263,
     4263, 4263, 4263, 4263, 4194, 4263, 4194, 4194, 4264, 4194,
     4194, 4265, 4194, 4266, 4267, 4264, 4194, 4268, 4194, 4269,
     4194, 4194, 4194, 4194, 4194, 4194, 4194,  737, 4194, 4194,
     4270,  624, 4194, 4194, 4194, 4271, 4272, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194,  726,  726,  726, 4273,
      726,  726, 4274, 4275, 4194, 4194, 4274, 4276,  726,  726,
      726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
      726, 4264,  726,  726,  726,  726,  726,  726,  726,  726,
      726,  726,  726,  726,  726,  726,  726, 4264,  726,  726,

      726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
      726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
      726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
      726,  726,  726, 4277, 4278,  726, 4194, 4194, 4194, 4194,
     4194, 4194, 4279, 4194, 4194, 4194, 4194, 4280, 4279, 4194,
     4194, 4281, 4194, 4194, 4194, 4194, 4194, 4270,  624, 4282,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,
     4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,
     4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,

     4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,
     4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,
     4279, 4279,  922,  922,  922,  922,  922,  922,  922,  922,
      922,  922,  922,  922,  922,  922,  922,  922,  922,  922,
     4194, 4194, 4283, 4194, 4194, 4284, 4285, 4285, 4283, 4286,
     4287, 4194, 4286, 4288, 4283, 4289, 4290, 4283, 4194, 4194,
     4291, 4194, 4194, 4194, 4194, 4291, 4291, 4291, 4291, 4291,
     4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291,
     4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291,
     4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291,

     4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291,
     4291, 4291, 4291, 4291, 4291, 1015, 1015, 1015, 1015, 1015,
     1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015,
     1015, 1015, 1015, 4194, 4292, 4194, 4292, 4292, 4292, 4194,
     4194, 4194, 4194, 4293, 4294, 4295, 4194, 4296, 4194, 4194,
     4293, 4194, 4293, 4194, 4194, 4194, 4297, 4298, 4297, 4194,
     4299, 4194, 4299, 4299, 4299, 4299, 4299, 4194, 4300, 4194,
     4301, 4301, 4194, 4300, 4300, 4300, 4300, 4300, 4194, 4194,
     4302, 4303, 4303, 4304, 4194, 4304, 4304, 4194, 4304, 4304,
     4304, 4304, 4304, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4305,
     4194, 4306, 4307, 4194, 4307, 4305, 4305, 4305, 4305, 4305,
     4305, 4305, 4305, 4305, 4305, 4305, 4305, 4305, 4305, 4305,
     4305, 4305, 4305, 4305, 4305, 4305, 4308, 4309, 4305, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4310, 4310, 4310,
     4310, 4310, 4310, 4310, 4310, 4194, 4311, 4311, 4311, 4311,
     4311, 4311, 4311, 4311, 4311, 4311, 4311, 4311, 4311, 4311,
     4311, 4311, 4311, 4311, 4311, 4311, 4311, 4311, 4194, 4312,
     4194, 4312, 4313, 4313, 4313, 4313, 4313, 4313, 4313, 4313,

     4313, 4313, 4313, 4313, 4313, 4313, 4313, 4313, 4313, 4313,
     4313, 4314, 4315, 4316, 4194, 4317, 4194, 4314, 4194, 4317,
     4194, 4318, 4194, 4194, 4318, 4319, 4320, 4319, 4319, 4194,
     4321, 4194, 4321, 4319, 4319, 4319, 4319, 4322, 4194, 4194,
     4322, 4322, 4322, 4322, 4322, 4194, 4322, 4194, 4323, 4323,
     4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
     4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
     4323, 4323, 4323, 4194, 4324, 4194, 4324, 4325, 4326, 4194,
     4325, 4327, 4328, 4328, 4327, 4327, 4327, 4327, 4327, 4327,
     4327, 4327, 4194, 4194, 4194, 4194, 4329, 4329, 4330, 4194,

     4194, 4331, 4331, 4194, 4332, 4194, 4333, 4333, 4334, 4335,
     4335, 4336, 4336, 4335, 4337, 4335, 4338, 4338, 4339, 4340,
     4340, 4341, 4341, 4340, 4342, 4340, 4343, 4343, 4344, 4345,
     4345, 4346, 4346, 4345, 4347, 4345, 4194, 4194, 4329, 4329,
     4348, 4349, 4331, 4331, 4350, 4349, 4351, 4351, 4352, 4353,
     4353, 4354, 4354, 4353, 4355, 4353, 4194, 4194, 4356, 4357,
     4358, 4357, 4359, 4360, 4361, 4362, 4359, 4363, 4194, 4364,
     4365, 4365, 4366, 4367, 4194, 4194, 4194, 4368, 4369, 4194,
     4370, 4194, 1382, 4194, 4194, 4194, 4194, 4194, 4194, 4371,
     4372, 4373, 4372, 4194, 4374, 4375, 4376, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4367, 1412, 4377, 4194, 1412, 4194, 4194, 4378, 4379,
     4380, 4381, 1412, 1412, 1412, 1412, 4367, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     4194, 4194, 4194, 1412, 4194, 4194, 4382, 4194, 4383, 4384,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     4367, 1412, 1412, 1412, 1412, 1412, 1412, 4194, 4194, 4194,
     4194, 1412, 4194, 4194, 4382, 4194, 4383, 4384, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,

     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 4194, 4194, 4385, 4194, 4194,
     4386, 4387, 4194, 4388, 4389, 4390, 4194, 1393, 4391, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4388, 4388, 4388, 4388, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4194, 4194, 4388, 4194, 4194, 4194,
     4194, 4387, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4194, 4194,

     4388, 4194, 4194, 4194, 4194, 4387, 4194, 4194, 4388, 4194,
     4194, 4194, 4194, 4387, 4388, 4194, 4194, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4388, 4392,
     4194, 4393, 4394, 4395, 4393, 4194, 4396, 4397, 4398, 4194,
     4194, 4399, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400,
     4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400,
     4400, 4400, 4400, 4194, 4194, 4400, 4194, 4194, 4194, 4400,

     4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400,
     4400, 4400, 4400, 4400, 4400, 4194, 4194, 4400, 4194, 4194,
     4194, 4194, 4194, 4400, 4194, 4194, 4194, 4400, 4400, 4400,
     4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400,
     4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400,
     4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400,
     4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400,
     4401, 4402, 4403, 4404, 4405, 4406, 4194, 4407, 4407, 4407,
     4407, 4194, 4194, 4408, 4408, 4408, 4408, 4409, 4409, 4409,
     4410, 4410, 4411, 4412, 4412, 4413, 4413, 4412, 4414, 4412,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4415, 4416, 4194, 4417, 4418, 4419,
     4417, 4420, 4420, 4420, 4420, 4420, 4420, 4420, 4420, 4420,
     4194, 4194, 4420, 4194, 4416, 4417, 4420, 4420, 4420, 4420,
     4420, 4420, 4420, 4420, 4420, 4420, 4420, 4194, 4421, 4194,
     4194, 4194, 4194, 4422, 4422, 4422, 4422, 4422, 4422, 4423,
     4423, 4423, 4423, 4423, 4423, 4423, 4423, 4423, 4423, 4423,
     4423, 4423, 4423, 4423, 4423, 4423, 4423, 4424, 4424, 4424,
     4424, 4424, 4424, 4424, 4424, 4424, 4424, 4424, 4424, 4424,

     4424, 4424, 4425, 4194, 4194, 4194, 4426, 4427, 4428, 4426,
     4429, 4429, 4430, 4431, 4431, 4432, 4432, 4431, 4433, 4431,
     4434, 4435, 4436, 4435, 4437, 4437, 4437, 4437, 4437, 4437,
     4437, 4437, 4437, 4437, 4437, 4437, 4437, 4437, 4437, 4437,
     4437, 4437, 4437, 4437, 4437, 4437, 4437, 4438, 4439, 4440,
     4440, 4441, 4441, 4442, 4443, 4443, 4444, 4444, 4443, 4445,
     4443, 4446, 4194, 4447, 4194, 4194, 4194, 4194, 4448, 4449,
     4449, 4450, 4194, 4451, 4194, 4452, 4453, 4454, 4454, 4454,
     4455, 4456, 4456, 4457, 4454, 4458, 4454, 4459, 4460, 4461,
     4461, 4461, 4462, 4463, 4463, 4464, 4461, 4465, 4461, 4466,

     4467, 4468, 4468, 4468, 4469, 4470, 4470, 4471, 4468, 4472,
     4468, 4473, 4474, 4194, 4194, 4475, 4476, 4477, 4478, 4479,
     4479, 4479, 4479, 4480, 4480, 4481, 4481, 4482, 4479, 4479,
     4483, 4479, 4484, 4484, 4485, 4194, 4194, 4194, 4486, 4487,
     4488, 4489, 4194, 4194, 4490, 4194, 4194, 4194, 4194, 4194,
     4194, 4491, 4492, 4492, 4493, 4194, 4194, 4194, 4494, 4194,
     4494, 4194, 4495, 4495, 4496, 4497, 4194, 4498, 4194, 4194,
     4194, 4194, 4499, 4499, 4500, 4501, 4500, 4502, 2077, 4500,
     4194, 4194, 4503, 4194, 4504, 4505, 4194, 4194, 4506, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4507, 4493, 2102, 4508, 2102, 4509, 4510, 4511, 4194, 4194,
     4194, 4512, 2102, 2102, 2102, 2102, 4194, 4194, 4194, 2102,
     4194, 4194, 4513, 4194, 4514, 4515, 2102, 2102, 2102, 2102,
     2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
     4194, 4194, 4194, 2102, 2102, 4493, 4493, 2102, 2102, 2102,
     2102, 2102, 2102, 4194, 2102, 2102, 2102, 2102, 2102, 2102,
     4194, 4194, 4194, 2102, 2102, 2102, 2102, 2102, 2102, 2147,
     2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
     2102, 4194, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
     2102, 2102, 2102, 2102, 2102, 2102, 2147, 2102, 2102, 2102,

     2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 4194,
     4194, 4516, 4517, 4518, 4194, 4519, 4194, 4519, 4194, 4520,
     4194, 4194, 4521, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4522, 4518, 4518, 4518, 4518, 4518,
     4518, 4518, 4194, 4194, 4518, 4194, 4194, 4194, 4194, 4523,
     4518, 4518, 4518, 2251, 4518, 4518, 4518, 4518, 4518, 4518,
     4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518,
     4518, 4518, 4518, 4194, 4518, 4518, 4518, 4518, 4518, 4518,
     4518, 4518, 4518, 4518, 4518, 4518, 2268, 4518, 4518, 4518,
     4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518,

     4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 2268,
     4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518, 4518,
     4518, 4194, 4524, 4525, 4525, 4525, 4525, 4525, 4525, 4525,
     4194, 4194, 4525, 4194, 4194, 4194, 4525, 4525, 4525, 2337,
     4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525,
     4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4194,
     4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525,
     4525, 4525, 2354, 4525, 4525, 4525, 4525, 4525, 4525, 4525,
     4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525,
     4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525, 4525,

     4525, 4525, 4525, 4525, 4525, 4525, 4526, 4194, 4527, 4528,
     4529, 4530, 4531, 4194, 4532, 4532, 4532, 4532, 4194, 4194,
     4194, 4533, 4533, 4533, 4533, 4534, 4534, 4534, 4535, 4194,
     4535, 4535, 4536, 4537, 4538, 4538, 4539, 4535, 4194, 4540,
     4535, 4541, 4542, 4543, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4544, 4194, 4194, 4545, 4546, 4546, 4546,
     4546, 2471, 4546, 4546, 4546, 4546, 4546, 4546, 4546, 4546,
     4546, 4546, 4546, 4546, 4194, 4194, 4194, 4194, 4547, 4547,
     4547, 4547, 4547, 4548, 4548, 4548, 4548, 4548, 4548, 4548,

     4548, 4548, 4548, 4548, 4548, 4548, 4548, 4548, 4549, 4549,
     4549, 4549, 4549, 4549, 4549, 4549, 4549, 4549, 4549, 4549,
     4550, 4194, 4194, 4551, 4552, 4553, 4554, 4554, 4554, 4555,
     4556, 4556, 4557, 4554, 4558, 4554, 4559, 4560, 4561, 4562,
     4563, 4564, 4565, 4565, 4565, 4565, 2546, 4565, 4565, 4565,
     4565, 4565, 4565, 4565, 4565, 4565, 4565, 4565, 4565, 4565,
     4565, 4566, 4567, 4568, 4568, 4569, 4569, 4569, 4570, 4571,
     4571, 4572, 4569, 4573, 4569, 4574, 4575, 4194, 4194, 4576,
     4194, 4577, 4194, 4578, 4194, 4579, 4580, 4194, 4581, 4582,
     4581, 4583, 4584, 4585, 4586, 4585, 4587, 4588, 4589, 4590,

     4589, 4591, 4592, 4593, 4594, 4595, 4596, 4596, 4597, 4597,
     4596, 4598, 4596, 4599, 4600, 4600, 4194, 4194, 4601, 4602,
     4194, 4194, 4194, 4194, 4603, 4604, 4605, 4605, 4606, 4607,
     4194, 4194, 4608, 4608, 4608, 4194, 4609, 4610, 4611, 4611,
     4612, 4612, 4194, 4194, 4613, 4614, 4194, 4615, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4607, 2669,
     4616, 2669, 4194, 4194, 2669, 2669, 2669, 2669, 4194, 4194,
     4194, 2669, 2669, 2669, 2669, 4607, 2669, 2669, 2669, 2669,
     2686, 2669, 2669, 2669, 2669, 2669, 2669, 4194, 2669, 2669,

     2669, 2686, 4194, 2669, 2669, 2669, 2669, 2669, 2669, 2669,
     2669, 2669, 2669, 2669, 2669, 2669, 2669, 2669, 2669, 2669,
     2669, 2669, 2669, 2669, 2669, 4194, 4194, 2669, 2669, 2669,
     2669, 2669, 2669, 2669, 2669, 2669, 2669, 2669, 2669, 2669,
     2669, 4194, 4617, 2669, 2686, 2669, 2669, 2669, 2669, 2669,
     2686, 2669, 2669, 2669, 4194, 4194, 4618, 4619, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4619, 4619, 4619, 4619, 4619,
     4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619,
     4619, 4619, 4619, 4619, 4619, 4619, 4619, 4194, 4619, 4619,

     2791, 4194, 4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619,
     4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619,
     4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619, 4619,
     4619, 4619, 4619, 4619, 4619, 4194, 4194, 4619, 4619, 4619,
     4619, 4619, 4619, 4619, 4619, 4619, 4619, 4620, 4620, 4620,
     4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620,
     4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4194,
     4620, 4620, 2863, 4620, 4620, 4620, 4620, 4620, 4620, 4620,
     4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620,
     4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620,

     4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620, 4620,
     4620, 4620, 4620, 4620, 4620, 4620, 4621, 4622, 4623, 4623,
     4623, 4623, 4194, 4194, 4194, 4624, 4624, 4624, 4624, 4625,
     4625, 4625, 4626, 4194, 4627, 4628, 4626, 4194, 4629, 4630,
     4631, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4632, 4633, 4634, 4634, 4634, 4634, 4634, 4634, 4634, 4634,
     4634, 4634, 4634, 4634, 4634, 4634, 4634, 4634, 4634, 4194,
     4194, 4194, 4194, 4635, 4635, 4635, 4635, 4635, 4636, 4636,
     4636, 4636, 4636, 4636, 4636, 4636, 4636, 4636, 4636, 4636,

     4636, 4636, 4636, 4637, 4637, 4637, 4637, 4637, 4637, 4637,
     4637, 4637, 4637, 4637, 4637, 4194, 4194, 4638, 4639, 4640,
     4639, 4641, 4642, 4643, 4644, 4645, 4645, 4645, 4645, 4645,
     4645, 4645, 4645, 4645, 4645, 4645, 4645, 4645, 4645, 4645,
     4645, 4645, 4645, 4645, 4646, 4647, 4647, 4648, 4649, 4648,
     4650, 4651, 4194, 4194, 4652, 4194, 4653, 4194, 4654, 4655,
     4194, 4194, 4656, 4656, 4194, 4194, 4657, 4658, 4657, 4659,
     4194, 4660, 4661, 4194, 4662, 4663, 4664, 4664, 4664, 4194,
     4194, 4665, 4666, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4667, 4668, 4194, 4194, 4667, 3106, 3106, 3106, 3106,
     3106, 3106, 3106, 3106, 4194, 3106, 3106, 3106, 3106, 3106,
     3106, 3106, 3106, 3106, 3106, 3106, 4194, 4194, 4194, 4194,
     4194, 3106, 3106, 4194, 3106, 3106, 3106, 3106, 3106, 3106,
     3106, 3106, 3106, 3106, 3106, 3106, 3106, 3106, 3106, 3106,
     3106, 4667, 4194, 4194, 3106, 3106, 3106, 3152, 3106, 3106,
     4194, 3106, 3106, 3106, 3106, 3106, 4194, 4194, 3106, 3106,
     3106, 4194, 4194, 4194, 4194, 4669, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4670, 4194,
     4194, 4670, 4194, 4194, 4194, 4194, 4671, 4670, 4670, 4670,

     4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670,
     4670, 4670, 4670, 4670, 4670, 4670, 4670, 4194, 4194, 4194,
     4670, 4670, 4194, 4670, 4670, 4670, 4670, 4670, 4670, 4670,
     4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670,
     4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670, 4670,
     4672, 4194, 4194, 4672, 4194, 4194, 4194, 4672, 4672, 4672,
     4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672,
     4672, 4672, 4672, 4672, 4672, 4672, 4672, 4194, 4672, 4672,
     4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672,
     4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672, 4672,

     4672, 4672, 4672, 4672, 4672, 4672, 4672, 4673, 4674, 4674,
     4674, 4674, 4194, 4194, 4194, 4675, 4675, 4675, 4675, 4676,
     4676, 4676, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4677, 4678, 4194, 4194, 4678, 4194,
     4679, 4680, 4678, 4678, 4678, 4678, 4194, 4678, 4678, 4678,
     4678, 4194, 4194, 4194, 4194, 4194, 4194, 4681, 4681, 4681,
     4681, 4681, 4681, 4681, 4681, 4682, 4682, 4682, 4682, 4682,
     4682, 4682, 4682, 4683, 4683, 4683, 4683, 4683, 4683, 4683,
     4684, 4684, 4684, 4684, 4684, 4684, 4684, 4684, 4684, 4684,
     4684, 4684, 4684, 4684, 4684, 4685, 4685, 4194, 4194, 4194,

     4194, 4194, 4686, 4686, 4687, 4194, 4688, 4689, 4690, 4691,
     4691, 4194, 4692, 4692, 4194, 4693, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4694, 4695, 4694, 3433, 3433, 3433, 4194, 3433, 3433, 3433,
     4694, 3433, 3433, 3433, 3433, 3433, 3433, 3433, 4194, 4194,
     3433, 4194, 3433, 4694, 3433, 3433, 3433, 3433, 3441, 3433,
     3433, 3433, 3433, 3433, 3433, 4194, 4194, 4194, 3433, 3433,
     3433, 3433, 3433, 3433, 3433, 3433, 3433, 3433, 4194, 4194,
     4194, 3433, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4696, 4696, 4696, 4696, 4696,

     4696, 4696, 4696, 4696, 4696, 4696, 4696, 4696, 4696, 4696,
     4194, 4194, 4696, 4194, 4696, 4696, 4696, 4696, 4696, 4696,
     4696, 4696, 4696, 4696, 4696, 4696, 4696, 4696, 4696, 4696,
     4696, 4696, 4696, 4697, 4697, 4697, 4697, 4697, 4697, 4697,
     4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697,
     4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697,
     4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697, 4698, 4699,
     4699, 4699, 4194, 4194, 4194, 4194, 4194, 4700, 4701, 4701,
     4701, 4194, 4194, 4194, 4702, 4194, 4194, 4194, 4703, 4704,
     4704, 4704, 4704, 4704, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4705, 4705, 4705, 4705, 4705, 4705, 4705, 4705, 4706,
     4706, 4706, 4706, 4707, 4707, 4707, 4708, 4708, 4708, 4708,
     4708, 4708, 4708, 4709, 4709, 4194, 4194, 4194, 4710, 4711,
     4712, 4713, 4194, 4714, 4715, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 3433, 4716, 3433,
     4194, 4194, 3433, 3433, 3433, 3433, 3433, 4194, 4194, 4194,
     4194, 4194, 3433, 4194, 4194, 4717, 4194, 4718, 4719, 3433,
     3433, 3433, 4194, 3433, 4194, 4194, 4194, 3433, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 3433, 3433, 3433, 3433, 3674,
     3433, 3433, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4720, 4720, 4720, 4720, 4720, 4720,
     4720, 4194, 4194, 4720, 4194, 4194, 4720, 4194, 4194, 4194,
     4194, 4721, 4720, 4720, 4720, 4720, 4720, 4720, 4720, 4722,
     4722, 4722, 4722, 4722, 4722, 4722, 4722, 4194, 4194, 4722,
     4194, 4194, 4194, 4722, 4722, 4722, 4722, 4722, 4722, 4722,
     4723, 4724, 4194, 4725, 4726, 4194, 4194, 4727, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4728, 4728, 4728, 4728, 4728,
     4728, 4729, 4730, 4731, 4731, 4194, 4194, 4732, 4733, 4734,
     4194, 4735, 4194, 4194, 4736, 4736, 4737, 4738, 4194, 4739,
     4194, 4194, 4194, 4740, 4194, 3433, 4741, 4194, 4194, 3433,

     3433, 4194, 4194, 4194, 4742, 4743, 4744, 4742, 4194, 3433,
     4194, 4745, 4745, 3813, 3433, 4194, 4745, 4194, 4745, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 3433, 3433, 3433, 3433, 4194, 4746, 3433, 4194,
     4194, 4194, 4194, 4194, 4747, 4747, 4747, 4194, 4194, 4747,
     4747, 4747, 4747, 4747, 4748, 4748, 4748, 4748, 4748, 4748,
     4748, 4748, 4749, 4750, 4194, 4751, 4194, 4752, 4194, 4194,
     4194, 4194, 4194, 4753, 4753, 4753, 4753, 4753, 4754, 4755,
     4756, 4756, 4194, 4757, 4758, 4194, 4759, 4759, 4194, 4760,
     4194, 4194, 4194, 4194, 3433, 4761, 3433, 3433, 4762, 4194,

     4194, 4194, 4194, 4194, 4745, 4194, 4745, 3907, 4194, 4745,
     4745, 4194, 3821, 4194, 3907, 3907, 3433, 4194, 4194, 4194,
     4194, 4194, 3920, 4763, 3912, 4194, 4745, 3821, 3886, 4745,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 3433, 3433, 3433, 3433, 4194, 4764, 4765, 4766, 4764,
     4194, 3433, 4194, 4194, 4194, 4767, 4767, 4767, 4768, 4194,
     4767, 4767, 4767, 4767, 4767, 4769, 4769, 4769, 4769, 4769,
     4769, 4769, 4769, 4770, 4194, 4771, 4194, 4194, 4194, 4194,
     4194, 4772, 4772, 4772, 4772, 4772, 4773, 4774, 4775, 4775,
     4776, 4777, 4745, 3886, 4194, 4194, 4194, 4194, 4778, 4194,

     4779, 3433, 4194, 4194, 4745, 4194, 4194, 4745, 4194, 4745,
     4010, 4010, 4194, 4745, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3433, 3433,
     3433, 4194, 4194, 4194, 3433, 4194, 4194, 4194, 4780, 4781,
     4781, 4781, 4781, 4781, 4194, 4782, 4782, 4782, 4782, 4782,
     4194, 4783, 4194, 4194, 4194, 4194, 4194, 4772, 4194, 4772,
     4784, 4784, 4776, 4777, 4194, 4194, 4785, 4786, 4745, 4745,
     4745, 4010, 4745, 4194, 4015, 4064, 4745, 4077, 4017, 4194,
     4018, 4194, 4077, 4083, 4020, 4194, 4194, 4194, 4194, 4194,
     4194, 3433, 3433, 4194, 4194, 4194, 4194, 4781, 4781, 4782,

     4782, 4787, 4788, 4194, 4194, 4772, 4772, 4789, 4789, 4776,
     4010, 4010, 4064, 4194, 4194, 4790, 4194, 4110, 4010, 4194,
     4080, 4120, 4194, 4077, 4077, 4745, 4082, 4194, 4194, 4194,
     4194, 4194, 3433, 4194, 4194, 4781, 4782, 4791, 4194, 4788,
     4194, 4194, 4194, 4792, 4792, 4010, 4110, 4114, 4010, 4194,
     4793, 4194, 4010, 4745, 4010, 4077, 4194, 4194, 4194, 4194,
     3433, 4194, 4194, 4781, 4782, 4791, 4194, 4794, 4794, 4795,
     4745, 4152, 4077, 4194, 4194, 4194, 3433, 4194, 4781, 4782,
     4796, 4796, 4797, 4194, 4194, 4194, 4798, 4798, 4799, 4194,
     4194, 4194, 4194,    0, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194

    } ;

static const flex_int16_t yy_nxt[44846] =
    {   0,
     4194, 4194,   77,   78,   84,   77,   78,   84,  677,  678,
       77,   78,   79,   80,   87,   79,   80, 4194,  636,   81,
       88,   89,   85,  637,  683,  642,  645,   90,   77,   78,
      643,  646,  731,   82, 1058,  731,   82,   97,   98,   99,
      213,   91, 4194,  213,  732,  100,  214,   79,  652,   80,
       79,   84,   80,  653,   84,   88,   92,   89,  215,  101,
      290,   84,   84,  290,   84,   84,  106,  107,  339,  268,
      108,  339,  699,   98,   92,   99,  109,  110,  291,  268,
       85,  367,   83,  111,  367,   83,   85,  690,  696, 2696,
       93,   94,   77,   78,   94,  655,   87,  112, 1059,   85,

      656,  339,   88,   89,  339,  661,  719,  665,  102,   95,
      662,  109,  666,  110,  696,  114,  106,  107,  114,   85,
      108, 1427,  702,   91,  117,  118,  109,  110,  119, 1034,
      689,  670, 1034,  115,  120,  121,  671,   88,   92,   89,
      814,  122,   84,  683,  815,   84,  113,  112,  140,  141,
      390,  729,  636,  390,  729,  123,  391,  676,  142,  143,
       85,  109,  642,  110,  730,  144,  757,  681,   85,  120,
      124,  121,   93,  103,   77,   78,  103,  839, 1124,  145,
      839,  687,  392,   97,   98,   99,  688,  700,  701,   84,
      758,  104,   84,  142,  146,  143,  113,  129,   77,  130,

      129,  151,  152,  855,  125,  101, 1036,   85,  131,  132,
      133,  153,  154,  155, 1124,  134,  841,  850,  156,   98,
       92,   99,  469,  498,  498,  469,  498,  498,  147,  135,
      693,  498,  157,  696,  498,  694,  840,  850, 1297,  709,
      470,  499,  499,  131,  710,  132,  153, 1298,  154,  499,
      137,   77,  130,  137,  102,  126,  117,  118,  126,  715,
      119,  131,  132,  133,  716,  697,  120,  121,  138, 1070,
      698,  861,  862,  127,  148,  140,  141,  148,  136,  636,
      638,  158,  135,  705,  637,  142,  143,  123,  706, 1071,
      535,  535,  149,  535,  535,  855,  131,  774,  132,  696,

      775,  120,  124,  121, 1299,  832,  145,  776,  536,  536,
      833,  850,  159,  151,  152,  159,  551,  696, 1299,  551,
      142,  146,  143,  153,  154,  155,  777,  841,  863,  588,
      160,  136,  588,  778,  552,   84,  125,  779,   84,  601,
      780, 1073,  601,  634,  157,  640,  634,   85,  640,  650,
     2702,  659,  650,   85,  659,  147,  634,  602,  153,  634,
      154,  635,  668,  641,  794,  668,  795,  651,  674,  660,
      680,  674,  684,  680,  635,  684,  796,  784,  642,  785,
      669, 2741,  797,  643,  798,  685,  675,  786,  641,  787,
      683,  799,  800,  158,   76,   76,   77,   78,   76,  161,

      162,   76,  163,  161,   76,  164,  165,  166,  167,  168,
      169,  170,  171,  172,  173,  174,  174,  174,  174,  174,
      174,  174,  175,  169,  176,  169,  177,  178,  179,  179,
      179,  179,  179,  180,  181,  179,  182,  183,  184,  185,
      179,  186,  187,  188,   76,  189,  190,  191,  192,  193,
      194,  195,  196,  179,  197,  179,  179,  198,  199,  200,
      201,  202,  179,  203,  204,  205,  206,  207,  208,  179,
      179,  179,  209,  161,  210,  211,  212,   76,   76,   77,
       78,   76,  216,  162,   76,  217,  218,  219,  164,  220,
      221,  222,  223,  224,  225,  226,  227,  228,  229,  229,

      229,  229,  229,  229,  229,  230,  231,  232,  233,  234,
      235,  236,  236,  236,  236,  236,  237,  238,  236,  239,
      240,  241,  242,  236,   79,   76,   80,  243,  244,  245,
      246,  247,  248,  249,  250,  251,  236,  252,  236,  236,
      253,  254,  255,  256,  257,  236,  258,  259,  260,  261,
      262,  263,  236,  236,  236,  264,  265,  210,  266,  267,
      269,  269,   77,  270,  269,  269,  271,  269,  272,  269,
      269,  273,   79,  274,  275,  269,  269,  269,  276,  277,
      228,  229,  229,  229,  229,  229,  229,  229,  278,  269,
      269,  269,  269,  279,  280,  280,  280,  280,  280,  281,

      280,  280,  282,  280,  281,  280,  280,  283,  284,  285,
      269,  280,  280,  280,  280,  280,  280,  280,  280,  280,
      280,  280,  280,  280,  280,  280,  280,  280,  280,  280,
      280,  280,  286,  280,  280,  280,  280,  280,  269,  269,
      287,  288,  289,   76,   76,   77,   78,   76,  216,  162,
       76,  292,  218,  219,  164,  220,  221,  222,  223,  224,
      293,  294,  227,  228,  229,  229,  229,  229,  229,  229,
      229,  230,   76,  232,  233,  234,  235,  292,  292,  292,
      292,  292,  295,  296,  292,  297,  298,  299,  300,  292,
       79,   76,   80,  243,  301,  302,  303,  304,  305,  306,

      307,  308,  292,  309,  292,  292,  310,  311,  312,  313,
      314,  292,  315,  316,  317,  318,  319,  320,  292,  292,
      292,  321,  265,  210,  266,  322,   76,   76,   77,   78,
       76,   76,  162,   76,  323,   76,   76,  324,   79,   80,
       76,   76,   76,   76,  226,   81,  228,  229,  229,  229,
      229,  229,  229,  229,   76,  325,   76,   76,   76,   82,
      323,  323,  323,  323,  323,  326,  323,  323,  327,  323,
      326,  323,  323,   79,   76,   80,   76,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  328,  323,

      323,  323,  323,  323,  329,   76,   76,   76,  330,   76,
      331,   77,   78,  331,   76,   76,   76,  332,  333,  333,
       76,   79,   80,  333,   76,   76,   76,   76,   81,   76,
       76,   76,   76,   76,   76,   76,   76,  334,  335,   76,
       76,   76,   82,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,   79,   76,   80,  333,
      336,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  337,   76,   76,
       76,  338,  341,  342,  349,  341,  342,  349, 1388, 1388,

      352,  353,  343,  344,  634,  343,  344,  634,  638,  345,
      354,  355,  350,  807,  781, 1113,  826,  356,  361,  352,
      353,  361,  635,  346,  782,  691,  346,  808,  691,  354,
      355,  357,  757,  809,  783, 1114,  362,  347,  685,  344,
      347,  703,  344,  692,  703,  358,  770,  359,  636,  634,
      357,  713,  634,  637,  713,  827,  771,  803, 1062,  704,
      828,  804,  788,  772,  358,  773,  359,  635, 2755,  714,
      789,  805,  348,  790, 1394,  348,  791,  806, 1050,  792,
      360, 1050,  793,  834,  834,  834,  834, 1098,  696,  734,
      734,  734,  734,  734,  734,  734,  734, 1099, 1394,  360,

       76,  363,   77,   78,  363,   76,   76,   76,  364,   76,
       76,   76,   79,   80,   76,   76,   76,   76,   76,   81,
       76,   76,   76,   76,   76,   76,   76,   76,   76,  365,
       76,   76,   76,   82,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,   79,   76,   80,
       76,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,   76,   76,
       76,   76,  366,   76,  331,  368,   78,  331,   76,  162,
       76,  369,  333,  333,   76,   79,   80,  333,  370,   76,

      370,   76,   81,   76,   76,   76,   76,   76,   76,   76,
       76,  334,  335,   76,  371,   76,  372,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
       79,   76,   80,  333,  369,  373,  369,  369,  369,  374,
      369,  369,  369,  375,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  376,  369,  369,  369,  369,  369,  369,
      369,  337,   76,   76,   76,  377,  331,   77,   78,  331,
      850, 1052,   77,  400, 1052,  636,   76,   79,   80,  810,
      637,  642,  401,  402,   81,  853,  643,  811,  853,  403,
      604,  605,  850,  334,  554,  555,  812,  854,   82,  813,

      606,  607,   76,  404,  556,  557,  558,  608,  829, 1276,
      822,  559,   79,  823,   80,  850,  830,  401,  841,  402,
     1100,  609,  831,  824, 1101,  560,  837,  696,  638,  837,
      825, 1256,  838,  851,  638,  606,  851,  610, 1257,  556,
     2756,  557,  853,  337,  641,  853,  852,   83,  339,   77,
       78,  339,  405,  816,  854, 1105,  817,  818,  638,   79,
       80,  702,  636, 1277,  642, 1106,   85,  637,  819,  643,
      611,  820,  642,  821,  561,  334,  748,  643,  749,  750,
       82,  850,  751,  956,  956,  956,  956,  640,  752,  753,
      640,  754,  755,  756,   79, 1083,   80,  734,  734,  734,

      734,  734,  734,  734,  734,  641,  864,  961,  865,  866,
      636,  642,  867,  855, 2762,  637,  643,  961,  868,  869,
     1002,  870,  871,  872,  961,  337,  961,  850,  965,   83,
       76,  378,   77,   78,  378,   76,   76,   76,  379,   76,
       76,   76,  380,   80,   76,  370,  381,  370,   76,   81,
       76,   76,   76,   76,   76,   76,   76,   76,  382,   76,
      383,   76,  384,  385,  379,  379,  379,  379,  379,  379,
      379,  379,  379,  379,  379,  379,  379,   79,  386,   80,
       76,  379,  379,  379,  379,  379,  379,  379,  379,  379,
      379,  379,  379,  379,  379,  379,  379,  387,  379,  379,

      379,  379,  379,  388,  379,  379,  379,  379,  337,   76,
       76,   76,  389,   77,   78,  634, 1398,  393,  634, 1402,
     1403,  961,  394,  395,  396, 1068, 1034, 1399, 1068, 1034,
       81,  961,  961,  635,  562,  554,  555,  562,  961, 1011,
     1003,  397,  961,  398,   82,  556,  557,  558, 1012,  961,
     1085, 1013,  563, 1034,  842, 1070, 1034,  842,   79, 1172,
       80,  763,  763,  763,  763,  844,  560, 1037, 2763, 1173,
      845,  846,  765,  765, 1034, 1071, 1085, 1034, 1070,  760,
      556,  847,  557,  848,  950,  950,  950,  950,  766,  612,
      604,  605,  612,   83,   84,   77,   78,   84, 1071,  393,

      606,  607, 1042, 1036,  394,  395,  396,  613,  767, 1078,
     1077,  952,   85, 1049, 1049,  561,  842,  636, 1049,  842,
     1294,  609,  637,  397,  849,  398,   82,  844, 1177, 1195,
     1036,  953,  845,  846, 1039,  606, 1293,  610, 1178, 1196,
       79,  768,   80,  847,  842,  848, 1055,  842,  843, 1055,
      902, 1036,  903,  719, 1049,  844,  843, 1416, 1085,  843,
      845,  846,  904, 1040,  954,  843, 1040,  642,  843, 2764,
      611,  847,  643,  848, 1056,   83,  406,   77,  400,  406,
      640,   76, 1307,  640, 1085,  873,  842,  401,  402,  842,
     1041, 1308,  634,  640,  407,  634,  640,  844,  641,  760,

     1085,  842,  845,  846,  842, 1317,  760,   76,  404,  874,
      635,  641,  844,  847, 1318,  848,  842,  845,  846,  842,
      842, 1070,  401,  842,  402,  961, 1085,  844,  847, 1085,
      848,  844,  845,  846, 1088,  961,  845,  846,  875,  719,
     1042, 1071,  961,  847,  961,  848, 2765,  847,  636,  848,
     1425,  876,  719,  637, 1033, 1085,  843,  405,   77,   78,
     1085,  873, 1075,  842,  843, 1076,  842,  843,   79,   80,
      909, 1110, 1111,  843,  844,   81,  843,  642,  719,  845,
      846,  961,  643, 1112, 1060, 1429,  408, 1060,  409,   82,
      847,  961,  848,  719,  976,  410,  411,  977,  961,  412,

      961,  413,  641,   79,  978,   80, 1182, 1183, 2196,  414,
      415,  416, 1056,  417,  418,  879,  419,  634, 1184,  420,
      634,  421,  422, 1200,  719,  880,  423,  424,  425,  426,
      427, 1215,  881, 1201,  882,  635, 1216, 1454,   83,   76,
       76,   77,   78,   76,   76,   76,   76,  428,   76,   76,
       76,   79,   80,  429,   76,   76,   76,   76,   81,   76,
       76,   76,   76,   76,   76,   76,   76,  430,   76,   76,
       76,  431,   82,  428,  428,  428,  428,  428,  432,  433,
      428,  428,  434,  428,  435,  428,   79,   76,   80,  429,
      428,  428,  436,  437,  438,  428,  439,  428,  428,  440,

      428,  428,  441,  428,  442,  443,  428,  428,  428,  444,
      428,  445,  446,  447,  428,  428,  428,   76,   76,   76,
      448,  449,  450,  451,  452,  453,  451,  450,  450,  454,
      455,  450,  450,  450,  456,  457,  450,  450,  450,  450,
      450,  458,  450,  450,  450,  450,  450,  450,  450,  450,
      459,  459,  450,  450,  450,  460,  455,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  455,  456,
      450,  457,  450,  455,  455,  455,  461,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  462,  455,
      455,  463,  464,  465,  455,  466,  455,  455,  455,  455,

      467,  450,  450,  450,  468,  471,  471,  472,  473,  471,
      471,  471,  471,  474,  471,  471,  471,  475,  476,  471,
      471,  471,  471,  471,  477,  471,  471,  471,  471,  471,
      471,  471,  471,  478,  479,  471,  471,  471,  480,  474,
      474,  474,  474,  474,  481,  482,  474,  474,  483,  474,
      484,  474,  475,  471,  476,  471,  474,  474,  485,  486,
      487,  474,  488,  474,  474,  489,  474,  474,  490,  474,
      491,  492,  474,  474,  474,  493,  474,  494,  495,  496,
      474,  474,  474,  479,  471,  471,  471,  497,  471,  471,
      472,  473,  471,  471,  471,  471,  500,  471,  471,  471,

      501,  476,  471,  471,  471,  471,  471,  477,  471,  471,
      471,  471,  471,  471,  471,  471,  471,  479,  471,  471,
      471,  480,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  475,  471,  476,  471,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  479,  471,  471,  471,
      502,  471,  471,  472,  473,  471,  471,  471,  471,  503,
      471,  471,  471,  475,  504,  471,  471,  471,  471,  471,
      477,  471,  471,  471,  471,  471,  471,  471,  471,  471,

      471,  471,  471,  471,  480,  503,  503,  503,  503,  503,
      503,  503,  503,  503,  505,  503,  503,  503,  475,  471,
      476,  471,  503,  503,  506,  507,  508,  503,  509,  503,
      503,  510,  503,  503,  511,  503,  512,  513,  503,  503,
      503,  514,  503,  515,  516,  517,  503,  503,  503,  471,
      471,  471,  471,  518,  519,  519,  520,  521,  519,  519,
      522,  519,  523,  519,  519,  524,  525,  526,  519,  519,
      519,  519,  519,  527,  519,  519,  519,  519,  519,  519,
      519,  519,  519,  519,  519,  519,  519,  528,  529,  529,
      529,  529,  529,  529,  529,  529,  529,  529,  529,  529,

      529,  530,  519,  531,  519,  529,  529,  529,  529,  529,
      529,  529,  529,  529,  529,  529,  529,  529,  529,  529,
      529,  529,  529,  529,  529,  529,  529,  529,  529,  529,
      529,  529,  532,  519,  533,  519,  534,  519,  519,  520,
      521,  519,  519,  522,  519,  537,  519,  519,  524,  525,
      526,  519,  519,  519,  519,  519,  527,  519,  519,  519,
      519,  519,  519,  519,  519,  519,  519,  519,  519,  519,
      528,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  530,  519,  531,  519,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,

      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  532,  519,  533,  519,  539,
      540,  540,  520,  541,  540,  540,  542,  540,  543,  540,
      540,  540,  544,  545,  540,  540,  540,  540,  540,  546,
      540,  540,  540,  540,  540,  540,  540,  540,  540,  540,
      540,  540,  540,  547,  548,  548,  548,  548,  548,  548,
      548,  548,  548,  548,  548,  548,  548,  544,  549,  545,
      540,  548,  548,  548,  548,  548,  548,  548,  548,  548,
      548,  548,  548,  548,  548,  548,  548,  548,  548,  548,
      548,  548,  548,  548,  548,  548,  548,  548,  540,  540,

      540,  540,  550,   76,  564,  565,  566,  564,   76,   76,
      567,  568,   76,   76,   76,   79,   80,   76,   76,  569,
       76,   76,   81,   76,   76,   76,   76,   76,   76,   76,
       76,   76,  569,   76,   76,   76,   82,  568,  568,  568,
      568,  568,  570,  571,  568,  568,  572,  568,  573,  568,
       79,   76,   80,   76,  568,  568,  574,  575,  576,  568,
      577,  568,  568,  578,  568,  568,  579,  568,  580,  581,
      568,  568,  568,  582,  568,  583,  584,  585,  568,  568,
      568,  586,   76,   76,   76,  587,   76,   76,   77,   78,
       76,   76,   76,   76,  589,   76,   76,   76,   79,   80,

       76,   76,   76,   76,   76,   81,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,  590,   76,   82,
      589,  589,  589,  589,  589,  589,  589,  589,  589,  589,
      589,  589,  589,   79,   76,   80,   76,  589,  589,  589,
      589,  589,  589,  589,  589,  589,  589,  589,  589,  589,
      589,  589,  589,  589,  589,  589,  589,  589,  589,  589,
      589,  589,  589,  589,   76,   76,   76,   76,  591,  592,
      592,  593,  594,  592,  592,  592,  592,  595,  592,  592,
      592,  596,  597,  592,  592,  592,  592,  592,  598,  592,
      592,  592,  592,  592,  592,  592,  592,  592,  592,  592,

      592,  592,  599,  595,  595,  595,  595,  595,  595,  595,
      595,  595,  595,  595,  595,  595,  596,  592,  597,  592,
      595,  595,  595,  595,  595,  595,  595,  595,  595,  595,
      595,  595,  595,  595,  595,  595,  595,  595,  595,  595,
      595,  595,  595,  595,  595,  595,  595,  592,  592,  592,
      592,  600,  615,  616,  719, 1085,  617, 1147, 1147, 1147,
     1147,  618,  619,  620,  634, 1309, 1428,  634,  621,  622,
      623,  624,  624,  624,  624,  624,  624,  624, 1254, 1309,
     1264, 1085,  635,  625,  979,  961, 1260, 2766, 1255,  626,
      842,  980,  627,  842,  626,  981, 1261,  619,  982,  620,

     1265,  844,  961, 1085,  961,  640,  845,  846,  640, 1219,
      842, 1086, 2767,  842, 1220, 1189, 1087,  847, 1189,  848,
     1228,  844,  628,  641,  744, 1229,  845,  846,  629, 1085,
      630, 1089,  631,  632,  615,  616,  632,  847,  617,  848,
      719,  877, 1191,  618,  619,  620, 1054, 1319,  744, 1054,
      621,  633,  623,  624,  624,  624,  624,  624,  624,  624,
      878, 1319, 1085,  836,  641,  625,  842, 1236,  961,  842,
     1092,  626, 1237, 1041,  627, 1093,  626,  844,  986,  619,
      987,  620,  845,  846,  683,  961,  843,  961, 1085,  905,
      988,  906, 2768,  847,  843,  848, 1240,  843,  907,  908,

      843, 1241, 1090,  843,  628, 1090,  843, 1085,  842,  719,
      629,  842,  630, 1327,  631,  717,  718,  718,  717,  844,
     1091, 1431, 1328, 1042,  845,  846,  720,  721,  719, 1279,
      721,  883,  722, 1085,  884,  847, 1479,  848,  843, 1280,
      843,  885,  723,  721,  724, 1246,  843,  690,  918,  843,
     1247,  843,  843, 1189,  843,  843, 1189,  919,  910,  886,
      920,  842,  725,  721,  842,  842,  887, 1408,  842, 1329,
      888,  634,  844,  889,  634, 2771,  844,  845,  846,  636,
     1191,  845,  846, 1329,  637,  726,  735, 1409,  847,  635,
      848, 1276,  847,  736,  848,  737,  737,  737,  737,  737,

      737,  738,  738,  797,  642,  961,  995, 1285,  996,  643,
      739,  740, 1286, 1205, 1206,  961,  890,  640,  997,  719,
      640,  741,  961,  719,  961, 1207,  891,  893,  739,  894,
     1453,  740,  843,  915, 1192,  641,  892, 1014,  961,  895,
      843, 1015, 1299,  843, 1279, 1277,  843,  916,  961,  843,
      741,  742,  843,  917, 1280,  961, 1299,  961,  736, 1339,
      743,  743,  743,  743,  743,  743,  743,  743, 1340, 1004,
      961, 1410, 1234, 1005,  911, 1234,  740, 2772,  912,  744,
      961, 1411,  843, 1006,  745,  843,  746,  961,  913, 1007,
     1235,  843, 2773,  921,  914,  933,  740,  922,  719, 1426,

     1341,  843,  634,  744,  843,  634, 1244,  843, 1281, 1244,
      843,  873,  745,  843, 1341,  746,  717,  718,  718,  717,
      635,  843, 1266, 1434, 1245, 1267, 1268,  720,  721,  843,
      719,  721,  843,  722,  934,  843, 2774, 1269,  843,  935,
      843,  843,  843,  723,  721,  724,  929, 1291,  936,  930,
      843,  843, 1292,  843,  937, 1079,  843,  843, 1079,  931,
      843, 1080,  843,  725,  721,  735,  932, 1405,  634, 1359,
     1406,  634,  736,  641,  856,  856,  856,  856,  856,  856,
      857,  857, 2775, 1359,  843,  843,  635, 1081,  923,  739,
      740,  924,  925,  843,  640,  843,  843,  640,  843,  843,

      858,  843,  843,  926,  843,  843,  927,  739,  928,  636,
      740,  843,  641,  938,  637,  940,  642,  634,  939,  843,
      634,  643,  843, 1357, 1358,  843, 1357, 1297,  843,  858,
      742,  843, 1042, 1295,  846,  635, 1298,  736, 1296,  859,
      859,  859,  859,  859,  859,  859,  859, 1085, 1300,  941,
      942,  942,  941, 1301, 1289,  740, 1034, 1289,  744, 1034,
      944,  719, 1462,  745,  734,  734,  734,  734,  734,  734,
      734,  734, 1290, 1085, 1310,  740,  945, 1430,  946, 1311,
      719, 1038,  744,  941,  942,  942,  941,  941,  942,  942,
      941,  745,  842, 1376,  944,  842,  947, 1037,  944, 1305,

     1320,  961, 1377,  844, 1022, 1321, 1531, 1023,  845,  846,
      945,  961,  946, 1305,  945, 1435,  946, 1024,  961,  847,
      961,  848,  719,  634, 1025, 1315,  634, 1306,  949,  719,
      947, 1413,  719, 1036,  947,  941,  942,  942,  941, 1315,
      760,  635,  961,  896, 1467,  983,  944,  941,  942,  942,
      941,  897,  961, 1316,  898,  984, 1816,  899,  944,  961,
      900,  961,  945,  901,  946,  985,  941,  942,  942,  941,
      959,  960,  955,  959,  945, 1817,  946,  944, 1330,  961,
     1031,  962,  947, 1331,  719, 1032,  963,  964,  949,  961,
     1452,  719, 1496,  945,  947,  946,  961,  847,  961,  848,

      734,  734,  734,  734,  734,  734,  734,  734,  959,  960,
      961,  959,  998,  947,  999,  959,  960, 1533,  959,  962,
      961, 1000, 1001, 1295,  963,  964,  962,  961, 1296,  961,
      719,  963,  964,  640, 1300,  847,  640,  848, 1300, 1342,
     1461,  964,  847, 1360,  848,  959,  960,  958,  959,  966,
      760,  641,  959,  960,  719,  959,  962, 1221, 1221, 1221,
     1221,  963,  964,  962, 1521, 1412, 1350,  968,  963,  964,
      719, 1351,  847,  967,  848,  959,  960, 1455,  959,  847,
      719,  848,  959,  960, 1223,  959,  962,  969, 2408,  700,
      701,  963,  964,  962, 1221, 1221, 1221, 1221,  963,  964,

      696,  719,  847, 1046,  848, 1224, 1427,  959,  960,  847,
      959,  848,  719, 1509,  959,  960,  966,  959,  962,  634,
      719, 1223,  634,  963,  964,  962,  640,  719, 1456,  640,
      963,  964, 1457,  970,  847,  696,  848,  635,  989,  961,
     2148,  847, 1224,  848,  641, 1302,  990,  719,  729,  991,
     1008,  729,  992, 1459, 1303,  993,  961,  971,  994, 1026,
      961,  730,  650, 1312, 1009,  650,  972,  961, 1047,  961,
     1010,  961, 1313, 1304, 1016,  966,  973, 1017, 1018, 1485,
      651,  961,  719,  974, 1043,  975,  961, 1043,  961, 1019,
      961, 1314, 1020,  719, 1021, 1045,  961,  961, 1027, 1322,

     1460, 1046, 1540, 1028, 1029,  961, 1043,  961, 1323, 1043,
     1030, 1047,  757, 1541,  961, 1043,  961, 1045, 1043, 1118,
     1119, 1119, 1118, 1046,  719,  659, 1045, 1324,  659,  719,
     1463, 1048, 1046, 1047, 1118, 1119, 1119, 1118, 1118, 1119,
     1119, 1118, 1047,  660,  719, 1347, 1121,  719, 1122,  719,
     1325, 1458, 1516, 1048, 1348, 1482, 1051, 1118, 1119, 1119,
     1118, 1121, 1048, 1122, 1325, 1121, 1123, 1122, 1118, 1119,
     1119, 1118,  719, 1118, 1119, 1119, 1118, 1484, 1326, 1488,
      668, 1123,  719,  668, 1121, 1123, 1122, 1349,  696, 1335,
     1127,  634, 1128, 1048,  634, 1121, 1053, 1122,  669, 1126,

     1121, 1349, 1122, 1335, 1123, 1118, 1119, 1119, 1118,  635,
     1118, 1119, 1119, 1118,  719, 1123, 1487, 1336,  680, 1129,
     1123,  680, 1118, 1119, 1119, 1118, 1118, 1119, 1119, 1118,
      696,  719, 1121, 1058, 1122,  719,  641, 1121, 1130, 1122,
     1305, 1492, 1432, 1433, 1221, 1221, 1221, 1221, 1131, 1121,
      719, 1122, 1123, 1121, 1305, 1122, 1466, 1123, 1118, 1119,
     1119, 1118, 1427, 1132, 1118, 1119, 1119, 1118, 1338, 1123,
     1133, 1223,  719, 1123,  731, 1134,  684,  731, 1464,  684,
     1136,  719, 1465, 2919, 1135, 1121,  732, 1122, 1504,  685,
     1137, 1121, 1224, 1122,  683, 1118, 1119, 1119, 1118, 1118,

     1119, 1119, 1118,  713, 1124, 1123,  713, 1118, 1119, 1119,
     1118, 1123, 1118, 1119, 1119, 1118, 1118, 1119, 1119, 1118,
     1423,  714, 1121, 1138, 1122, 1225, 1121,  719, 1122, 1150,
     1150, 1151, 1150,  719, 1121, 1139, 1122, 1486, 1424, 1121,
     1124, 1122, 1123, 1121, 1332, 1122, 1123, 1140, 1436, 1118,
     1119, 1119, 1118, 1333, 1123,  719,  719, 1141, 1142, 1123,
     1511,  691, 1437, 1123,  691, 1157, 1150, 1151, 1157, 1143,
     1468, 1144, 1334, 1468,  685, 1343, 1121, 1145, 1122,  692,
      719, 1882, 1152,  635, 1344, 1151, 1151, 1151, 1151, 1058,
     1438, 1345, 1483, 1439, 1153,  719, 1123, 1149, 1154, 1440,

     1883, 1155, 1146, 1304, 1352, 1345, 1156, 1166, 1150, 1151,
     1166,  703, 1355, 1353,  703, 1302,  719, 1361, 1152, 1346,
     1421, 1421, 1421, 1421, 1303,  641, 1355, 2127,  719,  704,
     1153, 1361, 1354, 1489, 1154, 1495,  719, 1155, 1152, 2920,
     1356,  719, 1156, 1304,  719, 1362, 1378,  696, 1480, 1378,
     1153,  719, 1519, 1059, 1154,  696, 1481, 1155,  696,  730,
     1152,  719, 1156, 1505,  719,  719, 1525, 1510, 1151, 1151,
     1151, 1151, 1153, 1380,  719, 1493, 1154,  719, 1512, 1155,
      839, 1494, 1506,  839, 1156, 1226, 1226, 1513, 1226, 1226,
     1226, 2921, 1226, 1227, 1226, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226,  734,  734,  734,  734,  734,
      734,  734,  734, 1226, 1226, 1226, 1226, 1226, 1226,  719,
     1517, 1152, 1396, 1396, 1396, 1396, 1381, 1529, 1530, 1297,
     1518, 1490, 1226, 1153, 1226, 1226,  719, 1154, 1298,  840,
     1155, 1248, 1151, 1151, 1248, 1156, 1491, 1544, 1545,  766,
     1151, 1151, 1151, 1151,  719, 2094,  719, 1522, 1520,  635,
     1523, 2095, 2922, 1226, 1226, 1226, 1226, 1226, 1226,  767,
     1226, 1226, 1226, 1550, 1226, 1227, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1274, 1151, 1151,
     1274, 1552, 2923, 1551, 1152, 1226, 1226, 1226, 1226, 1226,

     1226, 1553, 1373, 1152, 1507,  641, 1153, 1975,  719, 1975,
     1154,  719, 1503, 1155, 1226, 1153, 1226, 1226, 1156, 1154,
     1427, 1508, 1155,  718,  718,  718,  718, 1156,  834,  834,
      834,  834, 1914,  839,  720,  721,  839, 1915,  721, 1908,
     1152, 1370, 1370, 1370, 1370, 1226, 1226, 1226, 1226, 1233,
      723,  721, 1153, 1908,  851,  837, 1154,  851,  837, 1155,
     1547,  838, 1070, 1548, 1156,  735, 1050,  852,  766, 1050,
      725,  721,  736,  641,  856,  856,  856,  856,  856,  856,
      857,  857, 1071, 1279,  717,  718,  718,  717,  767,  739,
      740,  842,  840, 1280,  842,  720,  721, 1366, 1367,  721,

      858, 1034, 1368, 1368, 1034, 1052, 1372,  739, 1052,  719,
      740,  723,  721, 1363,  735, 1897, 1050, 1369,  847, 1050,
      848, 1373, 2184,  738,  738,  738,  738,  738,  738,  858,
      742,  725,  721, 1052, 1898, 1535, 1052,  736, 1535,  859,
      859,  859,  859,  859,  859,  859,  859, 1913,  852,  763,
      763,  763,  763, 1034, 1040,  740, 1034, 1040,  744, 1514,
     2924, 1913, 1389,  745, 1389, 1367,  719, 1390, 1390, 1390,
     1390, 1390, 1390, 1390, 1390,  740,  766,  853, 1036, 1515,
      853, 1041,  744,  798, 1668, 1668, 1668, 1668, 1977,  854,
     1977,  745,  717,  718,  718,  717,  767,  956,  956,  956,

      956,  735, 1034,  720,  721, 1034, 1085,  721,  736,  722,
      857,  857,  857,  857,  857,  857,  857,  857, 1070,  723,
      721,  724, 1670, 1671, 1671, 1670,  740,  719, 2144,  768,
     1036, 1042, 1085,  944, 1417, 1418, 1418, 1417, 1071,  725,
      721,  717,  718,  718,  717,  720,  740,  763,  763,  763,
      763, 1782,  720,  721, 1783,  719,  721, 1034,  722, 2103,
     1034,  766,  760, 1420, 1497, 1498,  719, 1499,  723,  721,
      724, 1500, 1921, 1043,  766, 1501, 1043, 1789, 1502, 1036,
     1790,  767, 1089, 1039, 1045, 2925, 1921, 1070,  725,  721,
     1526, 1527, 1527, 1526,  767,  941,  942,  942,  941, 1374,

     1382,  720,  721, 1049, 1049,  721,  944, 1071, 1049, 1383,
     1383, 1383, 1383, 1383, 1383, 1383, 1383,  721,  721, 1363,
      842, 1034,  945,  842, 1034, 1384, 1385,  768, 1385, 1811,
     1811,  844, 1811, 1811, 1036, 1300,  845,  846,  721, 1911,
     1922, 1078,  947, 2930, 1049, 1384, 1385,  847, 1912,  848,
     1793, 1085, 1385,  734,  734,  734,  734,  734,  734,  734,
      734,  843, 1037,  843, 1793,  842, 1638,  843,  842, 1384,
     1385,  843, 1385, 1909, 1561,  719,  844, 1085,  843, 1969,
      843,  845,  846, 2165,  843, 1070, 1639, 1909,  843, 1384,
     1385,  843,  847, 1302,  848, 1070, 1385, 1386, 1036, 1941,

     1055, 1910, 1303, 1055,  736, 1071, 1387, 1387, 1387, 1387,
     1387, 1387,  738,  738,  842, 1071,  719,  842, 1942,  760,
     1786, 1304,  740, 1534, 2025,  844, 1787, 1640, 1056,  843,
      845,  846,  746,  843, 2113, 1297, 1945,  843, 1386, 1946,
      843,  847,  740,  848, 1298,  736, 1641, 1537, 1537, 1537,
     1537, 1537, 1537,  857,  857, 1234, 2931, 1068, 1234,  719,
     1068,  746, 1392,  740, 1393, 1393, 1393, 1393, 1393, 1393,
     1393, 1393, 2189, 1235,  960,  960, 1642,  960, 1393, 1393,
     1393, 1393,  843,  740,  843,  962, 1244, 1366,  843, 1244,
      963,  964,  843, 1643, 1916,  843, 1393, 1393, 1393, 1393,

     1393, 1393,  742, 1917, 1245, 1060, 1366, 2043, 1060,  736,
     1954,  743,  743,  743,  743,  743,  743,  743,  743,  843,
     1070, 1644, 1918,  641, 1954,  843, 2043,  740,  842,  843,
      744,  842,  843, 1056, 1042,  745,  843,  746,  843,  844,
     1071, 1952,  843, 1645,  845,  846,  843,  740, 1955,  843,
     1953, 4194, 1784, 1956,  744,  847, 1968,  848, 1785, 1147,
     1147, 1147, 1147,  745, 2434, 1976,  746, 1441, 1442, 1443,
     1443, 1442, 1441, 1441, 1441, 1444, 1441, 1441, 1441, 1445,
     1446, 1441, 1441, 1446, 1441, 1447, 1441, 1974, 1555,  719,
     2434,  842, 1968,  797,  842, 1448, 1446, 1449, 1441, 1441,

     1441, 1987,  844, 1987, 1791, 1085, 4194,  845,  846, 1858,
     2034, 2015, 1858, 1792, 1441, 1450, 1446, 1441,  847,  843,
      848,  843, 1974,  719,  843, 1646, 1647, 2015,  719,  843,
      843, 1085,  843, 2174,  843, 1648, 2183,  843, 1122, 1451,
     1989, 1999, 1989, 1999, 1554, 1441, 1441, 1441, 1441, 1444,
     1469, 1470, 1471, 1471, 1470, 1469, 1469, 1469, 1472, 1469,
     1469, 1469, 1473, 1474, 1469, 1469, 1474, 1469, 1475, 1469,
     1906, 1906, 1906, 1906, 1906, 1906, 1302,  735, 1476, 1474,
     1477, 1469, 1469, 1469,  736, 1303,  857,  857,  857,  857,
      857,  857,  857,  857,  873, 1649, 1279, 1469, 1478, 1474,

     1469,  843,  740,  843, 1304,  719, 1280,  843, 2176,  719,
      843,  843,  843, 1969,  843, 1650,  843, 1796, 1085,  906,
      843, 1969,  740,  843, 2115, 2001, 1797, 2001, 1469, 1469,
     1469, 1469, 1472, 1392,  719, 1538, 1538, 1538, 1538, 1538,
     1538, 1538, 1538, 1090, 1085, 1798, 1090, 1957, 1085, 1538,
     1538, 1538, 1538,  843, 2105, 1654, 1958, 2023, 1969,  843,
     1281, 1091,  842,  843, 2932,  842,  843, 1538, 1538, 1538,
     1538, 1538, 1538,  844, 1085, 1959,  719,  842,  845,  846,
      842,  842, 1189,  719,  842, 1189,  696, 1919,  844,  847,
     1427,  848,  844,  845,  846, 2147,  842,  845,  846,  842,

      905, 1919, 1923, 2011,  847, 2011,  848,  844,  847, 1191,
      848,  842,  845,  846,  842, 1920, 1923, 2013,  842, 2013,
     2942,  842,  844,  847, 1977,  848, 1977,  845,  846,  844,
     1924,  843, 1557, 1652,  845,  846,  719,  843,  847, 1556,
      848,  843, 2116, 1653,  843,  847,  842,  848, 2943,  842,
     1558, 2019, 1962, 2019,  843,  842, 1656,  844,  842, 1657,
      843, 1962,  845,  846,  843, 1559,  844,  843, 1976,  719,
     1560,  845,  846,  847,  842,  848, 1976,  842,  719, 1085,
     1963, 1561,  847,  842,  848,  844,  842, 1794, 2944, 2114,
      845,  846, 1795, 1960,  844, 2130,  719, 1799, 1085,  845,

      846,  847, 2042,  848, 2042, 1085,  842, 1960,  719,  842,
      847, 1799,  848, 1976, 2131,  842, 1562,  844,  842, 2138,
     1563, 1961,  845,  846, 1085, 1800,  844, 1357, 1358, 1564,
     1357,  845,  846,  847,  842,  848,  719,  842,  842,  797,
     1289,  842,  847, 1289,  848,  844,  843, 1658,  843,  844,
      845,  846,  843, 1565,  845,  846,  843,  842, 1290,  843,
      842,  847,  719,  848, 2129,  847, 1568,  848,  844, 1189,
      719, 1970, 1189,  845,  846, 1566, 1567, 2949,  842, 1378,
     1971,  842, 1378, 1964,  847, 1569,  848,  842, 1570,  844,
      842, 2071,  730, 2169,  845,  846, 1191, 1964,  844, 1304,

     2072, 2072, 1571,  845,  846,  847, 1380,  848, 1279, 1969,
     1572, 1965, 1969, 1573,  847,  719,  848, 2157, 1280, 1574,
     1575, 1576, 1575, 1575, 1576, 1575, 1575, 1575, 1577, 1575,
     1575, 1575, 1578, 1575, 1575, 1575, 1575, 1579, 1580, 1575,
     2036, 2037, 1584, 2036,  842, 2950,  719,  842, 1581, 1575,
     1582, 1575, 1575, 1575, 1969,  844, 1585, 2149, 2038, 1381,
      845,  846,  719, 1119, 1119, 1119, 1119, 1575, 1575, 1575,
     1575,  847,  843,  848,  843,  719, 2159,  842,  843, 1966,
      842, 1651,  843, 1966, 1976,  843, 1043, 1976,  844, 1043,
     1824, 2003, 1583,  845,  846, 2186,  663, 1045, 1575, 1575,

     1575, 1575, 1577, 1046,  847,  842,  848,  719,  842,  842,
     1123,  798,  842, 1047, 1982, 1586,  844,  719,  696,  719,
      844,  845,  846, 1983,  842,  845,  846,  842,  842, 1976,
     2200,  842,  847, 1048,  848,  844,  847, 2151,  848,  844,
      845,  846, 1314, 1587,  845,  846, 2132, 1588, 2032,  842,
     2032,  847,  842,  848, 1972,  847, 1189,  848,  842, 1189,
      844,  842, 1994, 2133,  719,  845,  846, 1589, 1972,  844,
     2134, 1995, 1984, 1590,  845,  846,  847,  842,  848, 1969,
      842,  719, 1306, 1191, 2187,  847, 1984,  848,  844, 1591,
     1324,  696,  719,  845,  846,  798, 1592,  843,  842, 1659,

     1316,  842,  842,  843,  847,  842,  848,  843, 1593,  844,
      843, 2175, 1996,  844,  845,  846,  719,  842,  845,  846,
      842, 2035, 1594, 2035, 2025,  847, 1996,  848,  844,  847,
     2164,  848,  842,  845,  846,  842,  842, 1192, 1966,  842,
     1326, 1595, 1966,  844,  847, 1596,  848,  844,  845,  846,
      663,  719,  845,  846,  961, 2004, 1755,  797,  719,  847,
      961,  848, 1597,  847,  961,  848,  719,  961, 1561, 1631,
     2140, 2204, 1598, 1599, 1600, 1599, 1599, 1600, 1599, 1599,
     1599, 1601, 1599, 1599, 1599, 1602, 1599, 1599, 1599, 1599,
     1603, 1604, 1599, 2044, 2044, 2044, 2044,  719, 1615, 2008,

     1620, 1605, 1599, 1606, 1599, 1599, 1599,  719,  842, 2195,
      722,  842,  719, 2008, 2172,  842, 2146, 1105,  842,  844,
     1599, 1599, 1599, 1599,  845,  846,  844, 1336,  843,  719,
      843,  845,  846, 2150,  843,  847,  719,  848,  843, 1655,
     2156,  843,  847, 2212,  848, 2951, 2212, 1828, 1828, 1828,
     1828, 1599, 1599, 1599, 1599, 1601, 1607, 1608, 1607, 1607,
     1608, 1607, 1607, 1607, 1609, 1607, 1607, 1607, 1610, 1607,
     1607, 1607, 1607, 1611, 1612, 1607, 2952, 1624, 1621,  719,
     1616, 1617, 1617, 1616, 1613, 1607, 1614, 1607, 1607, 1607,
     2170,  844, 1662, 1662, 1662, 1662,  845,  846, 2953,  842,

      719,  719,  842, 1607, 1607, 1607, 1607,  847,  719,  848,
      844, 2180, 2158, 2672,  842,  845,  846,  842, 2173,  952,
      719, 1831, 1831, 1831, 1831,  844,  847, 1830,  848,  842,
      845,  846,  842,  719, 1607, 1607, 1607, 1607, 1609,  953,
      844,  847, 1618,  848,  842,  845,  846,  842,  842,  719,
     1619,  842,  719, 2160, 2177,  844,  847, 1427,  848,  844,
      845,  846, 1622,  842,  845,  846,  842,  834,  834,  834,
      834,  847, 1664,  848,  844,  847, 1105,  848,  842,  845,
      846,  842,  842, 2182, 1623,  842, 2182, 1561, 1811,  844,
      847, 1811,  848,  844,  845,  846,  719,  842,  845,  846,

      842, 1830,  719, 1626, 1625,  847, 2168,  848,  844,  847,
     2185,  848,  719,  845,  846,  843,  842,  843, 1627,  842,
     2006,  843, 2146,  719,  847,  843,  848,  844,  843, 2007,
     2017, 2191,  845,  846,  719,  942,  942,  942,  942,  940,
     2040, 1629, 1628,  847, 2017,  848,  944, 1630, 1334,  941,
      942,  942,  941,  719, 2040, 1973, 1632, 1973, 1346, 1973,
      944, 1973,  945, 1665, 1665, 1665, 1665, 2003, 1362, 2010,
      719, 2181,  663, 1633, 2004, 1634,  945,  719,  946, 1635,
      719, 2171,  947, 1636, 2190, 2178, 1637,  719, 2697, 2179,
      952,  719,  941,  942,  942,  941,  947,  760,  950,  950,

      950,  950,  719,  944, 1666, 1666, 1666, 1666, 2188, 2954,
      953,  950,  950,  950,  950,  944, 2526,  719, 2526,  945,
     2197,  946,  719, 1966, 1966,  952,  941,  942,  942,  941,
     2192,  952, 1966,  946, 2955, 1991, 2194,  944,  952,  947,
      654, 2228, 2193, 1664,  961,  953,  961, 2229,  719, 1749,
      961,  953, 1427,  945,  961,  946, 2956, 1680,  953,  941,
      942,  942,  941,  959,  960, 2588,  959,  949,  719, 1966,
      944,  719, 2026,  947,  962, 2201, 2203, 2587,  954,  963,
      964, 2027,  959,  960,  719,  959,  945,  719,  946,  719,
      847,  954,  848,  962, 2065, 2065, 2065, 2065,  963,  964,

     1354, 2202,  959,  960, 2205,  959,  947,  760, 2206,  847,
      961,  848,  961,  962, 1070,  696,  961, 1756,  963,  964,
      961,  959,  960,  961,  959,  959,  960, 2632,  959,  847,
     2632,  848,  962,  961, 1071,  961,  962,  963,  964, 1757,
      958,  963,  964,  961,  959,  960,  961,  959,  847, 2424,
      848,  719,  847, 2135,  848,  962, 1421, 1421, 1421, 1421,
      963,  964, 2957, 2958,  959,  960,  961,  959, 1758, 2136,
     2137,  847,  961,  848, 1673,  962,  961, 1759,  719,  961,
      963,  964,  998,  959,  960, 1674,  959,  959,  960, 2209,
      959,  847, 2443,  848,  962,  961, 2419, 1765,  962,  963,

      964,  961, 2420,  963,  964,  961,  959,  960,  961,  959,
      847,  719,  848, 2426,  847, 2198,  848,  962, 2443, 2427,
      719, 1468,  963,  964, 1468, 2199, 1675, 2675,  959,  960,
     2536,  959, 2536,  847, 1676,  848, 2584,  959,  960,  962,
      959, 1976, 2670, 1070,  963,  964, 2465, 1535,  962, 2465,
     1535,  719, 1677,  963,  964,  847, 1678,  848,  959,  960,
      852,  959,  719, 1071,  847, 1679,  848,  959,  960,  962,
      959, 2694,  719, 2466,  963,  964, 2166, 1054,  962, 1858,
     1054, 2610, 1858,  963,  964,  847, 2034,  848, 2422,  959,
      960, 1680,  959, 2588,  847,  641,  848, 2587,  959,  960,

      962,  959, 2712, 2959, 1041,  963,  964, 1681, 1122,  962,
     1070,  961,  719,  961,  963,  964,  847,  961,  848, 1750,
      719,  961, 1683, 1682,  961,  847, 2677,  848,  959,  960,
     1071,  959, 2538, 2659, 2538,  959,  960, 2660,  959,  962,
     1617, 1617, 1617, 1617,  963,  964,  962,  956,  956,  956,
      956,  963,  964, 2423, 1042,  847,  966,  848,  719, 1684,
      959,  960,  847,  959,  848,  719, 2691, 1685, 1686, 2676,
     2028,  962,  961, 2542,  961, 2542,  963,  964,  961, 1687,
      959,  960,  961,  959, 2028,  961, 1688,  847, 2960,  848,
     2531,  962, 1221, 1221, 1221, 1221,  963,  964, 1356, 2532,

      959,  960, 1751,  959,  961, 2962, 2980,  847,  961,  848,
     1689,  962,  961,  696, 2588,  961,  963,  964, 1918, 1223,
     1966, 1752, 1753, 1969, 1690, 1969, 2587,  847,  961,  848,
      961, 1966, 2567, 1691,  961, 2981, 1692, 1282,  961, 1754,
     1224,  961, 1693, 1575, 1694, 1695, 1575, 1694, 1575, 1575,
     1575, 1696, 1575, 1575, 1575, 1697, 1575, 1575, 1575, 1575,
     1698, 1699, 1575, 2982, 1701, 1969, 1858,  959,  960, 1858,
      959, 1581, 1575, 1582, 1575, 1575, 1575, 1070,  962, 1118,
     1119, 1119, 1118,  963,  964, 1118, 1119, 1119, 1118, 2071,
     1575, 1575, 1575, 1575,  847, 1122,  848, 1071, 2072, 2072,

      959,  960, 2575,  959, 2575, 2577, 1824, 2577, 1122, 2071,
     1969,  962, 1121, 1969, 1122, 1700,  963,  964, 2072, 2072,
     2425, 1575, 1575, 1575, 1575, 1696, 1123,  847,  719,  848,
      959,  960, 1123,  959, 2617, 2686, 1702,  959,  960, 2618,
      959,  962, 1150, 1150, 1151, 1150,  963,  964,  962, 1668,
     1668, 1668, 1668,  963,  964, 1969, 2983,  847,  842,  848,
     2533,  842,  959,  960,  847,  959,  848, 2579, 2643, 2579,
      961, 1703, 1767,  962, 2533, 1768,  961, 2984,  963,  964,
      961,  959,  960,  961,  959,  847, 2146,  848, 1920,  847,
      719,  848,  962, 2985, 2643, 1152, 1704,  963,  964, 1706,

     1705,  959,  960,  961,  959, 1763, 2986, 1153,  847,  961,
      848, 1154,  962,  961, 1155, 1764,  961,  963,  964, 1156,
      959,  960,  719,  959,  959,  960, 1707,  959,  847, 2987,
      848,  962,  961, 2687,  961,  962,  963,  964,  961, 2570,
      963,  964,  961, 1766, 1760,  961, 1708,  847, 2571,  848,
      961,  847,  961,  848,  959,  960,  961,  959, 2689, 2073,
      961,  719, 2988,  961, 1761,  962,  719, 1959,  999, 1709,
      963,  964, 2701,  959,  960, 2582,  959, 2582, 1976, 1710,
     1976,  847, 2989,  848,  962, 1385, 1085, 1385, 1711,  963,
      964, 2692,  959,  960,  719,  959, 2110, 2111, 2111, 2110,

      847, 2540,  848,  962,  961, 1385,  961,  720,  963,  964,
      961, 1385, 1085, 1762,  961, 2540, 2990,  961, 1712,  847,
     1976,  848, 1713,  959,  960, 2106,  959, 2435, 1085, 1924,
      959,  960,  719,  959,  962, 2688, 2436, 1714, 2708,  963,
      964,  962,  719, 1680, 1966, 1966,  963,  964, 1966,  719,
      847, 2678,  848, 2641, 1085, 1798, 1979,  847, 2441,  848,
     2441,  644, 1715, 1599, 1716, 1717, 1599, 1716, 1599, 1599,
     1599, 1718, 1599, 1599, 1599, 1719, 1599, 1599, 1599, 1599,
     1720, 1721, 1599, 2643, 2700, 1966, 1966,  719, 2991, 1728,
     1966, 1605, 1599, 1606, 1599, 1599, 1599, 2021, 2690,  719,

     1732, 1427,  695,  959,  960,  719,  959, 2693,  719, 2643,
     1599, 1599, 1599, 1599,  962,  961, 1769,  961,  719,  963,
      964,  961, 1966, 1966, 2709,  961, 1966,  961,  961, 1770,
      847, 2022,  848,  961,  644, 2584, 2996,  961, 2584, 1980,
      961, 1599, 1599, 1599, 1599, 1718, 1607, 1722, 1723, 1607,
     1722, 1607, 1607, 1607, 1724, 1607, 1607, 1607, 1725, 1607,
     1607, 1607, 1607, 1726, 1727, 1607, 1177, 1731, 1966, 1976,
      959,  960, 1976,  959, 1613, 1607, 1614, 1607, 1607, 1607,
     2584,  962, 1118, 1119, 1119, 1118,  963,  964,  842,  959,
      960,  842,  959, 1607, 1607, 1607, 1607,  847,  719,  848,

      962, 2704,  719, 2997,  842,  963,  964,  842, 2730, 1121,
     2695, 1122,  719,  719, 1976,  847,  847,  848,  848,  959,
      960, 2699,  959, 2572, 1607, 1607, 1607, 1607, 1724, 1123,
      962,  847, 1729,  848, 2998,  963,  964, 2572,  959,  960,
     1730,  959,  959,  960, 1834,  959,  847,  842,  848,  962,
      842, 1961, 1733,  962,  963,  964, 1966, 1177,  963,  964,
     2430,  959,  960,  719,  959,  847, 2707,  848, 2431,  847,
     2750,  848,  962, 1084,  847,  719,  848,  963,  964,  842,
      959,  960,  842,  959,  959,  960, 2430,  959,  847, 2714,
      848,  962, 1680, 1734,  719,  962,  963,  964,  719, 1043,

      963,  964, 1043, 1085, 1735, 1427,  847,  847,  848,  848,
     1045,  847,  719,  848,  959,  960, 1046,  959, 2711,  700,
      701, 1736, 1366, 1367,  719,  962, 1047, 1368, 1368, 1085,
      963,  964,  797,  959,  960, 1737,  959,  959,  960, 1738,
      959,  847, 1369,  848,  962,  961, 1048,  961,  962,  963,
      964,  961, 2999,  963,  964,  961,  959,  960,  961,  959,
      847,  719,  848, 2705,  847,  696,  848,  962,  719, 1033,
     2710, 3000,  963,  964,  719, 2444, 1043, 2444, 1739, 1043,
     1053, 2118, 2706,  847, 2118,  848, 2716, 1045, 1079, 1742,
     1367, 1079, 1740, 1046, 1080,  719, 1969,  719, 1741, 1118,

     1119, 1119, 1118, 1047, 1969, 2729,  641, 1118, 1119, 1119,
     1118, 1118, 1119, 1119, 1118, 1743,  959,  960, 2720,  959,
     1081,  719, 3001, 1048,  719, 1966, 1121,  962, 1122, 2430,
     1775, 2713,  963,  964, 1121, 2738, 1122, 1084, 1121, 1966,
     1122, 1969, 2432,  847,  719,  848, 1123, 2715, 2717, 1136,
     1966, 1282, 1832, 2719, 1123, 2430, 2568, 3002, 1123,  719,
     1118, 1119, 1119, 1118,  719, 1042,  719, 1833, 1118, 1119,
     1119, 1118, 2718, 1744,  719, 1745, 1366, 1366, 2721, 1746,
     2740, 2108, 2108, 1747,  719, 2725, 1748, 1121,  719, 1122,
     1118, 1119, 1119, 1118, 2769, 1121, 2109, 1122, 2770, 1118,

     1119, 1119, 1118, 1118, 1119, 1119, 1118, 1123, 1221, 1221,
     1221, 1221, 1973, 1973, 3003, 1123, 1973, 1121, 3004, 1122,
     1118, 1119, 1119, 1118, 1979, 1835, 1121,  719, 1122,  644,
     1121, 2584, 1122, 2732, 2722, 1223, 1973, 1123, 1836, 2584,
     2439, 1837, 2739, 1973, 1366,  719, 1123, 1121, 2431, 1122,
     1123,  719, 2723, 1084, 1973, 2567, 1224, 3008, 1973,  719,
     1282, 1973, 1973, 1838, 1976, 1973, 2439, 1123, 1828, 1828,
     1828, 1828, 1976, 1986, 1839,  719, 2584, 2724, 1980, 1118,
     1119, 1119, 1118,  797,  719, 1840, 1599, 1841, 1842, 1842,
     1841, 1599, 1599, 1599, 1843, 1599, 1599, 1599, 1599, 1599,

     1599, 1599, 1599, 1599, 1599, 1599, 1121, 1973, 1122, 1976,
     1118, 1119, 1119, 1118, 1844, 1599, 1845, 1599, 1599, 1599,
     1828, 1828, 1828, 1828,  700, 2606, 1123, 2437, 1085, 1118,
     1119, 1119, 1118, 1599, 1846, 1599, 1599, 1121,  719, 1122,
     1427, 2437, 1118, 1119, 1119, 1118, 2753,  719, 1830, 1136,
     1118, 1119, 1119, 1118, 1085, 1800, 1121, 1123, 1122, 1118,
     1119, 1119, 1118, 1200, 1599, 1599, 1599, 1599, 1843, 1121,
     2025, 1122, 2731, 1973, 1847,  719, 1123, 1121,  719, 1122,
     1118, 1119, 1119, 1118, 1973, 2574, 1121, 2752, 1122, 1123,
     2568, 1848, 1118, 1119, 1119, 1118,  719, 1123, 2736, 3009,

     1830,  719, 1849, 2728, 2588, 2587, 1123, 1121, 2587, 1122,
     2733, 1118, 1119, 1119, 1118, 1850, 1851,  719,  719, 1121,
     2737, 1122, 1118, 1119, 1119, 1118,  719, 1123, 1118, 1119,
     1119, 1118,  719, 2746, 2686, 1852, 2588, 2587, 1121, 1123,
     1122, 1151, 1151, 1151, 1151, 2587, 3010, 1497, 1853, 1121,
     2587, 1122,  700,  701,  719, 1121, 2744, 1122, 1123,  700,
     2614, 1854,  719, 1157, 1150, 1151, 1157,  719, 2754, 1123,
     1855, 2036, 2037, 1856, 2036, 1123, 1221, 1221, 1221, 1221,
     1857,  635, 2587, 1166, 1150, 1151, 1166, 1966, 1966, 2038,
     1616, 1617, 1617, 1616, 1152, 2751, 1966,  719,  696,  654,

      719,  641, 1200, 1223, 1992, 2034, 1153, 3011, 2745, 1149,
     1154, 2036, 2037, 1155, 2036, 2734, 1152,  847, 1156,  848,
     2048, 2049, 2049, 2048, 1224, 3012, 3013,  719, 1153, 2038,
     2735, 2050, 1154, 1966, 3014, 1155, 1152, 1973, 1973, 2583,
     1156, 1973, 1973, 2583, 3015, 1904, 1973, 2051, 1153, 1991,
     1973,  663, 1154, 1998,  654, 1155,  663, 1225, 1992, 2588,
     1156, 1226, 1226, 2529, 1226, 1226, 1226, 2052, 1226, 1227,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 2588, 2587, 1973, 2583, 1966, 1966, 1973, 2583, 1226,
     1226, 1226, 1226, 1226, 1226, 2212, 2010,  695, 2212, 1366,

     1367,  663, 2023, 2465, 1368, 1368, 2465, 1969, 1226,  798,
     1226, 1226, 1248, 1151, 1151, 1248,  719, 1973, 1973, 1369,
     1973, 1973, 1370, 1370, 1370, 1370, 2584, 2616, 2747, 2021,
      635, 2022, 2031, 2748,  695, 1976,  719, 2023, 2749, 1226,
     1226, 1226, 1226, 1226, 1226, 3026, 1226, 1226, 1226,  766,
     1226, 1227, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 2030, 3027, 1152, 2030, 1367, 3028,  767,
     2588, 1226, 1226, 1226, 1226, 1226, 1226, 1153, 3033, 3034,
     2244, 1154, 2587, 2244, 1155, 1260, 3035, 1372, 3036, 1156,
     1226,  842, 1226, 1226,  842, 1274, 1151, 1151, 1274, 2067,

     2215, 2067, 1373, 2215, 2068, 2068, 2068, 2068, 2068, 2068,
     2068, 2068, 2217,  641, 1147, 1147, 1147, 1147,  847, 3037,
      848, 1226, 1226, 1226, 1226, 1233, 1599, 1599, 1599, 1599,
     1599, 1599, 1599, 1599, 1934, 1599, 1599, 1599, 1599, 1599,
     1599, 1599, 1599, 1599, 1599, 1599, 2814, 3038, 1152, 1260,
      717,  718,  718,  717, 1599, 1599, 1599, 1599, 1599, 1599,
     1153,  720,  721, 3039, 1154,  721, 3040, 1155, 2044, 2044,
     2044, 2044, 1156, 1599, 1599, 1599, 1599,  723,  721,  724,
     1375, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 2056,
     2056, 2056, 2056, 2056, 2056, 2056, 2056,  725,  721, 3041,

     1831, 1831, 1831, 1831, 1599, 1599, 1599, 1599, 1934,  717,
      718,  718,  717, 1366, 1367, 2056, 1386, 3042, 1368, 1368,
      720,  721, 3043,  736,  721, 2069, 2069, 2069, 2069, 2069,
     2069,  857,  857, 1369, 3044, 1070,  723,  721,  724, 1276,
     2331,  740, 3047, 2331, 2056, 1396, 1396, 1396, 1396, 1671,
     1671, 1671, 1671, 3047, 2585, 1071,  725,  721, 2585, 2926,
      944,  740, 1418, 1418, 1418, 1418, 2602, 1828, 1828, 1828,
     1828,  663,  766,  720, 2568, 2054,  717,  718,  718,  717,
     1830, 1367, 1969, 2081, 2082, 2082, 2081,  720,  721,  766,
     2584,  721,  767,  722,  720,  721, 1973, 1976,  721, 2118,

     2439, 1070, 2118,  723,  721,  724, 2885, 1085, 2440,  767,
     2084,  721, 2085, 2432, 2581, 2742, 2743, 1417, 1418, 1418,
     1417, 1071, 1279,  725,  721, 1373, 2439, 3056,  720, 2927,
     2086,  721, 1280, 1085, 2586, 2055, 2057, 2058, 2058, 2057,
     1417, 1418, 1418, 1417,  766, 1085, 2106, 1830, 2060, 2588,
     2584,  720, 1070, 2583, 2583, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2062,  767,  695, 1070,  766, 2584, 1420,
      695, 1085, 1071, 2141, 2142, 2142, 2141, 2322, 2322, 2322,
     2322,  700,  696, 2063, 2143,  721, 1071,  767,  721, 2434,
      696,  700, 1670, 1671, 1671, 1670, 2929, 2936, 2928, 2608,

      723,  721, 1363,  944,  952, 3062, 2584, 2142, 2142, 2142,
     2142, 1370, 1370, 1370, 1370, 2434, 1381, 1382, 2143,  721,
      725,  721,  721, 2936,  953, 2588, 1383, 1383, 1383, 1383,
     1383, 1383, 1383, 1383,  723,  721, 2587, 2052,  766, 3005,
     2063, 3006, 1384, 1385, 3007, 1385, 1671, 1671, 1671, 1671,
     1670, 1671, 1671, 1670,  725,  721, 2588,  944,  767, 2588,
     2587,  944, 1384, 1385, 2065, 2065, 2065, 2065, 1085, 1385,
     1386, 2587, 2044, 2044, 2044, 2044, 1372,  736, 2584, 2070,
     2070, 2070, 2070, 2070, 2070,  738,  738, 2583, 2583,  722,
      842, 1373, 1085,  842, 1085,  740, 2583,  960,  960,  654,

      960,  844, 3082, 3083,  654,  746,  845,  846,  962, 1468,
      718,  718, 1468,  963,  964,  740, 3087,  847, 1085,  848,
      720,  721, 3088, 2610,  721, 1370, 1370, 1370, 1370, 2622,
     2622, 2622, 2622, 2583,  746, 2077,  723,  721, 1363, 3089,
     2050, 2236, 2078, 2443, 2079, 2079, 2079, 2079, 2079, 2079,
     2079, 2079,  766, 3090, 3091, 3092,  725,  721, 2079, 2079,
     2079, 2079, 1366, 1367, 1969, 2080, 1969, 2108, 2108, 2443,
     2632, 2588,  767, 2632, 3095, 2941, 2079, 2079, 2079, 2079,
     2079, 2079, 2647,  700,  701, 2161, 2162, 2162, 2161, 3060,
     1372, 2080,  717,  718,  718,  717, 2163,  721, 3060,  842,

      721, 2941,  842,  720,  721, 1373, 1969,  721, 2759,  722,
      844, 2759,  723,  721, 1363,  845,  846, 3061, 3096,  723,
      721,  724, 3097, 3098, 2760, 2761,  847, 3083,  848,  696,
     1367, 1415,  725,  721, 2634, 2634, 2634, 2634,  842,  725,
      721,  842, 3134, 2102, 2117, 2118, 2119, 2119, 2118, 2117,
     2117, 2117, 2120, 2117, 2117, 2117, 2121, 2122, 2117, 2117,
     2122, 2117, 2123, 2117, 1561,  847,  719,  848, 2162, 2162,
     2162, 2162, 2124, 2122, 2125, 2117, 2117, 2117, 2215, 2163,
      721, 2215,  719,  721, 2635, 2635, 2635, 2635,  719, 3125,
     2217, 2117, 2126, 2122, 2117,  723,  721, 2218, 2218, 2218,

     2218, 2218, 2218, 2218, 2218, 2068, 2068, 2068, 2068, 2068,
     2068, 2068, 2068, 2672, 1381,  725,  721, 3153,  719, 2584,
     3106, 2584, 2117, 2117, 2117, 2117, 2120, 1469, 1470, 1471,
     1471, 2154, 1469, 1469, 1469, 1472, 1469, 1469, 1469, 1473,
     1474, 1469, 1469, 1474, 1469, 1475, 1469, 3150, 1976, 3113,
     1976, 1526, 1527, 1527, 1526, 1476, 1474, 1477, 1469, 1469,
     1469, 2584,  720,  721, 1381, 1811,  721,  719, 1811, 3154,
     1527, 1527, 1527, 1527, 1469, 1478, 1474, 1469,  721,  721,
     1363,  720,  721, 2155, 2588,  721, 1662, 1662, 1662, 1662,
     1976, 3161, 1665, 1665, 1665, 1665, 2587,  721,  721,  721,

     1526, 1527, 1527, 1526, 3172, 1469, 1469, 1469, 1469, 1472,
      719,  720,  721,  952,  842,  721, 3093,  842,  721,  952,
     2945, 2651, 2652, 2652, 2651,  844, 3094,  721,  721, 1363,
      845,  846, 2653,  953,  941,  942,  942,  941, 3173,  953,
     1386,  847, 3112,  848, 2761,  944, 3124,  736,  721, 2069,
     2069, 2069, 2069, 2069, 2069,  857,  857,  719, 2588, 2583,
     2583,  945, 2587,  946, 2587,  740, 1664,  842, 2583, 2641,
      842, 1998, 1664, 2214,  719, 2784,  654, 2785,  844, 1468,
     2786,  947, 1468,  845,  846,  740, 2219, 2219, 2219, 2219,
     2219, 2219, 2219, 2219,  847, 2244,  848, 3140, 2244, 2643,

     2219, 2219, 2219, 2219, 2587, 2583, 1666, 1666, 1666, 1666,
      843, 2836, 2837,  842,  700, 3057,  842,  944, 2219, 2219,
     2219, 2219, 2219, 2219,  844, 2643,  719,  719,  842,  845,
      846,  842,  842,  952, 2682,  842, 2641, 3114, 2238,  844,
      847,  719,  848,  844,  845,  846,  719,  842,  845,  846,
      842, 1811, 3123,  953, 1811,  847, 3176,  848,  844,  847,
     2610,  848,  842,  845,  846,  842, 2643,  719, 2237, 2666,
     2667, 2667, 2666,  844,  847, 1085,  848, 3117,  845,  846,
     2668,  842,  842, 3107,  842,  842,  719, 3053, 2432,  847,
     3053,  848, 2643,  844, 2223, 2585, 2585, 2239,  845,  846,

     3177, 1085, 3118, 2240, 2585, 3054, 2992, 2597,  847,  847,
      848,  848,  654, 1118, 1119, 1119, 1118, 2241,  719, 2242,
     2243, 2244, 2243, 2243, 2244, 2243, 2243, 2243, 2245, 2243,
     2243, 2243, 2246, 2243, 2243, 2243, 2243, 2247, 2248, 2243,
     1824, 2585, 1122, 1427, 2251,  719,  719, 3178, 2249, 2243,
     2250, 2243, 2243, 2243,  719,  842,  719, 3108,  842, 2856,
     1123, 2857,  842, 2583, 2858,  842,  844, 2243, 2243, 2243,
     2243,  845,  846,  844, 2583, 1282, 3126, 1427,  845,  846,
     1282, 3119,  847,  719,  848, 1119, 1119, 1119, 1119,  847,
     2584,  848,  842, 2584,  961,  842, 3179, 3132, 2243, 2243,

     2243, 2243, 2245,  844,  719, 2584, 2252,  842,  845,  846,
      842,  842, 1824, 2584,  842,  719, 3111,  905,  844,  847,
      719,  848,  844,  845,  846,  719,  842,  845,  846,  842,
     3104, 1427, 1123, 3104,  847, 2584,  848,  844,  847, 3135,
      848,  842,  845,  846,  842,  842, 3180,  906,  842, 3157,
     2584,  719,  844,  847, 2583,  848,  844,  845,  846, 3181,
     2253,  845,  846, 3109,  842, 2583, 2574,  842,  847,  719,
      848, 1282,  847,  842,  848,  844,  842, 3110,  719, 2254,
      845,  846,  719,  719,  844, 2111, 2111, 2111, 2111,  845,
      846,  847, 2256,  848,  842, 2255,  720,  842, 2259,  797,

      847,  842,  848, 2146,  842,  844,  719,  719, 2585, 2257,
      845,  846,  844, 1427, 2260, 2261, 2258,  845,  846, 2585,
     3051,  847,  719,  848, 2263, 1282, 2262, 3136,  847,  842,
      848,  719,  842, 2639, 3116, 1468,  842, 3143, 1468,  842,
      844, 3073, 3073, 3073, 3073,  845,  846,  844,  719, 2264,
     2146,  842,  845,  846,  842, 2683,  847, 2684,  848, 1385,
     2685, 1385,  844,  847, 1427,  848,  842,  845,  846,  842,
     2588, 2587,  719,  842, 2587, 3182,  842,  844,  847, 1385,
      848, 2265,  845,  846,  844, 1385,  719, 2266,  842,  845,
      846,  842, 3137,  847, 3185,  848, 2967,  719, 2968,  844,

      847, 2969,  848,  719,  845,  846, 2267,  842, 2583, 2583,
      842,  842, 2583, 3141,  842,  847, 2587,  848,  844, 3142,
      644, 1381,  844,  845,  846,  644,  719,  845,  846, 2268,
      842, 1120,  719,  842,  847, 2269,  848,  719,  847,  719,
      848,  844, 3156, 2270,  719,  719,  845,  846, 1427,  719,
      842, 2585, 1427,  842, 2583, 2585, 3138,  847,  719,  848,
     2522,  844, 2272, 2602, 3139, 3145,  845,  846,  663, 2523,
     2523, 2523, 2523, 2523, 2523,  797, 2271,  847, 3163,  848,
     3144, 2273, 1607, 1608, 1607, 1607, 2274, 1607, 1607, 1607,
     1609, 1607, 1607, 1607, 1610, 1607, 1607, 1607, 1607, 1611,

     1612, 1607, 3030,  719, 3031, 2276,  842, 3032,  719,  842,
     1613, 1607, 1614, 1607, 1607, 1607, 3186,  844, 1118, 1119,
     1119, 1118,  845,  846, 1811,  842, 3146, 1811,  842, 1607,
     1607, 1607, 1607,  847, 3148,  848,  844, 1249, 2275,  719,
      842,  845,  846,  842, 2946, 1121, 2947, 1122, 3187, 2948,
      719,  844,  847, 3151,  848,  842,  845,  846,  842, 2277,
     1607, 1607, 1607, 1607, 1609, 1123,  844,  847,  797,  848,
      842,  845,  846,  842,  842,  719, 2636,  842,  719, 2636,
     2278,  844,  847,  719,  848,  844,  845,  846, 2060, 2470,
      845,  846, 1427, 3188,  719,  842, 1966,  847,  842,  848,

     1966,  847, 1966,  848,  842, 2279,  844,  842, 2528, 3149,
     2280,  845,  846, 1226, 3155,  844, 2223, 3223,  719, 2073,
      845,  846,  847,  842,  848,  797,  842,  842, 2588, 2587,
      842,  847, 3152,  848,  844,  906,  719, 2587,  844,  845,
      846,  719, 1966,  845,  846, 1385,  842, 1385, 3147,  842,
      847,  719,  848, 3175,  847, 3158,  848,  844,  700,  701,
      719, 1047,  845,  846, 1966, 1385,  797,  719, 1966, 2281,
     1966, 1385, 3160,  847, 2587,  848, 1226,  719, 2284, 3165,
     3309, 2529, 2282, 1599, 1600, 1599, 1599, 1600, 1599, 1599,
     1599, 1601, 1599, 1599, 1599, 1602, 1599, 1599, 1599, 1599,

     1603, 1604, 1599,  905,  696,  719,  960,  960, 2686,  960,
     1966, 1605, 1599, 1606, 1599, 1599, 1599,  962,  842,  719,
     3162,  842,  963,  964, 1811,  842, 3310, 1811,  842,  844,
     1599, 1599, 1599, 1599,  845,  846,  844, 2588, 2587, 2283,
      842,  845,  846,  842, 2993,  847, 2994,  848, 3159, 2995,
     3311,  844,  847,  719,  848,  842,  845,  846,  842, 3312,
      719, 1599, 1599, 1599, 1599, 1601,  844,  847, 1427,  848,
      719,  845,  846, 2285,  842, 2583, 2583,  842,  842, 2583,
     3170,  842,  847, 2616,  848,  844, 3164, 1986, 3183,  844,
      845,  846,  644,  719,  845,  846, 3313,  842, 3184, 2286,

      842,  847, 2287,  848,  719,  847,  842,  848,  844,  842,
     2288, 3058, 3059,  845,  846, 3314, 3169,  844, 3166, 3315,
      719, 2583,  845,  846,  847, 3320,  848,  842, 3321, 3322,
      842, 3171, 2588,  847,  842,  848, 2118,  842,  844, 2118,
     3323, 2073, 2289,  845,  846,  844, 2290, 2291, 2585, 2585,
      845,  846, 2585, 1070,  847,  842,  848, 2616,  842,  842,
     2592,  847,  842,  848, 2944,  644,  844, 1385, 3325, 1385,
      844,  845,  846, 1071,  842,  845,  846,  842, 2292, 3317,
     1070, 1085,  847, 3326,  848,  844,  847, 1385,  848, 3327,
      845,  846,  842, 1385, 2585,  842, 2294, 2293, 3133,  842,

     1071,  847,  842,  848, 3319, 3328,  842, 1085, 2936,  842,
      844, 1070, 1105, 2583, 2583,  845,  846,  844, 2296,  847,
     3329,  848,  845,  846, 2295, 2031,  847, 3330,  848,  842,
      695, 1071,  842,  847, 2936,  848,  842, 3318, 2297,  842,
      844, 1105, 1105, 2585, 2585,  845,  846,  844, 1085, 2585,
     2585,  842,  845,  846,  842, 2612,  847, 1105,  848, 2608,
      695, 2612,  844,  847, 2298,  848,  695,  845,  846, 3324,
      842, 1105, 3324,  842, 1085, 3331, 3332, 2299,  847, 3333,
      848,  844, 3334, 1070, 3352,  842,  845,  846,  842, 2613,
     3353, 3354, 1561, 3355, 2588, 2613,  844,  847, 2941,  848,

     2300,  845,  846, 1071,  842, 1973, 3366,  842, 2991, 1973,
      842, 1973,  847,  842,  848,  844, 3367, 2528,  843, 2301,
      845,  846, 1226,  843, 2941,  842, 3316,  843,  842, 3368,
     3222,  847,  842,  848, 2302,  842,  844,  847, 3369,  848,
     2303,  845,  846,  844, 2110, 2111, 2111, 2110,  845,  846,
     3370, 1973,  847,  842,  848,  720,  842, 1177, 3371,  847,
      842,  848, 1177,  842,  844, 2802, 1177, 1177, 1177,  845,
      846,  844, 3324, 2106, 2304, 3324,  845,  846, 3372, 3373,
      847, 3374,  848,  842, 2305, 3375,  842,  847, 2759,  848,
     1043, 2759,  842, 1043,  844,  842, 2306, 3376, 3377,  845,

      846, 1045, 2307,  844, 2760, 2761, 2308, 1046,  845,  846,
      847,  842,  848, 1200,  842, 3378, 1200, 1047, 1200,  847,
     1200,  848,  844, 1200, 1366, 1366, 2309,  845,  846, 2108,
     2108, 3379,  842, 3380, 1904,  842, 1904, 1048,  847,  842,
      848, 2588,  842,  844, 2109, 2412, 2584, 2311,  845,  846,
      844, 3381, 2310, 3028, 3383,  845,  846, 2312,  961,  847,
     3384,  848,  842,  961, 3385,  842,  847,  961,  848,  842,
     3280, 3386,  842,  844, 2584, 2313, 2584, 1260,  845,  846,
      844, 2634, 2634, 2634, 2634,  845,  846, 1561, 3391,  847,
      842,  848, 1366,  842, 2314, 1260,  847,  842,  848, 3392,

      842,  844, 3033, 2588, 2639, 1260,  845,  846,  844, 2621,
     2622, 2622, 2621,  845,  846, 2587, 2584,  847,  842,  848,
     2050,  842,  842, 1260,  847,  842,  848, 2315, 2316,  844,
     1385, 1260, 1385,  844,  845,  846, 2466, 3393,  845,  846,
     3394,  842, 2588, 3395,  842,  847, 2587,  848, 2587,  847,
     1385,  848,  844, 1276, 2317, 3397, 1385,  845,  846, 3397,
      842, 1381, 2584,  842, 2588, 3398, 3056, 2318,  847,  700,
      848,  844,  905, 2319, 3058, 2587,  845,  846, 3409, 1666,
     1666, 1666, 1666,  959,  960, 1391,  959,  847, 2587,  848,
      944, 3400, 2320, 3400,  962, 2635, 2635, 2635, 2635,  963,

      964, 3416,  959,  960, 3420,  959,  952, 3401,  946, 3401,
      847, 3421,  848,  962, 3422, 3423, 2585, 2585,  963,  964,
     2585, 3424, 2321, 3425,  959,  960,  953,  959, 2592,  847,
     3426,  848, 3427,  644, 2324,  962, 3167, 3168, 3168, 3167,
      963,  964, 3083,  959,  960, 3428,  959,  959,  960, 3429,
      959,  847, 3430,  848,  962, 1415,  719, 2325,  962,  963,
      964, 1427, 2585,  963,  964,  719, 3130, 3131, 3131, 3130,
      847, 1427,  848, 3449,  847, 1381,  848,  959,  960, 1973,
      959,  959,  960, 1973,  959, 1973,  719,  797,  962, 3450,
     3435, 2535,  962,  963,  964, 2326, 2529,  963,  964, 1118,

     1119, 1119, 1118,  719,  847,  719,  848, 3434,  847, 3452,
      848,  719, 2327,  959,  960, 1427,  959,  719, 2328, 3439,
      960,  960,  719,  960,  962, 1973, 1824,  719, 1122,  963,
      964,  962, 1671, 1671, 1671, 1671,  963,  964, 2330, 2146,
      847, 3438,  848,  944, 3467,  719, 1123, 2329, 2243, 2331,
     2332, 2243, 2331, 2243, 2243, 2243, 2333, 2243, 2243, 2243,
     2334, 2243, 2243, 2243, 2243, 2335, 2336, 2243,  998, 3468,
     2583, 3436,  959,  960, 2934,  959, 2249, 2243, 2250, 2243,
     2243, 2243, 1084,  962,  719,  798,  719, 1084,  963,  964,
      719,  959,  960,  797,  959, 2243, 2243, 2243, 2243,  847,

     2934,  848,  962,  719, 2585, 2585, 3447,  963,  964, 2623,
     2623, 2623, 2623, 2585, 3440,  719, 2597, 2639,  847,  719,
      848,  654,  959,  960, 3459,  959, 2243, 2243, 2243, 2243,
     2333,  959,  960,  962,  959, 3477, 2624, 1680,  963,  964,
     3455, 3053,  962, 1385, 3053, 1385, 3483,  963,  964,  847,
     2585,  848,  719, 2337,  959,  960, 2052,  959,  847, 3054,
      848,  959,  960, 1385,  959,  962, 3442,  719,  719, 1385,
      963,  964,  962, 2338, 3441, 2146,  719,  963,  964,  719,
     3445,  847, 3484,  848,  959,  960,  999,  959,  847, 3218,
      848,  719, 3218,  959,  960,  962,  959, 3175, 1427, 3446,

      963,  964, 3448, 3485,  962, 2118,  719, 2339, 2118,  963,
      964,  847,  719,  848,  959,  960,  847,  959,  848, 3461,
      847, 2585,  848,  959,  960,  962,  959, 3486,  719, 2340,
      963,  964, 2585, 3051,  962,  719, 3456, 3453, 1282,  963,
      964,  847, 3219,  848, 2342,  719,  959,  960,  719,  959,
      847, 3462,  848, 2341, 3443, 3120, 3444,  962, 3220,  719,
     3121, 2343,  963,  964, 3122, 3451, 3454, 2345, 2344,  719,
     3487,  959,  960,  847,  959,  848,  719,  719,  959,  960,
     3458,  959,  962, 2346, 2347, 2348, 3488,  963,  964,  962,
     3073, 3073, 3073, 3073,  963,  964, 3489, 2349,  847,  719,

      848,  959,  960, 3457,  959,  847, 3464,  848,  959,  960,
     2583,  959,  962,  719, 2934,  719, 3490,  963,  964,  962,
     3465,  719, 2440, 3460,  963,  964, 2350, 1084,  847,  719,
      848, 3463,  719, 3491, 1427,  847, 3152,  848,  959,  960,
     2934,  959,  959,  960,  719,  959,  719, 3492, 3469,  962,
      719, 3470, 3473,  962,  963,  964,  719, 2223,  963,  964,
     2351,  959,  960, 3493,  959,  847, 3494,  848, 3475,  847,
     1381,  848,  962, 2621, 2622, 2622, 2621,  963,  964, 3471,
     3495,  719,  959,  960, 2050,  959,  846,  719,  847, 2352,
      848,  959,  960,  962,  959, 1427,  719, 2353,  963,  964,

     3482,  719,  962, 2048, 2049, 2049, 2048,  963,  964,  847,
     1531,  848,  959,  960, 2050,  959,  959,  960,  847,  959,
      848, 1533, 2118,  962, 2354, 2118, 3476,  962,  963,  964,
     2624, 3511,  963,  964,  719,  719, 3512,  959,  960,  847,
      959,  848, 3474,  847, 2355,  848, 2356, 3478,  962, 1427,
     2052, 3514,  719,  963,  964,  719,  719,  959,  960,  797,
      959,  964, 3570, 3571,  847, 2583,  848, 2358,  962, 2583,
     3572, 2583, 3472,  963,  964, 3575, 3576, 1226, 3577, 3579,
     3580, 2357, 1226, 3581,  847, 3582,  848, 1105, 2359, 1607,
     1722, 1723, 1607, 2360, 1607, 1607, 1607, 1724, 1607, 1607,

     1607, 1725, 1607, 1607, 1607, 1607, 1726, 1727, 1607, 3583,
     3584, 2583, 2362,  959,  960, 1105,  959, 1613, 1607, 1614,
     1607, 1607, 1607, 3585,  962, 1118, 1119, 1119, 1118,  963,
      964, 1070,  959,  960, 1105,  959, 1607, 1607, 1607, 1607,
      847, 3324,  848,  962, 3324, 2361, 3586, 1043,  963,  964,
     1043, 1071, 1121, 3587, 1122, 1070, 3588, 1105, 1045,  847,
     1070,  848,  959,  960, 1046,  959, 2363, 1607, 1607, 1607,
     1607, 1724, 1123,  962, 1047, 1071, 2468, 1825,  963,  964,
     1071,  959,  960, 3318,  959,  959,  960, 2364,  959,  847,
      842,  848,  962,  842, 1048, 1827,  962,  963,  964, 3595,

     2918,  963,  964, 3578,  959,  960, 3352,  959,  847, 3596,
      848, 3602,  847, 3603,  848,  962, 3604,  847, 3605,  848,
      963,  964, 1070, 2110, 2111, 2111, 2110, 2365, 3606,  959,
      960,  847,  959,  848,  720, 3607, 2366, 3608,  959,  960,
      962,  959, 1071, 3609, 3218,  963,  964, 3218, 3610,  962,
      999, 1177, 2106, 3611,  963,  964,  847, 3318,  848,  959,
      960, 3612,  959,  959,  960,  847,  959,  848, 1177, 1177,
      962,  847, 3613,  848,  962,  963,  964, 2585, 1177,  963,
      964, 2938,  959,  960, 1200,  959,  847, 3614,  848, 2939,
      847, 3615,  848,  962, 1084, 1366, 1367, 3219,  963,  964,

     1368, 1368, 1200, 1200, 3616,  959,  960, 2938,  959,  847,
     1200,  848, 3617, 3220, 1260, 1369,  962, 3618, 3619, 2583,
     1260,  963,  964, 2583, 1257, 2583, 1265, 1266, 2367, 3620,
     1260, 2535,  847, 3621,  848, 3622, 1226, 2058, 2058, 2058,
     2058, 2368, 1599, 1716, 1717, 1599, 1716, 1599, 1599, 1599,
     1718, 1599, 1599, 1599, 1719, 1599, 1599, 1599, 1599, 1720,
     1721, 1599,  998, 1367, 2631, 2583,  959,  960, 3623,  959,
     1605, 1599, 1606, 1599, 1599, 1599, 1260,  962, 1118, 1119,
     1119, 1118,  963,  964, 2063,  959,  960, 3625,  959, 1599,
     1599, 1599, 1599,  847, 3625,  848,  962, 3626, 2369, 1964,

     2465,  963,  964, 2465, 3082, 1121, 3633, 1122, 2622, 2622,
     2622, 2622,  847, 1964,  848,  959,  960, 2370,  959, 2050,
     1599, 1599, 1599, 1599, 1718, 1123,  962, 2466, 3639, 3640,
     3641,  963,  964, 2469,  959,  960, 3083,  959,  959,  960,
     2371,  959,  847, 3642,  848,  962, 3643, 3644, 3645,  962,
      963,  964, 3646, 3647,  963,  964, 1415,  959,  960, 3634,
      959,  847, 2146,  848, 3657,  847, 1391,  848,  962,  719,
     2644, 3658, 2644,  963,  964, 2645, 2645, 2645, 2645, 2645,
     2645, 2645, 2645, 3659,  847,  719,  848,  959,  960, 2372,
      959,  959,  960, 2374,  959, 3653, 2373,  719,  962,  719,

     1427, 2101,  962,  963,  964, 2585,  719,  963,  964, 2938,
      959,  960,  797,  959,  847,  719,  848, 2939,  847, 3650,
      848,  962, 1084,  719, 1427, 2375,  963,  964,  719,  959,
      960,  719,  959,  959,  960, 2938,  959,  847,  797,  848,
      962, 2377, 3655, 1427,  962,  963,  964, 1427,  719,  963,
      964, 3671,  719,  719, 1043, 2376,  847, 1043,  848, 1427,
      847,  719,  848,  959,  960, 1045,  959,  959,  960, 3678,
      959, 1046, 3627, 3628,  962, 3627, 1427, 3684,  962,  963,
      964, 1047, 2378,  963,  964,  719,  959,  960, 3685,  959,
      847, 3672,  848,  719,  847, 2380,  848,  962, 3674, 2379,

     3654, 1048,  963,  964,  719, 3690,  959,  960,  719,  959,
      719, 3677, 3656,  847, 3677,  848, 3308,  962, 3084, 3085,
     3085, 3084,  963,  964, 3693, 1427, 2382,  959,  960, 3086,
      959,  719, 2381,  847,  719,  848,  959,  960,  962,  959,
      719,  719,  719,  963,  964, 3686, 3483,  962, 3691, 3689,
     2383, 2699,  963,  964,  847, 1427,  848,  959,  960, 3410,
      959,  959,  960,  847,  959,  848,  719,  719,  962,  797,
      719, 2384,  962,  963,  964,  719, 3692,  963,  964, 3176,
      960,  960, 3696,  960,  847, 3412,  848, 3412,  847, 1427,
      848,  962,  959,  960, 3697,  959,  963,  964, 2385,  959,

      960, 3694,  959,  962, 3694, 3412, 3695, 2386,  963,  964,
      962, 3412, 3698, 1680, 2223,  963,  964, 3699, 3413,  847,
     3700,  848,  959,  960, 3701,  959,  847, 3702,  848, 2387,
     3695,  959,  960,  962,  959, 3703, 3704, 3712,  963,  964,
     3713, 3687,  962, 3688, 3415,  719, 3415,  963,  964,  847,
     2235,  848,  959,  960, 2389,  959, 2388, 3312,  847, 3752,
      848, 2585, 3577,  962, 3415, 2585, 3753, 2585,  963,  964,
     3415,  959,  960, 3022,  959, 3581, 3755, 3756, 1226,  847,
     1105,  848,  962, 3673, 2119, 2119, 3673,  963,  964, 1070,
     2391, 1105, 2390, 3585,  959,  960, 2949,  959,  847, 1105,

      848, 3759, 2392,  959,  960,  962,  959, 2585, 3760, 1071,
      963,  964, 3761, 3762,  962, 3675, 3676, 3754, 3675,  963,
      964,  847, 2393,  848, 2394,  959,  960, 3763,  959, 3764,
      847, 3765,  848, 3766,  959,  960,  962,  959, 3767, 3768,
     3769,  963,  964, 3770, 2984,  962, 1118, 1119, 1119, 1118,
      963,  964,  847, 3771,  848, 2984, 2049, 2049, 2049, 2049,
     2395,  847, 3772,  848, 1177,  959,  960, 2050,  959, 1177,
      719, 1177, 1680, 1121, 1200, 1122,  962, 1200, 1200, 3773,
     2396,  963,  964, 2624,  959,  960, 1260,  959,  959,  960,
     2397,  959,  847, 1123,  848,  962, 1260, 1946, 2398,  962,

      963,  964, 3033, 2052,  963,  964, 2465,  959,  960, 2465,
      959,  847, 1260,  848, 2472,  847, 3033,  848,  962, 3775,
     1680, 3775, 3401,  963,  964, 3786, 3791,  959,  960, 3792,
      959, 3083, 3776, 2466,  847, 3776,  848, 3083,  962, 2399,
     3793, 3794, 3083,  963,  964, 3083,  959,  960, 3795,  959,
     3777, 3410, 3796, 2400,  847, 1415,  848,  962, 2626, 2626,
     2626, 2626,  963,  964, 3802,  719, 2401,  959,  960,  719,
      959,  959,  960,  847,  959,  848, 1427, 3412,  962, 3412,
     1427, 3803,  962,  963,  964,  766,  719,  963,  964, 3627,
     3628, 2402, 3627,  719,  847, 1427,  848, 3412,  847,  719,

      848,  959,  960, 3412,  959,  767,  725, 3800,  959,  960,
      719,  959,  962,  719, 3810, 2686, 2403,  963,  964,  962,
     3827,  998, 2404, 2628,  963,  964, 1427, 3801,  847,  719,
      848, 1118, 1119, 1119, 1118,  847, 3828,  848,  768, 1118,
     1119, 1119, 1118, 3829, 1118, 1119, 1119, 1118, 1118, 1119,
     1119, 1118, 2405, 3830, 1118, 1119, 1119, 1118, 1121, 3831,
     1122, 1118, 1119, 1119, 1118, 3832, 1121, 3840, 1122,  719,
     2406, 1121, 3835, 1122,  719, 1121,  719, 1122, 1123, 1427,
      719, 1121, 3833, 1122, 3839, 3841, 1123, 3842, 1121,  719,
     1122, 1123,  719, 2471, 1136, 1123, 1118, 1119, 1119, 1118,

     2474, 1123,  719, 3834, 2223, 2475, 3836, 1427, 1123, 1118,
     1119, 1119, 1118, 2473, 2223, 1118, 1119, 1119, 1118, 1118,
     1119, 1119, 1118, 1121, 3843, 1122, 2223, 2223, 1118, 1119,
     1119, 1118, 1118, 1119, 1119, 1118, 1121, 2223, 1122, 3844,
     3848, 3849, 1121, 1123, 1122,  846, 1121, 1531, 1122, 1118,
     1119, 1119, 1118, 1136, 1533, 1121, 1123, 1122,  964, 1121,
     3864, 1122, 1123, 3865, 3866, 3867, 1123, 3352, 1366, 1367,
     2477, 2476, 3352, 2108, 2108, 1123, 1121, 3410, 1122, 1123,
     1118, 1119, 1119, 1118, 3869, 3870, 3871, 2478, 2647, 2585,
     3872, 2481, 2479, 2585, 3873, 2585, 1123, 1118, 1119, 1119,

     1118, 3022, 3874, 3412, 2480, 3412, 1226, 1121, 3875, 1122,
     3876, 1118, 1119, 1119, 1118, 3877, 1118, 1119, 1119, 1118,
     3878, 3879, 3880, 3412, 1121, 3882, 1122, 1123, 3882, 3412,
     2057, 2058, 2058, 2057, 3776, 2585, 1367, 3776, 1121, 2482,
     1122, 3883, 2060, 1121, 1123, 1122, 3785, 1828, 1828, 1828,
     1828, 1136, 3777,  717,  718,  718,  717, 2631, 1123, 3891,
     1375, 3794, 2483, 1123,  720,  721, 3083, 2484,  721, 2056,
     2056, 2056, 2056, 2056, 2056, 2056, 2056, 2063, 3894, 1415,
      723,  721,  724, 3899, 3900, 2648, 2648, 2648, 2648, 3902,
     3906, 3573, 3573, 3573, 3573, 2056, 2674, 2674, 2674, 2674,

      725,  721,  717,  718,  718,  717, 3921, 2050, 3787, 3787,
     3787, 3787,  766,  720,  721, 3906, 3933,  721, 3574, 2322,
     2322, 2322, 2322,  766, 2056, 3934, 1386, 1830, 3906,  723,
      721,  724,  767,  736, 3935, 2069, 2069, 2069, 2069, 2069,
     2069,  857,  857,  767, 3913,  842,  952, 3936,  842,  725,
      721,  740, 2081, 2082, 2082, 2081, 1070, 2629,  717,  718,
      718,  717, 3413,  720,  721, 1373,  953,  721, 3574,  720,
      721,  740,  847,  721,  848,  722, 1071, 3807, 3937, 2084,
      721, 1363, 1904, 3318, 3938,  723,  721,  724, 3415, 3939,
     3415, 3017, 3017, 3017, 3017, 3017, 3017, 3901,  719, 2086,

      721, 3787, 3787, 3787, 3787,  725,  721, 3940, 3415, 2082,
     2082, 2082, 2082, 3897, 3415, 1370, 1370, 1370, 1370, 3807,
      720,  721, 3898, 3895,  721,  719,  719, 2630, 2057, 2058,
     2058, 2057, 3085, 3085, 3085, 3085, 2084,  721, 3941, 3901,
     2060, 3904,  766, 3086, 3904, 3831, 3942, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2062, 2086,  721, 2081, 2082,
     2082, 2081,  767, 3099, 3100, 3100, 3099,  719,  719,  720,
      721, 3953, 3954,  721, 3101, 2063, 2223, 3952, 2215,  719,
     1372, 2215, 3943, 2223, 3955, 2084,  721, 2085, 3945, 3959,
     2217, 1151, 1151, 1151, 1151, 1373,  719, 2218, 2218, 2218,

     2218, 2218, 2218, 2218, 2218, 2086,  721, 3960, 1381, 2057,
     2058, 2058, 2057,  719, 3571, 3577, 1118, 1119, 1119, 1118,
     3581, 2060, 3975, 3573, 3573, 3573, 3573, 3944, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2062, 2679, 2680, 2680,
     2679, 3977, 3978, 1121, 3908, 1122, 3979, 3908, 2681,  721,
     3574, 3980,  721, 3981, 3982, 3914, 2063, 3983, 3984, 2680,
     2680, 2680, 2680, 1123,  723,  721, 1363, 3985, 1156, 3986,
     2681,  721, 3987, 3905,  721, 3988, 1118, 1119, 1119, 1118,
     3100, 3100, 3100, 3100,  725,  721,  723,  721, 3990, 1381,
     2636, 3101, 3990, 2636, 3996, 1118, 1119, 1119, 1118, 3060,

     3574, 3083, 2060, 1824, 1415, 1122,  725,  721, 3060, 2638,
     2638, 2638, 2638, 2638, 2638, 2638, 2638, 1380, 2141, 2142,
     2142, 2141, 1121, 1123, 1122, 2142, 2142, 2142, 2142, 2143,
      721, 3899, 3906,  721,  719, 3921, 2143,  721, 2215, 3906,
      721, 2215, 1123, 2046, 4021,  723,  721, 1363, 2964, 2672,
     2217, 3906,  723,  721,  719, 4022, 4023, 2218, 2218, 2218,
     2218, 2218, 2218, 2218, 2218,  725,  721, 3913, 4002, 4024,
     1381, 1386,  725,  721, 3694, 4025, 3940, 3694,  736, 3695,
     2070, 2070, 2070, 2070, 2070, 2070,  738,  738, 4026, 4028,
     2161, 2162, 2162, 2161, 3906, 4027,  740,  842, 4027, 4030,

      842, 2163,  721, 3695,  842,  721,  746,  842,  844, 4031,
     3931, 4033, 3949,  845,  846,  844,  740,  723,  721, 1363,
      845,  846, 4036, 4037,  847,  719,  848, 1118, 1119, 1119,
     1118,  847, 4032,  848, 2223,  746, 2077,  725,  721, 3959,
     4029, 2944,  719, 2078, 3949, 2219, 2219, 2219, 2219, 2219,
     2219, 2219, 2219, 4053, 1121, 4054, 1122, 3897, 4055, 2219,
     2219, 2219, 2219, 2780, 4032, 4056, 2080, 3887, 3887, 3887,
     3887, 4057, 3908, 2758, 1123, 3908, 2991, 2219, 2219, 2219,
     2219, 2219, 2219, 3914, 4194, 4194, 4194, 4194, 3028, 2963,
     4062, 4062, 2080, 2079, 2079, 2079, 2079, 2079, 2079, 2079,

     2079, 3905, 3417, 3418, 3418, 3417, 3921, 2079, 2079, 2079,
     2079, 4035, 4194, 3419, 4194,  719, 4066, 2623, 2623, 2623,
     2623, 1415,  719, 4086, 4087, 2079, 2079, 2079, 2079, 2079,
     2079,  717,  718,  718,  717, 4088, 4089, 3897, 2162, 2162,
     2162, 2162,  720,  721, 2624, 4090,  721, 3634,  722, 2163,
      721, 4006, 3364,  721, 4006, 4091, 3940, 4096,  723,  721,
      724, 4194, 4007, 4097, 2052,  723,  721, 3076, 3076, 3076,
     3076, 3076, 3076, 3076, 3076, 1533, 3906,  719,  725,  721,
     2651, 2652, 2652, 2651, 1427,  725,  721, 1118, 1119, 1119,
     1118, 2653, 4074, 2669, 1441, 1442, 1443, 1443, 1442, 1441,

     1441, 1441, 1444, 1441, 1441, 1441, 1445, 1446, 1441, 1441,
     1446, 1441, 1447, 1441, 1121, 4104, 1122, 4053, 1118, 1119,
     1119, 1118, 1448, 1446, 1449, 1441, 1441, 1441, 3084, 3085,
     3085, 3084, 4092, 4102, 1123,  842, 4102,  719,  842, 3086,
     4105, 1441, 1450, 1446, 1441, 1121,  844, 1122, 1366, 1366,
      719,  845,  846, 1368, 1368, 1427,  719, 2970, 3085, 3085,
     3085, 3085,  847, 4093,  848, 1123, 4109, 4109, 3406, 3086,
     3921, 2973, 1441, 1441, 1441, 1441, 1444, 2117, 2698, 2119,
     2119, 2698, 2117, 2117, 2117, 2120, 2117, 2117, 2117, 2121,
     2122, 2117, 2117, 2122, 2117, 2123, 2117, 2776, 4115, 1415,

     3915,  842, 4128, 3915,  842, 2124, 2122, 2125, 2117, 2117,
     2117, 3918,  844, 3906, 1366, 4129, 1366,  845,  846, 4038,
      842, 4130, 4038,  842, 2117, 2126, 2122, 2117,  847, 4117,
      848,  844, 4131, 3074, 2043, 3074,  845,  846, 3075, 3075,
     3075, 3075, 3075, 3075, 3075, 3075,  847,  847, 4039,  848,
     4000, 4128, 4132, 4000, 2777, 2117, 2117, 2117, 2117, 2120,
     2161, 2162, 2162, 2161, 3906,  842, 4134, 3915,  842, 4135,
     3915, 2163,  721, 4142,  842,  721,  844,  842, 3918, 4001,
     4015,  845,  846, 4102, 2782,  844, 4102,  723,  721, 1363,
      845,  846,  847, 4143,  848, 3099, 3100, 3100, 3099, 4027,

     4145,  847, 4027,  848, 4145,  719, 3101,  725,  721, 3105,
     3105, 3105, 3105, 4150,  719, 2703, 2182,  718,  718, 2182,
     2778,  842, 4078, 4006,  842, 4078, 4006,  720,  721, 1427,
      842,  721,  844,  842, 4007, 1415,  766,  845,  846, 4158,
     4159,  844, 2781,  723,  721, 1363,  845,  846,  847, 4128,
      848, 3905, 2726, 4160, 4162,  842,  767,  847,  842,  848,
     4163, 4053,  842,  725,  721,  842,  844, 4157, 2727, 2726,
     4157,  845,  846,  844, 4133, 4053,  719, 4051,  845,  846,
     4051, 4169,  847, 4161,  848, 2727, 2077,  719, 4052,  847,
     2779,  848, 4169, 2078, 3794, 2219, 2219, 2219, 2219, 2219,

     2219, 2219, 2219, 1415, 4157, 4174, 4175, 4157, 4176, 2219,
     2219, 2219, 2219, 2075, 2075, 2075, 2080, 2075, 2075, 2075,
     2075, 2075, 4178, 2267, 1561, 2223, 4182, 2219, 2219, 2219,
     2219, 2219, 2219, 2075, 2075, 2075, 2075, 2075, 2075, 2075,
     2075, 2075, 2080, 2075, 2075, 2075, 2075, 2075, 2075, 2075,
     2075, 2075, 2075, 1599, 1600, 1599, 1599, 1600, 1599, 1599,
     1599, 1601, 1599, 1599, 1599, 1602, 1599, 1599, 1599, 1599,
     1603, 1604, 1599, 3075, 3075, 3075, 3075, 3075, 3075, 3075,
     3075, 1605, 1599, 1606, 1599, 1599, 1599, 4084,  842, 4182,
     4084,  842, 1415,  719, 4184,  842, 4185, 3940,  842,  844,

     1599, 1599, 1599, 1599,  845,  846,  844, 4177,  719, 2783,
      842,  845,  846,  842, 4188,  847, 3905,  848, 4188, 1415,
     4128,  844,  847, 3897,  848,  842,  845,  846,  842, 4128,
     4191, 1599, 1599, 1599, 1599, 1601,  844,  847, 4191,  848,
      842,  845,  846,  842,  842, 1415, 2267,  842, 4193, 4193,
     1415,  844,  847,  725,  848,  844,  845,  846,  719,  842,
      845,  846,  842,  842, 2673, 2788,  842,  847, 2787,  848,
      844,  847, 2046,  848,  844,  845,  846, 1415, 4119,  845,
      846, 4119,  842, 2665, 2789,  842,  847, 2664,  848, 3918,
      847, 2663,  848,  844, 4139, 2790, 2662, 4139,  845,  846,

     3888, 3888, 3888, 3888, 2661,  842, 4141, 4139,  842,  847,
     4139,  848,  842, 2658, 2791,  842,  844, 2657, 2792, 4167,
     1395,  845,  846,  844, 2656, 1395, 1395,  842,  845,  846,
      842, 2076,  847, 2793,  848, 2655, 2076, 2076,  844,  847,
     2654,  848, 2650,  845,  846, 2649, 3100, 3100, 3100, 3100,
     2086, 2074,  842, 2794,  847,  842,  848, 3101, 1391, 2074,
     2633,  960,  960,  844,  960, 2074, 2625, 2074,  845,  846,
     1976, 2584,  962, 4119, 2796, 2795, 4119,  963,  964,  847,
     3634,  848, 1969,  696, 3918, 1118, 1119, 1119, 1118,  696,
     2797, 1575, 1576, 1575, 1575, 1576, 1575, 1575, 1575, 1577,

     1575, 1575, 1575, 1578, 1575, 1575, 1575, 1575, 1579, 1580,
     1575, 2799, 1121, 4139, 1122, 4139, 4139,  696, 4139, 1581,
     1575, 1582, 1575, 1575, 1575, 4167,  842, 4141,  696,  842,
     1976, 2584, 1123,  842, 1969, 2015,  842,  844, 1575, 1575,
     1575, 1575,  845,  846,  844, 1976, 1395, 2971, 2584,  845,
      846, 1395, 1395,  847, 1969,  848, 3636, 3637, 3637, 3636,
      847, 2004,  848, 4194, 4194, 4194, 4194, 3638, 1992, 1575,
     1575, 1575, 1575, 1577, 2243, 2798, 2243, 2243, 2798, 2243,
     2243, 2243, 2245, 2243, 2243, 2243, 2246, 2243, 2243, 2243,
     2243, 2247, 2248, 2243, 2800, 2801, 1980, 3637, 3637, 3637,

     3637, 2588, 2249, 2243, 2250, 2243, 2243, 2243, 3638,  842,
     2586, 1974,  842, 3413, 1968, 2581,  842, 3982, 1976,  842,
      844, 2243, 2243, 2243, 2243,  845,  846,  844, 1969, 2565,
     2565,  842,  845,  846,  842, 2561,  847, 2560,  848, 3415,
     4194, 3415,  844,  847, 1260,  848,  842,  845,  846,  842,
     2559, 2558, 2243, 2243, 2243, 2243, 2245,  844,  847, 3415,
      848, 2557,  845,  846, 1561, 3415, 2556,  842, 4153, 4153,
      842, 4153, 4153,  847,  842,  848, 2555,  842,  844, 3918,
     3918, 2554, 2803,  845,  846,  844,  905, 2553, 2552,  842,
      845,  846,  842, 2076,  847, 2551,  848, 1260, 2076, 2076,

      844,  847, 2076,  848,  842,  845,  846,  842, 2550, 2549,
     2804,  842, 2548, 2547,  842,  844,  847, 1260,  848, 2546,
      845,  846,  844, 4194, 4194, 4194, 4194,  845,  846, 2545,
     2544,  847,  842,  848, 2543,  842, 1976, 2805,  847,  842,
      848, 4171,  842,  844, 4171, 1969, 1904, 1561,  845,  846,
      844, 4194, 3906, 4194, 2806,  845,  846, 1904, 2520,  847,
      842,  848, 4139,  842,  842, 4139,  847,  842,  848, 1200,
     2519,  844, 2807, 2518, 4167,  844,  845,  846, 2517, 2808,
      845,  846, 3363, 3636, 3637, 3637, 3636,  847, 2516,  848,
     2640,  847,  842,  848, 3638,  842, 2809, 2074, 2640,  842,

     4194, 2515,  842,  844, 2640, 2074, 2640, 2810,  845,  846,
      844, 2074, 2811, 2074,  842,  845,  846,  842, 2514,  847,
     2513,  848, 1200, 2512, 2511,  844,  847, 2510,  848, 1200,
      845,  846, 2509, 2812, 2508, 1177, 2507,  842, 2506, 2505,
      842,  847, 2504,  848,  842, 2813, 2503,  842,  844, 2502,
     2501, 1177, 2815,  845,  846,  844, 3887, 3887, 3887, 3887,
      845,  846, 2500, 2499,  847, 2816,  848,  842, 2498, 1177,
      842,  847, 2497,  848,  842, 2496, 2495,  842,  844, 4186,
     4186, 4186, 4186,  845,  846,  844, 4194, 4194, 4194, 4194,
      845,  846, 2494, 2493,  847,  842,  848, 2492,  842, 2491,

     2490,  847, 2489,  848,  842, 2817,  844,  842, 2488, 2487,
     2818,  845,  846, 2486, 4194,  844, 4194, 2485, 2819, 1827,
      845,  846,  847,  842,  848, 1825,  842, 1827, 1123, 2820,
     2463,  847, 1105,  848,  844, 2462, 3634, 1366, 1366,  845,
      846, 2461, 1368, 1368,  842, 3365, 2460,  842, 2459, 2458,
      847, 2457,  848,  842, 2821,  844,  842, 3406, 2456, 1561,
      845,  846, 2455, 4194,  844, 3637, 3637, 3637, 3637,  845,
      846,  847,  842,  848, 2454,  842, 3638, 1105, 2453, 2452,
      847, 2451,  848,  844, 3888, 3888, 3888, 3888,  845,  846,
     2450,  842, 2822, 2449,  842,  842, 1105, 2448,  842,  847,

     2447,  848,  844, 2446, 2445, 1366,  844,  845,  846, 2428,
     2421,  845,  846, 2418, 2823, 2417,  842, 2416,  847,  842,
      848, 2415,  847,  842,  848, 2824,  842,  844, 2414, 1058,
     1048, 2825,  845,  846,  844, 3892, 3893, 2652, 3892,  845,
      846, 2640, 1046,  847, 2408,  848, 2653,  964,  964, 2640,
      847,  842,  848,  964,  842, 2640, 1661, 2640,  842, 2826,
     1533,  842,  844, 1531, 3634,  905,  846,  845,  846,  844,
     1533, 2827, 1531, 2828,  845,  846,  846, 1533,  847,  842,
      848, 1531,  842,  846, 2235,  847,  842,  848, 2829,  842,
      844, 4186, 4186, 4186, 4186,  845,  846,  844, 2234, 2233,

     2232,  842,  845,  846,  842, 2231,  847, 2230,  848, 2227,
     2830, 2226,  844,  847, 2225,  848, 2224,  845,  846, 2223,
      842, 2222, 2831,  842,  842, 2221, 1533,  842,  847, 2211,
      848,  844, 2832, 2210, 2208,  844,  845,  846, 2207, 2833,
      845,  846, 2167,  725,  719,  842, 2153,  847,  842,  848,
     3411,  847,  842,  848, 2152,  842,  844, 2145, 3411, 2834,
      725,  845,  846,  844, 3411,  719, 3411, 2139,  845,  846,
     2128, 1415,  847,  842,  848, 2838,  842,  842, 2101,  847,
      842,  848, 2835, 2100,  844, 2099, 2098, 3414,  844,  845,
      846, 2097, 2096,  845,  846, 3414,  842, 2093, 2092,  842,

      847, 3414,  848, 3414,  847, 2091,  848,  844, 4194, 4194,
     4194, 4194,  845,  846, 2090, 2089, 2088,  842, 2839, 2087,
      842, 2840, 1391,  847, 2064,  848, 1375, 2841,  844, 2047,
     2046, 1976, 2842,  845,  846, 1969, 4194, 2843, 4194,  842,
     1976, 1561,  842, 2014,  847, 1969,  848, 2014,  842, 1976,
      844,  842, 1969, 2844, 1967,  845,  846, 1967, 1293,  844,
      760, 1288, 2984, 1951,  845,  846,  847,  842,  848, 1951,
      842, 1279, 1948, 1276, 1561,  847,  842,  848,  844,  842,
     1273, 1947, 1944,  845,  846, 4194, 1943,  844, 3997, 3998,
     3085, 3997,  845,  846,  847, 1940,  848,  959,  960, 3086,

      959, 1939, 1938,  847, 1937,  848, 1936, 3411,  962, 1935,
     2845, 1260, 1933,  963,  964, 3411,  959,  960, 2846,  959,
     1932, 3411, 1931, 3411,  847, 1930,  848,  962, 1929, 1928,
     3414,  906,  963,  964, 1927, 2847,  959,  960, 3414,  959,
     1260, 1926, 1925,  847, 3414,  848, 3414,  962, 2648, 2648,
     2648, 2648,  963,  964, 1243,  959,  960, 1218,  959, 2848,
     1904, 1211, 1902,  847, 1901,  848,  962, 1900, 1899, 2849,
     1896,  963,  964, 1895, 1894,  766,  959,  960, 1893,  959,
     1200, 1892,  847, 1891,  848,  959,  960,  962,  959, 1890,
     1889, 2850,  963,  964, 1888,  767,  962, 3998, 3998, 3085,

     3998,  963,  964,  847, 1200,  848,  959,  960, 3086,  959,
      959,  960,  847,  959,  848, 1188, 1887,  962, 1886, 1885,
     1884,  962,  963,  964, 2851, 1881,  963,  964, 1373,  959,
      960, 1880,  959,  847, 1879,  848, 1878,  847,  842,  848,
      962,  842, 2852, 1177, 1877,  963,  964, 1876, 1875,  844,
     1874, 1873, 1872, 2853, 3174, 3175,  847, 1177,  848, 1871,
     1870, 1165, 1869, 1868, 1867,  847, 1866,  848, 1865, 1864,
     2854, 1599, 1716, 1717, 1599, 1716, 1599, 1599, 1599, 1718,
     1599, 1599, 1599, 1719, 1599, 1599, 1599, 1599, 1720, 1721,
     1599, 1863, 1862, 1861, 1860,  959,  960, 1827,  959, 1605,

     1599, 1606, 1599, 1599, 1599, 1825,  962, 1118, 1119, 1119,
     1118,  963,  964, 1823,  959,  960, 1822,  959, 1599, 1599,
     1599, 1599,  847, 1821,  848,  962, 1820, 2855, 1819, 1818,
      963,  964, 1815, 1814, 1121, 1813, 1122, 2651, 2652, 2652,
     2651,  847, 1812,  848,  959,  960, 1105,  959, 2653, 1599,
     1599, 1599, 1599, 1718, 1123,  962, 2353, 1810, 1809, 1808,
      963,  964, 2965,  959,  960, 1807,  959,  959,  960, 1806,
      959,  847, 2353,  848,  962, 1805, 1804, 1803,  962,  963,
      964, 1105, 1802,  963,  964, 1801, 1071, 1067,  959,  960,
      847,  959,  848, 1781,  847, 1780,  848, 1779, 1778,  962,

     1777, 3807, 3808, 1058,  963,  964, 1368, 1368,  959,  960,
     1773,  959,  964, 1680,  953,  847, 1661,  848,  947,  962,
     1549, 3809, 2860,  842,  963,  964,  842,  959,  960, 1546,
      959, 1543, 1542,  850,  844,  847, 2859,  848,  962,  845,
      846,  841,  850,  963,  964, 1533, 1531, 2861,  959,  960,
      847,  959,  848,  846,  847, 1524,  848,  959,  960,  962,
      959,  767, 3189, 2862,  963,  964, 1415, 1407,  962, 3808,
     1404, 1401, 1400,  963,  964,  847, 1375,  848,  725,  959,
      960,  712,  959,  700,  847,  696,  848,  696,  959,  960,
      962,  959,  683,  686,  683,  963,  964, 2863,  679,  962,

     4004, 2622, 2622, 4004,  963,  964,  847, 2864,  848,  959,
      960, 2050,  959,  959,  960,  847,  959,  848,  677,  667,
      962,  658,  649,  639,  962,  963,  964, 2865, 1043,  963,
      964, 1043,  639,  760, 1293,  638,  847, 1288,  848, 1045,
      847, 1287,  848,  959,  960, 1046,  959, 1284,  638, 1276,
     2866, 1273, 1272, 1271,  962, 1047, 1270, 1263, 2867,  963,
      964, 1262, 3915,  718, 3916, 3915, 4194, 4194, 4194, 4194,
      847, 2868,  848, 3918, 1259, 1048, 2869, 1575, 1694, 1695,
     1575, 1694, 1575, 1575, 1575, 1696, 1575, 1575, 1575, 1697,
     1575, 1575, 1575, 1575, 1698, 1699, 1575, 3569, 1258, 1253,

      960,  960, 2871,  960, 1252, 1581, 1575, 1582, 1575, 1575,
     1575,  962,  959,  960, 1251,  959,  963,  964, 1250,  959,
      960, 3982,  959,  962, 1575, 1575, 1575, 1575,  963,  964,
      962, 3997, 3998, 3085, 3997,  963,  964, 1243, 1242,  847,
     1239,  848, 3086, 4194, 1230, 1218,  847, 1217,  848, 1214,
     1211, 1151, 1151, 1151, 1151, 1575, 1575, 1575, 1575, 1696,
     2243, 2870, 2332, 2243, 2870, 2243, 2243, 2243, 2333, 2243,
     2243, 2243, 2334, 2243, 2243, 2243, 2243, 2335, 2336, 2243,
     2872, 2873, 1210, 4059, 4059, 4059, 4059, 1209, 2249, 2243,
     2250, 2243, 2243, 2243, 3357,  959,  960, 1208,  959, 1204,

     1203, 1202,  959,  960, 3387,  959,  962, 2243, 2243, 2243,
     2243,  963,  964,  962, 1199, 1198, 3388, 1197,  963,  964,
     3389, 1194,  847, 3390,  848, 1188, 1187, 1186, 1156,  847,
     1185,  848,  959,  960, 1181,  959, 1180, 1179, 2243, 2243,
     2243, 2243, 2333,  962, 4003, 2622, 2622, 4003,  963,  964,
     1680,  959,  960, 1176,  959, 2050, 1175, 1174, 1171,  847,
     4194,  848,  962, 1170, 1169, 1168,  638,  963,  964, 1165,
     1164, 2466,  998, 1163,  959,  960, 1162,  959,  847, 1161,
      848,  959,  960, 1160,  959,  962, 1159, 2802,  638, 1125,
      963,  964,  962, 1117, 1116, 1115, 1109,  963,  964, 1108,

     1107,  847, 2874,  848,  959,  960, 1104,  959,  847, 1103,
      848, 1102, 1097,  959,  960,  962,  959, 1096, 1095, 1094,
      963,  964, 1072, 1067,  962, 1066, 1065, 1064, 1063,  963,
      964,  847, 1058,  848,  639,  638,  959,  960, 2875,  959,
      847,  639,  848,  959,  960,  638,  959,  962,  638,  948,
      728, 2876,  963,  964,  962, 3080, 2674, 2674, 3080,  963,
      964,  850,  841,  847,  842,  848, 2050,  842,  959,  960,
      847,  959,  848,  860,  850,  844,  841, 1680, 2877,  962,
      845,  846, 3081,  836,  963,  964,  802,  801,  769,  959,
      960,  847,  959,  848,  762,  847,  757,  848,  959,  960,

      962,  959,  767,  761, 2878,  963,  964,  760,  759,  962,
      747, 2879,  733,  728,  963,  964,  847,  712,  848,  959,
      960,  711,  959,  708,  696,  847,  696,  848,  696,  686,
      962,  683, 2880,  683, 2778,  963,  964,  683,  959,  960,
      683,  959,  959,  960,  679,  959,  847,  638,  848,  962,
     2882,  667,  638,  962,  963,  964,  664, 2881,  963,  964,
      658,  657,  649,  959,  960,  847,  959,  848,  647,  847,
      639,  848,  638, 4194,  962, 4194, 4194, 4194, 4194,  963,
      964, 4194,  959,  960, 4194,  959,  959,  960, 2883,  959,
      847, 2884,  848,  962, 4194, 2886, 4194,  962,  963,  964,

     4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,  847,
     4194,  848, 4194,  847, 2887,  848,  962, 4194, 4194, 4194,
     4194,  963,  964, 4194,  959,  960, 4194,  959,  959,  960,
     4194,  959,  847, 4194,  848,  962, 4194, 4194, 4194,  962,
      963,  964, 4194, 4194,  963,  964, 3889, 3889, 3889, 3889,
     2888,  847, 2889,  848, 4194,  847, 2890,  848, 3783,  959,
      960, 3783,  959, 4194, 4194, 4194,  959,  960, 4194,  959,
      962, 4194, 4194, 4194, 3783,  963,  964,  962, 4194, 2891,
     4194, 4194,  963,  964, 4194, 4194,  847, 2892,  848,  959,
      960, 4194,  959,  847, 3783,  848,  959,  960, 4194,  959,

      962, 4194, 4194, 4194, 4194,  963,  964,  962, 4194, 4194,
     4194, 4194,  963,  964, 1680, 4194,  847, 4194,  848, 4194,
     4194,  959,  960,  847,  959,  848, 4194, 4194,  959,  960,
     4194,  959,  962, 4194, 4194, 2893, 4194,  963,  964,  962,
     4194, 4194, 4194, 4194,  963,  964, 3807, 3808,  847, 4194,
      848, 1368, 1368, 4194, 4194,  847, 3982,  848, 4194, 2894,
      959,  960, 4194,  959, 4194, 4194, 3809, 4058, 2895, 4194,
     4194,  962, 4194, 4194, 4194, 4194,  963,  964, 4194, 4194,
     2896,  959,  960, 4194,  959, 4194, 4194,  847, 4194,  848,
      959,  960,  962,  959, 4194, 4194, 2897,  963,  964, 4194,

     4194,  962, 4194, 4194, 4194, 4194,  963,  964,  847, 4194,
      848, 4194,  959,  960, 3808,  959, 4194,  847, 4194,  848,
     4194,  959,  960,  962,  959, 4194, 4194, 4194,  963,  964,
      998, 4060,  962, 4194, 4194, 4194, 2898,  963,  964,  847,
     2899,  848, 4194,  959,  960, 4194,  959, 4194,  847, 4194,
      848, 4194, 4194, 4194,  962, 2900, 4194, 4194, 4194,  963,
      964, 4194,  959,  960, 4194,  959,  959,  960, 4194,  959,
      847, 2901,  848,  962, 4194, 4194, 4194,  962,  963,  964,
     4194, 4194,  963,  964, 4194, 2902, 4194,  959,  960,  847,
      959,  848, 4194,  847, 4194,  848, 2903, 4194,  962, 4194,

     4194, 4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,
      959,  960, 4194,  959,  847, 2904,  848,  962, 4194, 4194,
     4194,  962,  963,  964, 2905,  842,  963,  964,  842,  959,
      960, 4194,  959,  847, 4194,  848,  844,  847, 4194,  848,
      962,  845,  846, 4194, 4194,  963,  964, 4194, 4194, 2906,
      959,  960,  847,  959,  848, 4194,  847, 2907,  848,  959,
      960,  962,  959, 4194, 4194, 4194,  963,  964, 4194, 4194,
      962, 3998, 3998, 3085, 3998,  963,  964,  847, 4194,  848,
     4194, 4194, 3086, 2908,  959,  960,  847,  959,  848, 4194,
     4194,  959,  960, 4194,  959,  962, 3198, 4194, 2909, 4194,

      963,  964,  962, 4194, 2910, 4194, 4194,  963,  964, 2911,
     4194,  847, 4194,  848, 2912, 4194,  959,  960,  847,  959,
      848, 4194, 4194, 1680, 4194, 4194, 4194,  962, 4194, 4194,
     4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,  959,
      960, 2913,  959,  847, 4194,  848,  962, 4194, 1680, 4194,
      962,  963,  964, 4194, 1043,  963,  964, 1043, 4194, 4194,
     4194, 4194,  847, 4194,  848, 1045,  847, 4194,  848,  959,
      960, 1046,  959, 4194, 4194, 1118, 1119, 1119, 1118, 4194,
      962, 1047, 4194, 4194, 4194,  963,  964, 2914, 3916,  718,
     3916, 3916,  842, 4194, 4194,  842,  847, 4194,  848, 3918,

     4194, 1048, 1121,  844, 1122, 2915, 4194, 2916,  845,  846,
     4194, 4194, 4003, 2622, 2622, 4003, 4194, 3905, 4194,  847,
     3751,  848, 1123, 2050,  999, 1599, 1841, 1842, 1842, 1841,
     1599, 1599, 1599, 1843, 1599, 1599, 1599, 1599, 1599, 1599,
     1599, 1599, 1599, 1599, 1599, 1136, 4194, 3199, 4194, 1118,
     1119, 1119, 1118, 1844, 1599, 1845, 1599, 1599, 1599, 4194,
     4194, 1118, 1119, 1119, 1118, 1118, 1119, 1119, 1118, 4194,
     4194, 4194, 1599, 1846, 1599, 1599, 1121, 4194, 1122, 4194,
     4194, 2966, 1118, 1119, 1119, 1118, 4194, 4194, 1121, 4194,
     1122, 4194, 1121, 4194, 1122, 4194, 1123, 1118, 1119, 1119,

     1118, 4194, 4194, 1599, 1599, 1599, 1599, 1843, 1123, 1121,
     4194, 1122, 1123, 4194, 4194, 2972, 1118, 1119, 1119, 1118,
     2974, 4194, 3949, 3950, 1121, 4194, 1122, 1368, 1368, 1123,
     4194, 1136, 2975, 1118, 1119, 1119, 1118, 1118, 1119, 1119,
     1118, 4194, 3951, 1121, 1123, 1122, 4194, 3065, 3066, 3066,
     3065, 4194, 4194, 4194,  842, 4194, 4194,  842,  720, 4194,
     1121, 2976, 1122, 1123, 1121,  844, 1122, 4194, 4194, 4194,
      845,  846, 4194, 2977, 2624, 4194, 3068, 4194, 3204, 4194,
     1123,  847, 4194,  848, 1123, 4004, 2622, 2622, 4004, 4194,
     3950, 4194, 4194, 4194, 2052, 4194, 2050, 4194, 4194, 2626,

     2626, 2626, 2626, 2978, 4194, 2979, 1599, 1599, 1599, 1599,
     1599, 1599, 1599, 1599, 1934, 1599, 1599, 1599, 1599, 1599,
     1599, 1599, 1599, 1599, 1599, 1599,  766, 4194, 4194, 4194,
     2626, 2626, 2626, 2626, 1599, 1599, 1599, 1599, 1599, 1599,
     4194, 4194, 1118, 1119, 1119, 1118,  767, 3065, 3066, 3066,
     3065, 4194, 4194, 1599, 1599, 1599, 1599,  766,  720, 4194,
     4194, 4194, 3029, 4194, 3064, 3105, 3105, 3105, 3105, 1121,
     4194, 1122, 4194, 4194, 2624, 4194, 3068,  767, 4194,  768,
     2674, 2674, 2674, 2674, 1599, 1599, 1599, 1599, 1934, 1123,
     4194, 2050,  766, 4194, 2052, 2628, 4194, 3066, 3066, 3066,

     3066, 4194, 4194, 4194, 4194, 4194, 4194,  766,  720, 4194,
      768, 4194,  767, 3069,  717,  718,  718,  717, 4194, 2679,
     2680, 2680, 2679, 4194, 2624,  720,  721,  767, 4194,  721,
     2681,  721, 4194, 4194,  721, 4194, 4194, 4194, 4194, 4194,
     4194,  723,  721,  724, 2052, 4194,  723,  721, 1363, 4008,
     2044, 4008, 4008, 3949, 3950, 4194, 4194, 4194, 1368, 1368,
     3906,  725,  721, 4194, 4194, 4194,  725,  721, 4194, 3080,
     2674, 2674, 3080, 3951, 4194, 4194, 2680, 2680, 2680, 2680,
     2050, 4194, 3070,  717,  718,  718,  717, 2681,  721, 4194,
      842,  721, 4194,  842,  720,  721,  766, 4194,  721, 3071,

     3072,  844, 4194,  723,  721, 4194,  845,  846, 4194, 4194,
      723,  721,  724, 4194, 4194, 4194,  767,  847, 4194,  848,
     4194, 3950, 4194,  725,  721, 4011, 2049, 4012, 4011, 4194,
      725,  721, 2057, 2058, 2058, 2057, 4013, 4194, 4194, 4194,
     4194, 3200, 4194, 4194, 2060, 4194, 4194, 1119, 1119, 1119,
     1119, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2062,
      842, 4194, 4194,  842,  842, 4194, 4194,  842, 4194, 4194,
     4194,  844, 4194, 4194, 1824,  844,  845,  846, 4194, 2063,
      845,  846, 4194, 4194, 4194, 4194, 4194,  847, 4194,  848,
     4194,  847,  842,  848, 1123,  842, 4194, 4194, 4194, 1118,

     1119, 1119, 1118,  844, 4194, 4194, 4194, 4194,  845,  846,
     4194, 3203, 1381, 2636, 4194, 3201, 2636, 4194, 4194,  847,
     4194,  848, 4194, 4194, 4194, 2060, 1121, 4194, 1122, 3202,
     4194, 4194, 2638, 2638, 2638, 2638, 2638, 2638, 2638, 2638,
     1380,  842, 3206, 4194,  842, 4107, 1123, 4194,  842, 4194,
     4194,  842,  844, 4194, 4194, 4194, 4194,  845,  846,  844,
     4194, 4194, 3205,  842,  845,  846,  842, 4194,  847, 2965,
      848, 4194, 4194, 4194,  844,  847, 4194,  848, 4194,  845,
      846, 4194, 4194, 4194,  842, 1043, 4194,  842, 1043, 4194,
      847, 4194,  848, 1381, 3077,  844, 1045, 4194, 4194, 3207,

      845,  846, 1046, 3078, 3078, 3078, 3078, 3078, 3078, 3078,
     3078,  847, 1047,  848,  842, 4194, 4194,  842, 4194, 4194,
     3079, 4194, 3079, 4194, 4194,  844, 1118, 1119, 1119, 1118,
      845,  846, 1048, 3208, 4069, 2622, 4070, 4069, 3974, 3209,
     3079,  847, 4194,  848, 4194, 4013, 3079,  717,  718,  718,
      717, 4194, 4194, 1121,  842, 1122, 4194,  842,  720,  721,
     4194, 4071,  721, 4194,  722,  844, 4194, 4194, 4194, 4194,
      845,  846, 4194, 1123,  723,  721,  724, 3343, 4194, 4194,
     3210,  847, 4194,  848, 4194, 4194, 3102, 4194, 4194, 4194,
     4194, 4194, 4194, 4194,  725,  721, 2117, 3115, 2119, 2119,

     3115, 2117, 2117, 2117, 2120, 2117, 2117, 2117, 2121, 2122,
     2117, 2117, 2122, 2117, 2123, 2117, 4194, 4194, 3214, 4194,
      842, 4194, 4194,  842, 2124, 2122, 2125, 2117, 2117, 2117,
     4194,  844, 4194, 4194, 4194, 4194,  845,  846, 4194,  842,
     4194, 4106,  842, 2117, 2126, 2122, 2117,  847, 4194,  848,
      844, 4012, 2049, 4012, 4012,  845,  846, 4194, 3347, 1119,
     1119, 3347, 4013, 4194, 4194, 4194,  847, 4194,  848, 1118,
     1119, 1119, 1118, 4194, 2117, 2117, 2117, 2117, 2120, 3127,
     2680, 2680, 3127, 4194, 4194, 1121,  842, 1122, 4194,  842,
     2681,  721, 4194, 3344,  721, 3215, 1121,  844, 1122, 4194,

     4194, 3216,  845,  846, 4194, 1123,  723,  721, 1363, 4194,
     4194, 4194, 4194,  847, 4194,  848, 1123,  842, 1366, 1367,
      842, 4194, 4194, 1368, 1368, 4194,  725,  721,  844, 4194,
     4194, 4194, 3128,  845,  846, 4194, 4194, 4194, 1369, 4194,
     4194, 1561, 4194, 4194,  847, 4194,  848, 4194, 3129, 1441,
     1442, 1443, 1443, 1442, 1441, 1441, 1441, 1444, 1441, 1441,
     1441, 1445, 1446, 1441, 1441, 1446, 1441, 1447, 1441, 4194,
     4194, 4194,  905,  842, 4194, 4194,  842, 1448, 1446, 1449,
     1441, 1441, 1441, 4194,  844, 4194, 1367, 4194, 4194,  845,
      846, 4194, 4095, 2622, 2622, 4095, 1441, 1450, 1446, 1441,

      847, 4194,  848, 2050, 4059, 4059, 4059, 4059, 4194, 4059,
     4059, 4059, 4059, 4194, 4194, 3357, 4194, 4194, 4194, 2146,
     3357, 1151, 1151, 1151, 1151, 4194, 3221, 1441, 1441, 1441,
     1441, 1444, 3190, 3191, 3190, 3190, 3191, 3190, 3190, 3190,
     3192, 3190, 3190, 3190, 3193, 3190, 3190, 3190, 3190, 3194,
     3195, 3190, 4194, 4194, 4194, 4194, 3889, 3889, 3889, 3889,
     3196, 3190, 3197, 3190, 3190, 3190, 4194, 4194, 3783, 4194,
     4194, 3783,  842, 4194, 3358,  842, 4194, 4194, 4194, 3190,
     3190, 3190, 3190,  844, 3783, 4194, 3359, 4194,  845,  846,
     3360, 4194, 4194, 3362, 4069, 2622, 4070, 4069, 1156,  847,

     4194,  848, 4194, 4194, 3783, 4013, 4194, 4194, 4194, 4194,
     3190, 3190, 3190, 3190, 3192, 2243, 2244, 2243, 2243, 2244,
     2243, 2243, 2243, 2245, 2243, 2243, 2243, 2246, 2243, 2243,
     2243, 2243, 2247, 2248, 2243, 4194, 1561, 4194, 4070, 2622,
     4070, 4070, 4194, 2249, 2243, 2250, 2243, 2243, 2243, 4013,
     4194, 4194, 1118, 1119, 1119, 1118,  842, 4194, 4194,  842,
     4194, 4194, 2243, 2243, 2243, 2243, 3211,  844, 4194, 4194,
     4194, 3212,  845,  846, 4194, 3213, 4194, 4194, 4194, 1121,
     4194, 1122, 4194,  847, 4194,  848, 4194,  842, 4194, 4194,
      842, 3336, 4194, 2243, 2243, 2243, 2243, 2245,  844, 1123,

     4194, 4194,  842,  845,  846,  842,  842, 4194, 4194,  842,
     4194, 4194, 4194,  844,  847, 3217,  848,  844,  845,  846,
     4194,  842,  845,  846,  842,  842, 4194, 4194,  842,  847,
     4194,  848,  844,  847, 4194,  848,  844,  845,  846, 4194,
     3224,  845,  846, 4194,  842, 4194, 4194,  842,  847, 4194,
      848, 4194,  847, 4194,  848,  844, 1561, 4194, 4194,  842,
      845,  846,  842,  842, 4194, 3225,  842, 4194, 4194, 4194,
      844,  847, 4194,  848,  844,  845,  846, 4194,  842,  845,
      846,  842,  842, 4194, 3226,  842,  847, 4194,  848,  844,
      847, 1561,  848,  844,  845,  846, 4194, 4194,  845,  846,

     4194, 4094, 2622, 2622, 4094,  847, 4194,  848, 4194,  847,
      842,  848, 2050,  842, 1561, 4194, 4194,  842, 1561, 4194,
      842,  844, 4194, 3227, 4194, 4194,  845,  846,  844,  763,
      763,  763,  763,  845,  846, 4194, 4194,  847, 4194,  848,
     3228, 4194,  842, 4194,  847,  842,  848, 4194, 3229, 4194,
     4194,  842, 4194,  844,  842, 4194,  766, 4194,  845,  846,
     4194, 4194,  844, 4194, 4194, 3230, 4194,  845,  846,  847,
     4194,  848,  842, 4194, 4194,  842,  767, 4194,  847,  842,
      848, 4194,  842,  844, 4194, 4194, 4194, 3231,  845,  846,
      844, 4095, 2622, 2622, 4095,  845,  846, 4194, 4194,  847,

      842,  848, 2050,  842, 4194, 4194,  847,  842,  848,  768,
      842,  844,  905, 4194, 4194, 4194,  845,  846,  844, 4194,
     4194, 3232, 4194,  845,  846, 4194, 4194,  847, 4194,  848,
      842, 3233, 4194,  842,  847, 4194,  848,  842, 4194, 4194,
      842,  844, 4194, 4194, 4194, 4194,  845,  846,  844, 3234,
     4194, 4194, 4194,  845,  846, 4194, 4194,  847,  842,  848,
     3236,  842,  842, 4194,  847,  842,  848, 4194, 4194,  844,
     3235, 4194, 4194,  844,  845,  846, 4194,  842,  845,  846,
      842, 4194, 4194, 1561, 4194,  847, 4194,  848,  844,  847,
     4194,  848,  842,  845,  846,  842, 4194, 4194, 4194,  842,

     4194, 4194,  842,  844,  847, 4194,  848, 3237,  845,  846,
      844, 4194, 4194, 3238, 4194,  845,  846, 1561, 4194,  847,
      842,  848, 4194,  842, 4194, 4194,  847, 4194,  848, 4194,
     4194,  844, 4194, 4194, 4194,  842,  845,  846,  842, 1118,
     1119, 1119, 1118, 4194, 4194, 3239,  844,  847, 4194,  848,
     4194,  845,  846,  905,  842, 4194, 2267,  842,  842, 4194,
     3345,  842,  847, 4194,  848,  844, 1121, 4194, 1122,  844,
      845,  846, 4194, 4194,  845,  846, 4194,  842, 4194, 4194,
      842,  847, 4194,  848, 4194,  847, 1123,  848,  844, 4194,
      905, 1561,  842,  845,  846,  842, 4194, 4194, 4194, 4112,

     3066, 4112, 4112,  844,  847, 4194,  848, 3240,  845,  846,
     3918,  842, 4194, 4194,  842,  905, 4194, 4194, 4194,  847,
     4194,  848,  844, 4194, 4194, 4194,  842,  845,  846,  842,
     4194, 4194, 4194, 4194, 4194, 4194, 4194,  844,  847, 4194,
      848,  842,  845,  846,  842,  959,  960, 1561,  959, 4194,
     2267, 4194,  844,  847, 4194,  848,  962,  845,  846, 4194,
     4194,  963,  964, 4194,  842, 4194, 4194,  842,  847, 4194,
      848, 4194,  847, 4194,  848,  844, 4194, 3242, 4194, 3241,
      845,  846, 4194, 4194, 3251, 4194, 4194, 4194, 4194, 4194,
     4194,  847, 4194,  848, 4194, 3243, 1575, 1576, 1575, 1575,

     1576, 1575, 1575, 1575, 1577, 1575, 1575, 1575, 1578, 1575,
     1575, 1575, 1575, 1579, 1580, 1575, 4194, 4194, 4194, 4126,
     2111, 4126, 4126, 3244, 1581, 1575, 1582, 1575, 1575, 1575,
     3918,  842, 4194, 4194,  842, 4194, 4194, 4194,  842, 4194,
     4194,  842,  844, 1575, 1575, 1575, 1575,  845,  846,  844,
     4194, 4194, 4194,  842,  845,  846,  842, 4194,  847, 4194,
      848, 4194, 4194, 4194,  844,  847, 2267,  848,  842,  845,
      846,  842, 4194, 4194, 1575, 1575, 1575, 1575, 1577,  844,
      847, 4194,  848, 4194,  845,  846, 3245, 4194, 4194, 4194,
      842, 4194, 1561,  842, 4194,  847, 4194,  848, 4194,  842,

     4194,  844,  842, 4194, 3246, 4194,  845,  846, 4194, 4194,
      844, 4194, 4194, 4194, 4194,  845,  846,  847,  842,  848,
     4194,  842,  959,  960, 4194,  959,  847, 4194,  848,  844,
     4194, 4194, 3247,  962,  845,  846, 4194, 4194,  963,  964,
     4194, 3248, 4194,  959,  960,  847,  959,  848, 4194,  847,
     4194,  848, 4194, 4194,  962, 4194, 4194, 4194, 3249,  963,
      964, 4194,  959,  960, 4194,  959, 4194, 4194, 3250, 4194,
      847, 4194,  848,  962, 4012, 2049, 4012, 4012,  963,  964,
     4194, 4194, 4194, 4194, 4194, 4013, 4194, 4194, 4194,  847,
     4194,  848, 2850, 3190, 3252, 3253, 3190, 3252, 3190, 3190,

     3190, 3254, 3190, 3190, 3190, 3255, 3190, 3190, 3190, 3190,
     3256, 3257, 3190, 4194, 3258, 4194, 4194, 3259, 4194, 4194,
     4194, 3196, 3190, 3197, 3190, 3190, 3190, 4194,  959,  960,
     4194,  959, 4194, 4194, 4194,  959,  960, 4194,  959,  962,
     3190, 3190, 3190, 3190,  963,  964,  962, 4194, 4194, 4194,
     4051,  963,  964, 4051, 4194,  847, 4194,  848, 4194, 4194,
     4194, 4052,  847, 4194,  848,  959,  960, 1046,  959, 4194,
     4194, 3190, 3190, 3190, 3190, 3254,  962, 1047, 4194, 3260,
     4194,  963,  964, 4194, 4194, 4194, 3261, 4194,  959,  960,
     4194,  959,  847, 4194,  848, 4194, 4194, 1048, 4194,  962,

     3262, 4194, 4194, 4194,  963,  964, 4194,  959,  960, 4194,
      959, 4194, 3264, 4194, 4194,  847, 3263,  848,  962, 4194,
     4194, 4194, 4194,  963,  964, 4194,  959,  960, 3265,  959,
      959,  960, 4194,  959,  847, 4194,  848,  962, 4194, 4194,
     4194,  962,  963,  964, 4194, 4194,  963,  964, 4194, 4194,
     4194,  959,  960,  847,  959,  848, 4194,  847, 4194,  848,
     4194, 4194,  962, 4194, 4194, 4194, 4194,  963,  964, 4194,
     4194,  959,  960, 4194,  959, 4194, 3266, 4194,  847, 4194,
      848, 3267,  962, 4111, 3066, 4112, 4111,  963,  964, 4194,
      959,  960, 4194,  959, 4065, 4194, 4194, 4194,  847, 4194,

      848,  962, 4194, 4194, 4194, 4194,  963,  964, 1118, 1119,
     1119, 1118, 4120,  959,  960, 4194,  959,  847, 4194,  848,
     4194, 3268,  959,  960,  962,  959, 3269, 4194, 4194,  963,
      964, 4194, 4194,  962, 4194, 1121, 4194, 1122,  963,  964,
      847, 4194,  848, 4070, 2622, 4070, 4070, 4194, 4194,  847,
     4194,  848, 4194, 4194, 4013, 1123, 3270, 2243, 2331, 2332,
     2243, 2331, 2243, 2243, 2243, 2333, 2243, 2243, 2243, 2334,
     2243, 2243, 2243, 2243, 2335, 2336, 2243, 3274, 3348, 4194,
     4194, 4194, 4194, 4194, 4194, 2249, 2243, 2250, 2243, 2243,
     2243, 4094, 2622, 2622, 4094, 4194, 4194, 3275,  959,  960,

     4194,  959, 2050, 4194, 2243, 2243, 2243, 2243, 3271,  962,
     4194, 4194, 4194, 3272,  963,  964, 4194, 3273, 2466, 4194,
     2049, 2049, 2049, 2049, 4194,  847, 4194,  848, 4194,  959,
      960, 2050,  959, 4194, 4194, 2243, 2243, 2243, 2243, 2333,
      962, 4194, 4194, 4194, 4194,  963,  964, 2624,  959,  960,
     4194,  959,  959,  960, 4194,  959,  847, 4194,  848,  962,
     3276, 4194, 4194,  962,  963,  964, 4194, 2052,  963,  964,
     4194, 3278,  960, 4194, 3278,  847, 4194,  848, 4194,  847,
     4194,  848,  962, 4194, 1680, 4194, 4194,  963,  964, 4194,
      959,  960, 4194,  959, 1118, 1119, 1119, 1118,  847, 4194,

      848,  962, 4194,  998, 4194, 4194,  963,  964, 4194,  959,
      960, 3277,  959, 4194, 4194, 4194, 4194,  847, 4194,  848,
      962, 1121, 4194, 1122, 3219,  963,  964, 4194,  959,  960,
     4194,  959, 1118, 1119, 1119, 1118,  847, 4194,  848,  962,
     3220, 1123, 4194, 3279,  963,  964, 4194,  959,  960, 1136,
      959,  959,  960, 4194,  959,  847, 4194,  848,  962, 1121,
     4194, 1122,  962,  963,  964, 4194, 4194,  963,  964, 4194,
     4194, 4194, 4194, 1680,  847, 4194,  848, 4194,  847, 1123,
      848, 3281,  959,  960, 4194,  959,  959,  960, 4194,  959,
     4194, 4194, 4194,  962, 4194, 4194, 3349,  962,  963,  964,

     4194, 1680,  963,  964, 4194,  959,  960, 4194,  959,  847,
     3282,  848, 4194,  847, 4194,  848,  962, 4194, 4194, 4194,
     4194,  963,  964, 4194,  959,  960, 4194,  959, 4119, 3066,
     4112, 4119,  847, 4194,  848,  962, 4194, 4194, 4194, 3918,
      963,  964, 4194,  959,  960, 3283,  959,  959,  960, 4194,
      959,  847, 1680,  848,  962, 4194, 4194, 4120,  962,  963,
      964, 4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,
      847, 4194,  848, 4194,  847, 1680,  848,  962, 4194, 1680,
     4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,  959,
      960, 4194,  959,  847, 4194,  848,  962, 4194, 4194, 4194,

      962,  963,  964, 4194, 4194,  963,  964, 3284, 4194, 3285,
      959,  960,  847,  959,  848, 4194,  847, 4194,  848,  959,
      960,  962,  959, 4194, 4194, 4194,  963,  964, 4194, 4194,
      962, 4194, 3286, 4194, 4194,  963,  964,  847, 4194,  848,
     3287,  959,  960, 4194,  959, 4194,  847, 4194,  848, 4194,
      959,  960,  962,  959, 4194, 4194, 4194,  963,  964, 3288,
     4194,  962, 4194, 4194, 4194, 4194,  963,  964,  847, 4194,
      848, 4194, 4194, 4194, 4194,  959,  960,  847,  959,  848,
      998, 4194,  959,  960, 4194,  959,  962, 4194, 4194, 3289,
     4194,  963,  964,  962, 4194, 4194, 4194, 4194,  963,  964,

     3290, 4194,  847, 4194,  848,  959,  960, 4194,  959,  847,
     4194,  848,  959,  960, 4194,  959,  962, 4194, 4194, 4194,
     3291,  963,  964,  962, 4125, 2111, 4126, 4125,  963,  964,
     4194, 4194,  847, 1043,  848, 3293, 1043,  959,  960,  847,
      959,  848, 4194, 4194, 1045, 3292,  959,  960,  962,  959,
     1046, 3905, 4194,  963,  964, 4194, 4194,  962, 1680, 4194,
     1047, 4194,  963,  964,  847, 4194,  848,  959,  960, 4194,
      959, 3905, 4194,  847, 4194,  848, 4194, 4194,  962, 4194,
     1048, 4194, 3294,  963,  964, 4194,  959,  960, 3863,  959,
     4194, 4194, 3295, 4194,  847, 4194,  848,  962, 4194, 4194,

     4194, 1680,  963,  964, 4194,  959,  960, 4194,  959,  959,
      960, 4194,  959,  847, 4194,  848,  962, 4194, 4194, 4194,
      962,  963,  964, 4194, 4194,  963,  964, 4194,  959,  960,
     4194,  959,  847, 4194,  848, 3296,  847, 4194,  848,  962,
     4194, 4194, 4194, 4194,  963,  964, 4194, 4194, 4194, 4194,
     2353,  959,  960, 4194,  959,  847, 4194,  848, 4194,  998,
      959,  960,  962,  959, 4194, 4194, 4194,  963,  964, 4194,
     4194,  962, 4194, 4194, 4194, 4194,  963,  964,  847,  998,
      848, 4194,  959,  960, 1680,  959, 4194,  847, 4194,  848,
     4194,  959,  960,  962,  959, 4194, 4194, 4194,  963,  964,

     4194, 4194,  962, 4194, 3297, 4194, 4194,  963,  964,  847,
     4194,  848,  959,  960, 4194,  959, 4194,  998,  847, 4194,
      848,  959,  960,  962,  959, 4194, 4194, 4194,  963,  964,
     4194, 4194,  962, 4194, 4194, 4194, 4194,  963,  964,  847,
     4194,  848,  959,  960, 4194,  959, 4194, 4194,  847, 2353,
      848, 4194, 1680,  962, 3356, 3356, 3356, 3356,  963,  964,
     4194, 4194,  959,  960, 4194,  959, 4194, 4194, 4194,  847,
     4194,  848, 3299,  962, 4194, 4194, 4194, 4194,  963,  964,
     3298, 4194, 3357, 4194, 3357, 4194, 4194, 4194, 4194,  847,
     4194,  848, 4194, 4194, 4194, 4194, 3300, 1575, 1694, 1695,

     1575, 1694, 1575, 1575, 1575, 1696, 1575, 1575, 1575, 1697,
     1575, 1575, 1575, 1575, 1698, 1699, 1575, 4194, 4194, 4194,
     4194, 3301, 4194, 4194, 3600, 1581, 1575, 1582, 1575, 1575,
     1575, 1156,  959,  960, 4194,  959, 4194, 4194, 4194,  959,
      960, 4194,  959,  962, 1575, 1575, 1575, 1575,  963,  964,
      962, 4194, 4194, 4194, 4194,  963,  964, 4194, 4194,  847,
     4194,  848, 4194, 4194, 4194, 4194,  847, 2353,  848,  959,
      960, 4194,  959, 4194, 4194, 1575, 1575, 1575, 1575, 1696,
      962, 4194, 4194, 4194, 4194,  963,  964, 3302,  959,  960,
     4194,  959, 4194, 1680, 4194, 4194,  847, 4194,  848,  962,

     4194, 4194, 4194, 4194,  963,  964, 4194,  959,  960, 4194,
      959,  959,  960, 4194,  959,  847, 4194,  848,  962, 4194,
     3303, 4194,  962,  963,  964, 4194,  842,  963,  964,  842,
      959,  960, 4194,  959,  847, 4194,  848,  844,  847, 4194,
      848,  962,  845,  846, 4194, 4194,  963,  964, 4194, 4194,
     4194, 4194, 3304,  847, 4194,  848, 4194,  847, 3305,  848,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     3306, 4194, 4194, 4194, 1118, 1119, 1119, 1118, 3496, 4194,
     3307, 3190, 3337, 3338, 3338, 3337, 3190, 3190, 3190, 3339,
     3190, 3190, 3190, 3190, 3190, 3190, 3190, 3190, 3190, 3190,

     3190, 1121, 4194, 1122, 4194, 1118, 1119, 1119, 1118, 3340,
     3190, 3341, 3190, 3190, 3190, 4194, 4194, 1118, 1119, 1119,
     1118, 1123, 4194, 4194, 3346, 4194, 4194, 4194, 3190, 3342,
     3190, 3190, 1121, 4194, 1122, 4194, 4194, 4194, 1118, 1119,
     1119, 1118, 4194, 4194, 1121, 4194, 1122, 1118, 1119, 1119,
     1118, 4194, 1123, 1118, 1119, 1119, 1118, 4194, 4194, 3190,
     3190, 3190, 3190, 3339, 1123, 1121, 4194, 1122, 4194, 4194,
     4194, 1136, 4194, 4194, 1121, 1136, 1122, 4194, 4194, 4194,
     1121, 4194, 1122, 4194, 4194, 1123, 1118, 1119, 1119, 1118,
     3356, 3356, 3356, 3356, 1123, 3402, 3066, 3066, 3402, 4194,

     1123, 4194, 4194, 4194, 1136, 4194,  720, 4194, 1136, 4194,
     4194, 4194, 3350, 1121, 4194, 1122, 4194, 4194, 3357, 4194,
     3357, 4194, 2051,  842, 3068, 4194,  842, 4156, 2674, 4156,
     4156, 4194, 4194, 1123,  844, 4194, 3351, 4194, 4013,  845,
      846, 4194, 2052, 3358, 4194, 4194, 4194, 4194, 4194, 4194,
      847, 4194,  848, 4194, 4194, 3359, 3905, 4194, 4194, 3360,
     3361, 4194, 3362, 4194, 4194, 4194, 4194, 1156, 3190, 3190,
     3190, 3190, 3190, 3190, 3190, 3190, 3382, 3190, 3190, 3190,
     3190, 3190, 3190, 3190, 3190, 3190, 3190, 3190, 4194, 4194,
     4194, 4194, 3402, 3066, 3066, 3402, 3190, 3190, 3190, 3190,

     3190, 3190, 4194,  720, 4194, 4194, 4194, 4194, 4194, 3065,
     3066, 3066, 3065, 4194, 4194, 3190, 3190, 3190, 3190, 2051,
      720, 3068, 4194, 4194, 3065, 3066, 3066, 3065, 4194, 4194,
     3065, 3066, 3066, 3065, 4194,  720, 2624, 4194, 2106, 2052,
     4194,  720, 4194, 4194, 4194, 4194, 3190, 3190, 3190, 3190,
     3382, 2624, 4194, 3068, 4194, 4194, 2052, 2624, 3404, 3068,
     4194, 4194, 4194, 3104,  718,  718, 3104, 4194, 4194, 4194,
     4194, 2052, 4194, 4194,  720,  721, 4194, 2052,  721, 4194,
     1118, 1119, 1119, 1118, 4194, 3407,  717,  718,  718,  717,
      723,  721, 1363, 3437, 2680, 2680, 3437,  720,  721, 4194,

     4194,  721, 4194, 4194, 2681,  721, 4194, 1121,  721, 1122,
      725,  721, 4194,  723,  721,  724, 4194, 4194, 4194, 4194,
      723,  721, 1363, 4194, 4194, 4194, 4194, 1123,  842, 4194,
     4194,  842, 3590,  725,  721, 4194, 4194, 3408, 3077,  844,
      725,  721, 4194, 4194,  845,  846, 4194, 3078, 3078, 3078,
     3078, 3078, 3078, 3078, 3078,  847, 4194,  848, 4194, 4194,
      842, 4194, 4194,  842, 3079, 4194, 3079, 3130, 3131, 3131,
     3130,  844, 4194, 4194, 4194, 4194,  845,  846,  720,  721,
     4194, 3498,  721, 4194, 3079, 4194, 4194,  847, 4194,  848,
     3079, 3077, 4194, 4194,  723,  721, 1363, 4194, 4194, 4194,

     3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078, 4194, 4146,
     3066, 4112, 4146, 4194,  725,  721, 4194, 3079, 4194, 3079,
     4065, 3131, 3131, 3131, 3131, 4194, 4194, 4194, 1561, 4194,
     4194, 4194,  720,  721, 4194, 4194,  721, 3079, 4120, 3480,
     3480, 3480, 3480, 3079,  717,  718,  718,  717,  723,  721,
     2681,  721, 4194, 4194,  721,  720,  721, 4194, 4194,  721,
     4194,  722, 4194, 4194, 4194, 4194,  723,  721,  725,  721,
     4194,  723,  721,  724, 4194, 4194, 4194,  842, 4194, 4194,
      842, 4194, 4194, 4194, 4194, 4194,  725,  721,  844, 4194,
     4194,  725,  721,  845,  846, 4194, 3431,  717,  718,  718,

      717, 4194,  842, 3481,  847,  842,  848, 4194,  720,  721,
     4194, 4194,  721,  844,  722, 4194, 4194, 4194,  845,  846,
     4194, 4194, 4194, 4194,  723,  721,  724, 4194, 4194,  847,
      842,  848, 4194,  842, 4194, 4194, 4194, 4194, 4194,  842,
     3497,  844,  842, 4194,  725,  721,  845,  846, 4194, 4194,
      844, 4194, 4194, 4194, 4194,  845,  846,  847, 4194,  848,
     3433, 3127, 2680, 2680, 3127, 4194,  847,  842,  848, 4194,
      842, 1561, 2681,  721, 4194, 4194,  721, 4194,  844, 4194,
     4194, 4194, 4194,  845,  846, 4194, 1561, 4194,  723,  721,
     1363, 4194, 4194, 4194,  847,  842,  848, 4194,  842,  842,

     4194, 4194,  842,  905, 4194, 4194,  844, 4194,  725,  721,
      844,  845,  846, 4194, 3128,  845,  846, 3499, 4194, 4194,
     4194, 4194,  847, 4194,  848, 4194,  847, 4194,  848, 4194,
     3129, 2117, 3466, 2119, 2119, 3466, 2117, 2117, 2117, 2120,
     2117, 2117, 2117, 2121, 2122, 2117, 2117, 2122, 2117, 2123,
     2117, 4194, 4194, 4194, 4194,  842, 4194, 4194,  842, 2124,
     2122, 2125, 2117, 2117, 2117,  905,  844, 4194, 4194, 4194,
     3502,  845,  846, 4194,  842, 4194, 4194,  842, 2117, 2126,
     2122, 2117,  847, 4194,  848,  844, 4194, 4194, 4194, 4194,
      845,  846, 4194, 3903, 2049, 2049, 3903, 4194, 4194, 4194,

     4194,  847, 4194,  848, 2050, 3500, 4194, 4194, 4194, 2117,
     2117, 2117, 2117, 2120, 3479, 3480, 3480, 3479, 4194,  842,
     2051, 4194,  842, 4194, 4194, 2681,  721, 4194,  842,  721,
      844,  842, 4194, 3501, 4194,  845,  846, 4194, 4194,  844,
     2052,  723,  721, 1363,  845,  846,  847,  842,  848, 4194,
      842, 4194, 4194, 4194, 4194,  847,  842,  848,  844,  842,
     4194,  725,  721,  845,  846, 4194, 4194,  844, 4194, 4194,
     4194, 4194,  845,  846,  847, 4194,  848,  842, 3481, 4194,
      842, 3503, 4194,  847, 4194,  848,  842, 4194,  844,  842,
     4194, 4194, 4194,  845,  846, 4194, 4194,  844, 1561, 4194,

     3504, 4194,  845,  846,  847,  842,  848, 4194,  842,  842,
     4194, 4194,  842,  847, 4194,  848,  844, 4194, 4194, 4194,
      844,  845,  846, 4194, 4194,  845,  846, 4194, 3505, 4194,
     3506, 4194,  847, 4194,  848, 4194,  847,  842,  848, 4194,
      842, 3507, 4173, 3105, 4173, 4173, 4194, 4194,  844, 4153,
     3066, 4112, 4153,  845,  846, 4194,  842, 3508, 4194,  842,
     3918, 4194, 4194, 4194,  847,  842,  848,  844,  842, 3930,
     4194, 3509,  845,  846, 4194, 4194,  844, 4194, 4120, 2267,
     4194,  845,  846,  847,  842,  848, 4194,  842, 4194, 3931,
     3510, 4194,  847,  842,  848,  844,  842, 4194, 4194, 4194,

      845,  846, 4194, 4194,  844, 1370, 1370, 1370, 1370,  845,
      846,  847, 4194,  848,  842, 3513, 4194,  842,  842, 4194,
      847,  842,  848, 4194, 4194,  844, 4194, 4194, 4194,  844,
      845,  846,  766,  842,  845,  846,  842, 4194, 4194, 4194,
     2267,  847,  906,  848,  844,  847, 4194,  848,  842,  845,
      846,  842,  767, 4194, 4194, 4194, 4194, 4194, 3515,  844,
      847, 4194,  848,  842,  845,  846,  842, 1561, 4194, 3516,
     1372, 4194, 4194, 4194,  844,  847, 4194,  848,  842,  845,
      846,  842, 4194, 4194, 4194, 1373, 4194, 4194, 1561,  844,
      847, 4194,  848,  842,  845,  846,  842,  842, 4194, 3517,

      842, 4194, 4194, 4194,  844,  847, 4194,  848,  844,  845,
      846, 4194, 4194,  845,  846, 4194,  842, 4194, 4194,  842,
      847, 4194,  848, 4194,  847,  842,  848,  844,  842, 3518,
     4194, 4194,  845,  846, 4194, 4194,  844, 4156, 2674, 4156,
     4156,  845,  846,  847,  842,  848, 3519,  842, 4013, 4194,
     4194, 3521,  847, 4194,  848,  844, 4194, 4194, 3520, 4194,
      845,  846, 4194, 4194, 4194,  842, 3905, 4194,  842, 4194,
     4194,  847,  842,  848, 4194,  842,  844, 4194, 4194, 4194,
     1561,  845,  846,  844, 1561, 4194, 4194, 4194,  845,  846,
     4194, 4194,  847, 4194,  848,  842, 4194, 4194,  842,  847,

     4194,  848, 1118, 1119, 1119, 1118,  844, 4194, 4194, 4194,
      842,  845,  846,  842, 3522, 4194, 4194, 4194, 4194, 4194,
     3523,  844,  847, 4194,  848, 4194,  845,  846, 4194, 1824,
     4194, 1122, 4194, 4194, 4194, 4194, 4194,  847, 4194,  848,
     3524, 4194, 4194, 4194, 1118, 1119, 1119, 1118, 4194, 1123,
     3525, 2243, 2244, 2243, 2243, 2244, 2243, 2243, 2243, 2245,
     2243, 2243, 2243, 2246, 2243, 2243, 2243, 2243, 2247, 2248,
     2243, 1121, 4194, 1122, 4194, 3527, 4194, 4194, 4194, 2249,
     2243, 2250, 2243, 2243, 2243, 4194, 4173, 3105, 4173, 4173,
     4194, 1123,  842, 4194, 4194,  842, 4194, 3906, 2243, 2243,

     2243, 2243, 3526,  844, 4194, 4194, 4194,  842,  845,  846,
      842,  842, 4194, 4194,  842, 3905, 4194, 4194,  844,  847,
     4194,  848,  844,  845,  846, 4194, 4194,  845,  846, 2243,
     2243, 2243, 2243, 2245,  847, 4194,  848, 4194,  847, 4194,
      848, 4194,  842, 4194, 4194,  842, 3347, 1119, 1119, 3347,
     4194, 4194, 4194,  844, 4194, 4194, 4194, 3529,  845,  846,
     4194,  842, 3528, 4194,  842,  842, 3530, 4194,  842,  847,
     4194,  848,  844, 1824, 4194, 1122,  844,  845,  846, 4194,
      842,  845,  846,  842,  842, 4194, 4194,  842,  847, 4194,
      848,  844,  847, 1123,  848,  844,  845,  846, 1561,  842,

      845,  846,  842, 1118, 1119, 1119, 1118,  847, 4194,  848,
      844,  847, 4194,  848, 4194,  845,  846, 4194,  959,  960,
     3532,  959,  959,  960, 3531,  959,  847, 4194,  848,  962,
     1121, 4194, 1122,  962,  963,  964, 4194, 4194,  963,  964,
     4194, 4194, 1561, 4194, 4194,  847, 3533,  848, 4194,  847,
     1123,  848, 4194, 4194, 4194,  959,  960, 4194,  959, 4194,
     4194, 4194,  959,  960, 4194,  959,  962, 1136, 4194,  905,
     3534,  963,  964,  962, 4194, 4194, 4194, 4194,  963,  964,
     4194, 4194,  847, 4194,  848,  959,  960, 4194,  959,  847,
     4194,  848,  959,  960, 4194,  959,  962, 4194, 4194, 4194,

     4194,  963,  964,  962, 4194, 4194, 4194, 4194,  963,  964,
     4194, 4194,  847, 4194,  848,  959,  960, 4194,  959,  847,
     4194,  848, 4194, 4194, 4194, 3535,  962, 4194, 4194, 4194,
     4194,  963,  964, 4194, 4194,  959,  960, 4194,  959, 4194,
     4194, 4194,  847, 4194,  848, 3536,  962, 4194, 4194, 4194,
     4194,  963,  964, 1680,  959,  960, 4194,  959,  959,  960,
     4194,  959,  847, 4194,  848,  962, 4194, 4194, 4194,  962,
      963,  964, 4194, 4194,  963,  964, 4194,  959,  960, 4194,
      959,  847, 4194,  848, 1680,  847, 4194,  848,  962, 4194,
     4194, 1680, 4194,  963,  964, 4194,  959,  960, 4194,  959,

     4194, 4194, 4194, 4194,  847, 4194,  848,  962, 3537, 4194,
     4194, 4194,  963,  964, 4194, 4194, 4194, 4194,  998,  959,
      960, 4194,  959,  847, 4194,  848, 4194, 3538,  959,  960,
      962,  959, 4194, 4194, 4194,  963,  964, 4194, 4194,  962,
     4194, 4194, 4194, 4194,  963,  964,  847, 4194,  848, 4194,
     4194, 4194, 4194,  959,  960,  847,  959,  848, 4194, 4194,
      959,  960, 4194,  959,  962, 4194,  998, 4194, 4194,  963,
      964,  962, 4194, 4194, 4194, 4194,  963,  964, 3539, 4194,
      847, 4194,  848, 4194, 4194,  959,  960,  847,  959,  848,
     4194, 4194,  959,  960, 4194,  959,  962, 4194, 4194, 3540,

     4194,  963,  964,  962, 4194, 4194, 4194, 4194,  963,  964,
     4194, 4194,  847, 4194,  848, 3541, 4194,  959,  960,  847,
      959,  848, 4194, 4194,  959,  960, 4194,  959,  962, 4194,
     1680, 4194, 4194,  963,  964,  962, 4194, 4194, 3542, 4194,
      963,  964, 4194, 4194,  847, 4194,  848, 3903, 2049, 2049,
     3903,  847, 4194,  848, 4194, 4194,  959,  960, 2050,  959,
      959,  960, 4194,  959, 3543, 4194, 3544,  962, 4194, 4194,
     4194,  962,  963,  964, 2624, 4194,  963,  964, 4194, 4194,
     4194, 3545, 4194,  847, 4194,  848, 4194,  847, 4194,  848,
      959,  960, 4194,  959, 2052, 3546, 4194, 3278,  960, 4194,

     3278,  962, 4194, 4194, 4194, 4194,  963,  964,  962, 4194,
     4194, 4194, 4194,  963,  964, 4194, 4194,  847, 4194,  848,
      959,  960, 3547,  959,  847, 4194,  848, 4194, 4194, 4194,
     2353,  962, 4194, 4194, 4194, 4194,  963,  964, 4194, 4194,
     4194,  959,  960, 3548,  959,  959,  960,  847,  959,  848,
     3219, 4194,  962, 4194, 4194, 4194,  962,  963,  964, 4194,
      842,  963,  964,  842,  959,  960, 3220,  959,  847, 4194,
      848,  844,  847, 4194,  848,  962,  845,  846, 4194, 3549,
      963,  964, 4194,  959,  960, 4194,  959,  847, 4194,  848,
     4194,  847, 4194,  848,  962, 4011, 2049, 4012, 4011,  963,

      964, 4194, 4194,  999,  959,  960, 4013,  959,  959,  960,
      847,  959,  848, 4194, 1561,  962, 2353, 4194, 4194,  962,
      963,  964, 4014,  842,  963,  964,  842,  959,  960, 3550,
      959,  847, 4194,  848,  844,  847, 1680,  848,  962,  845,
      846, 4194, 4015,  963,  964, 4194, 4194, 4194,  959,  960,
      847,  959,  848, 4194,  847, 3551,  848,  959,  960,  962,
      959, 4194, 4194, 1680,  963,  964, 4194, 4194,  962, 4194,
     4194, 4194, 4194,  963,  964,  847, 4194,  848, 3552,  959,
      960, 4194,  959, 3705,  847, 4194,  848, 4194,  959,  960,
      962,  959, 4194, 4194, 4194,  963,  964, 4194, 4194,  962,

     4194, 4194, 4194, 4194,  963,  964,  847, 4194,  848, 4194,
      959,  960, 4194,  959, 3553,  847, 4194,  848, 4194,  959,
      960,  962,  959, 4194, 4194, 3554,  963,  964, 4194, 4194,
      962, 4194, 4194, 4194, 4194,  963,  964,  847, 4194,  848,
      959,  960, 3556,  959, 3555, 4194,  847, 4194,  848, 4194,
     4194,  962, 4194, 4194, 4194, 4194,  963,  964, 4194,  959,
      960, 4194,  959, 4194, 4194, 4194, 4194,  847, 4194,  848,
      962, 4194, 4194, 4194, 1680,  963,  964, 4194, 1680,  959,
      960, 4194,  959, 4194, 4194, 4194,  847, 4194,  848, 4194,
      962, 4194, 4194, 4194, 4194,  963,  964, 4194, 4194, 4194,

      959,  960, 4194,  959, 4194, 4194,  847, 4194,  848, 4194,
     3557,  962, 4194, 4194, 3558, 4194,  963,  964, 4194, 4194,
     4194,  959,  960, 4194,  959,  959,  960,  847,  959,  848,
     4194, 4194,  962, 4194, 4194, 4194,  962,  963,  964, 4194,
     4194,  963,  964, 4194, 4194, 4194, 4194, 3559,  847, 4194,
      848, 4194,  847, 4194,  848, 3560, 2243, 2331, 2332, 2243,
     2331, 2243, 2243, 2243, 2333, 2243, 2243, 2243, 2334, 2243,
     2243, 2243, 2243, 2335, 2336, 2243, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 2249, 2243, 2250, 2243, 2243, 2243,
     3562, 3563, 4194, 4194, 4194, 4194, 4194,  959,  960, 4194,

      959, 4194, 4194, 2243, 2243, 2243, 2243, 3561,  962, 4194,
     4194, 4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,
     4194, 4194, 4194, 4194,  847, 4194,  848,  962, 4194, 4194,
     4194, 4194,  963,  964, 2243, 2243, 2243, 2243, 2333,  959,
      960, 4194,  959,  847, 4194,  848, 4194, 3564,  959,  960,
      962,  959, 4194, 4194, 4194,  963,  964, 4194, 4194,  962,
     4194, 4194, 4194, 4194,  963,  964,  847, 4194,  848,  959,
      960, 3565,  959,  959,  960,  847,  959,  848, 4194, 4194,
      962, 4194, 4194, 4194,  962,  963,  964, 4194, 4194,  963,
      964, 4194, 4194, 4194, 4194, 1680,  847, 4194,  848, 4194,

      847, 4194,  848,  959,  960, 4194,  959, 1118, 1119, 1119,
     1118, 3566,  959,  960,  962,  959, 4194, 4194, 4194,  963,
      964, 4194, 4194,  962, 3567, 4194, 4194, 4194,  963,  964,
      847, 4194,  848, 4194, 1121, 1680, 1122, 4194, 4194,  847,
     4194,  848, 1118, 1119, 1119, 1118, 1118, 1119, 1119, 1118,
     1118, 1119, 1119, 1118, 1123, 4194, 4194, 3591, 1118, 1119,
     1119, 1118, 4194, 4194, 4194, 3568, 4194,  842, 4194, 1121,
      842, 1122, 4194, 1121, 4194, 1122, 4194, 1121,  844, 1122,
     4194, 4194,  998,  845,  846, 1121, 4194, 1122, 4194, 1123,
     4194, 4194, 3592, 1123,  847, 4194,  848, 1123, 1118, 1119,

     1119, 1118, 4194, 4194, 4194, 1123, 1118, 1119, 1119, 1118,
     4194, 4194, 4194, 3593, 4194, 4194, 1136, 4194, 1136, 3356,
     3356, 3356, 3356, 4194, 4194, 1121, 4194, 1122, 3402, 3066,
     3066, 3402, 4194, 1121, 4194, 1122, 4194, 1561, 4194,  720,
     3402, 3066, 3066, 3402, 4194, 1123, 4194, 3357, 4194, 3357,
     4194,  720, 4194, 1123, 4194, 2624, 4194, 2106, 4194, 4194,
     3594, 4194, 4194, 3402, 3066, 3066, 3402, 2051, 4194, 3068,
     4194, 4194, 3597, 4194,  720, 2052, 1136, 4194, 4194, 4194,
     1118, 1119, 1119, 1118, 3598, 4194, 4194, 2052, 3599, 3600,
     2051, 3601, 3068, 4194, 4194, 4194, 1156, 3065, 3066, 3066,

     3065, 3437, 2680, 2680, 3437, 4194, 4194, 1121,  720, 1122,
     2052, 4194, 2681,  721, 4194, 4194,  721, 4194, 3629, 4194,
     4194, 4194, 4194, 4194, 2624, 4194, 3068, 1123,  723,  721,
     1363, 4194, 4194, 4194, 4194, 3480, 3480, 3480, 3480, 4194,
     3758, 4194, 4194, 4194, 2052, 4194, 2681,  721,  725,  721,
      721, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1118, 1119,
     1119, 1118,  723,  721, 4194, 3630,  717,  718,  718,  717,
     4194, 4194, 4194,  842, 4194, 4194,  842,  720,  721, 4194,
     4194,  721,  725,  721,  844, 1121, 4194, 1122, 4194,  845,
      846, 4194, 4194,  723,  721,  724, 4194, 4194, 4194, 3481,

      847, 4194,  848, 4194,  842, 1123, 4194,  842, 4034, 2049,
     2049, 4034, 1136,  725,  721,  844, 4194, 4194, 4194, 2050,
      845,  846, 4194, 4072, 2623, 4072, 4072, 4194, 1561, 4194,
     4194,  847, 4194,  848, 3906, 2051, 3631,  717,  718,  718,
      717, 4194,  842, 4194, 4194,  842, 4194, 4194,  720,  721,
     4073, 4194,  721,  844,  722, 2052, 4194, 4194,  845,  846,
     1118, 1119, 1119, 1118,  723,  721,  724, 4194, 4194,  847,
     4015,  848, 4194, 4194,  905, 4194, 4194,  842, 4194, 4194,
      842, 4194, 4194, 4194,  725,  721, 4194, 1121,  844, 1122,
     4194, 4194, 4194,  845,  846, 4194, 4194, 3648,  717,  718,

      718,  717, 4194, 4194,  847, 4194,  848, 1123, 4194,  720,
      721, 4194,  905,  721, 4194,  722, 4194, 4194, 4194, 4194,
     4194,  842, 4194, 4194,  842,  723,  721,  724, 4194, 4194,
     1136, 4194,  844, 4194, 4194, 4194, 4194,  845,  846, 4194,
     4194, 4194, 4194, 4194, 4194,  725,  721, 1561,  847, 4194,
      848, 4194, 4194, 1427, 2117, 3651, 3652, 3652, 3651, 2117,
     2117, 2117, 2120, 2117, 2117, 2117, 2121, 2122, 2117, 2117,
     2122, 2117, 2123, 2117, 4194, 4194, 4194, 4194, 3889, 3889,
     3889, 3889, 2124, 2122, 2125, 2117, 2117, 2117, 4194, 3706,
     3783, 4194, 4194, 3783,  842, 4194, 4194,  842, 4194, 4194,

     4194, 2117, 2126, 2122, 2117,  844, 3783, 4194, 4194, 4194,
      845,  846, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194,  847, 4194,  848, 4194, 4194, 3783, 4194, 4194, 4194,
     4194, 4194, 2117, 2117, 2117, 2117, 2120, 3660, 3661, 3662,
     3662, 3661, 3660, 3660, 3660, 3663, 3660, 3660, 3660, 3664,
     3665, 3660, 3660, 3665, 3660, 3666, 3660, 4194, 4194, 4194,
     3709, 4194, 4194, 4194, 4194, 3667, 3665, 3668, 3660, 3660,
     3660, 4194, 4194, 4194, 4194, 4194, 4194, 4194,  842, 4194,
     4194,  842, 4194, 4194, 3660, 3669, 3665, 3660, 3670,  844,
     4194, 4194, 4194, 4194,  845,  846, 4194,  842, 4194, 4194,

      842, 4194, 4194, 4194, 4194,  847, 4194,  848,  844, 4194,
     4194, 4194, 4194,  845,  846, 3660, 3660, 3660, 3660, 3663,
     3679, 2680, 2680, 3679,  847,  842,  848, 4194,  842, 3707,
     4194, 2681,  721, 4194,  842,  721,  844,  842, 4194, 4194,
     4194,  845,  846, 4194, 4194,  844, 4194,  723,  721, 1363,
      845,  846,  847, 4194,  848,  842, 3710, 4194,  842, 4194,
     4194,  847, 4194,  848, 4194, 4194,  844,  725,  721, 4194,
      842,  845,  846,  842,  842, 3680, 3708,  842, 4194, 3681,
     4194,  844,  847, 4194,  848,  844,  845,  846, 3682, 2267,
      845,  846, 3683, 3479, 3480, 3480, 3479,  847, 4194,  848,

     4194,  847, 4194,  848, 2681,  721, 4194, 4194,  721, 4194,
     1561, 4194, 4194, 4194, 4194,  842, 4194, 4194,  842, 4194,
      723,  721, 1363, 4194, 3711, 4194,  844, 1118, 1119, 1119,
     1118,  845,  846, 4194, 1561,  842, 4194, 4194,  842, 4194,
      725,  721,  847, 4194,  848, 4194,  844, 4194, 4194, 4194,
      842,  845,  846,  842, 1121, 4194, 1122, 3481, 4194, 4194,
     4194,  844,  847, 4194,  848,  842,  845,  846,  842, 4194,
     4194, 4194, 4194, 4194, 1123, 4194,  844,  847, 4194,  848,
     3976,  845,  846, 4194, 4194, 1561, 4194, 4194,  842, 4194,
     4194,  842,  847, 4194,  848,  842, 4194, 1561,  842,  844,

     4194, 4194, 4194, 3714,  845,  846,  844, 4194, 4194, 4194,
     4194,  845,  846, 4194, 4194,  847, 4194,  848, 4194, 4194,
     4194, 4194,  847, 4194,  848, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1561, 3715, 3716, 3715, 3715,
     3716, 3715, 3715, 3715, 3717, 3715, 3715, 3715, 3718, 3715,
     3715, 3715, 3715, 3719, 3720, 3715, 1561, 4194, 4194, 4194,
     4194, 4194, 4194, 1561, 3721, 3715, 3722, 3715, 3715, 3715,
     4194,  842, 4194, 4194,  842, 4194, 4194, 4194,  842, 4194,
     4194,  842,  844, 3715, 3715, 3715, 3715,  845,  846,  844,
     4194, 4194, 4194,  842,  845,  846,  842, 4194,  847, 4194,

      848, 4194, 4194, 4194,  844,  847, 4194,  848,  842,  845,
      846,  842, 4194, 4194, 3715, 3715, 3715, 3715, 3717,  844,
      847, 4194,  848, 4194,  845,  846, 1561,  842, 4194, 4194,
      842,  842, 4194, 3723,  842,  847, 4194,  848,  844, 4194,
     4194, 4194,  844,  845,  846, 4194,  842,  845,  846,  842,
     4194, 4194, 4194, 4194,  847, 4194,  848,  844,  847, 3724,
      848, 4194,  845,  846, 4194,  842, 4194, 4194,  842, 4194,
     4194, 4194, 4194,  847, 4194,  848,  844, 1561, 3725, 4194,
     3726,  845,  846, 4194, 4194, 4194,  842, 4194, 4194,  842,
     4194, 4194,  847,  842,  848, 3727,  842,  844, 4194, 4194,

     4194, 1561,  845,  846,  844, 4194, 4194, 4194,  842,  845,
      846,  842, 4194,  847, 4194,  848, 4194, 4194, 4194,  844,
      847, 4194,  848, 4194,  845,  846, 4194, 3728,  842, 4194,
     4194,  842, 4194, 4194, 4194,  847, 4194,  848, 4194,  844,
     4194, 4194, 4194, 4194,  845,  846, 4194, 4194, 1561, 4194,
     3729, 4194, 4194,  959,  960,  847,  959,  848, 4194, 4194,
      959,  960,  905,  959,  962, 4194, 4194, 4194, 4194,  963,
      964,  962, 4194, 4194, 4194, 4194,  963,  964, 4194, 4194,
      847, 4194,  848, 1561, 4194,  959,  960,  847,  959,  848,
     4194, 4194,  959,  960, 4194,  959,  962, 4194, 4194, 4194,

     4194,  963,  964,  962, 4194, 4194, 4194, 4194,  963,  964,
     4194, 4194,  847, 3730,  848, 1680, 4194,  959,  960,  847,
      959,  848, 4194, 4194,  959,  960, 4194,  959,  962, 4194,
     4194, 4194, 4194,  963,  964,  962, 4194, 4194, 4194, 4194,
      963,  964, 4194, 4194,  847, 4194,  848,  959,  960, 4194,
      959,  847, 4194,  848, 4194, 1680,  959,  960,  962,  959,
     4194, 4194,  998,  963,  964, 4194, 4194,  962, 4194, 4194,
     4194, 4194,  963,  964,  847,  842,  848, 4194,  842,  959,
      960, 4194,  959,  847, 4194,  848,  844,  998, 4194, 4194,
      962,  845,  846, 4194, 1680,  963,  964, 4194, 4194, 4194,

      959,  960,  847,  959,  848, 4194,  847, 4194,  848, 4194,
     1680,  962, 4194, 4194, 4194, 3731,  963,  964, 4194, 4194,
      959,  960, 4194,  959, 4194, 4194, 4194,  847, 3847,  848,
     3732,  962, 4194, 4194, 4194, 4194,  963,  964, 4194,  959,
      960, 4194,  959, 3402, 3066, 3066, 3402,  847, 4194,  848,
      962, 3733, 4194, 4194,  720,  963,  964, 4194,  959,  960,
     4194,  959,  959,  960, 4194,  959,  847, 4194,  848,  962,
     2051, 4194, 3068,  962,  963,  964, 4194, 4194,  963,  964,
     4194, 4194, 4194, 4194, 4194,  847, 3734,  848, 4194,  847,
     2052,  848,  959,  960, 4194,  959, 4194, 4194, 3735,  959,

      960, 4194,  959,  962, 4194, 4194, 4194, 4194,  963,  964,
      962, 3778, 4194, 2353, 4194,  963,  964, 1680, 4194,  847,
     4194,  848,  959,  960, 4194,  959,  847, 4194,  848,  959,
      960, 4194,  959,  962, 4194, 4194, 4194, 4194,  963,  964,
      962, 4194, 3736, 4194, 4194,  963,  964, 4194, 4194,  847,
     4194,  848, 4194, 4194,  959,  960,  847,  959,  848, 4194,
     4194,  959,  960, 4194,  959,  962, 4194, 4194, 4194, 1680,
      963,  964,  962, 4194, 4194, 4194, 4194,  963,  964, 4194,
     4194,  847, 4194,  848,  959,  960, 1680,  959,  847, 4194,
      848, 1680, 4194,  959,  960,  962,  959, 4194, 4194, 4194,

      963,  964, 4194, 4194,  962, 4194, 4194, 3737, 4194,  963,
      964,  847, 4194,  848, 4194, 4194, 4194, 4194, 4194, 4194,
      847, 4194,  848, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1680, 3715, 3738, 3739, 3715, 3738, 3715, 3715, 3715,
     3740, 3715, 3715, 3715, 3741, 3715, 3715, 3715, 3715, 3742,
     3743, 3715, 1680, 4194, 4194, 4194, 4194, 4194, 4194, 3745,
     3721, 3715, 3722, 3715, 3715, 3715, 4194,  959,  960, 4194,
      959, 4194, 4194, 4194,  959,  960, 4194,  959,  962, 3715,
     3715, 3715, 3715,  963,  964,  962, 4194, 4194, 4194, 4194,
      963,  964, 4194, 4194,  847, 4194,  848, 4194, 4194, 4194,

     4194,  847, 4194,  848,  959,  960, 4194,  959, 4194, 4194,
     3715, 3715, 3715, 3715, 3740,  962, 4194, 4194, 4194, 4194,
      963,  964, 1680,  959,  960, 4194,  959,  959,  960, 3744,
      959,  847, 4194,  848,  962, 4194, 4194, 4194,  962,  963,
      964, 4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,
      847, 4194,  848, 4194,  847, 4194,  848,  962, 4194, 4194,
     4194, 4194,  963,  964, 4194, 4194,  959,  960, 4194,  959,
     4194, 4194, 1680,  847, 4194,  848, 4194,  962, 3746, 4194,
     3747, 4194,  963,  964, 4194,  959,  960, 4194,  959, 4194,
     4194, 4194, 1680,  847, 4194,  848,  962, 4034, 2049, 2049,

     4034,  963,  964, 4194, 4194, 4194,  959,  960, 2050,  959,
     3748, 4194,  847, 4194,  848, 4194, 4194,  962, 4194, 4194,
     4194, 1680,  963,  964, 2624,  959,  960, 4194,  959,  959,
      960, 4194,  959,  847, 4194,  848,  962, 4194, 4194, 4194,
      962,  963,  964, 4194, 2052,  963,  964, 3749,  959,  960,
     4194,  959,  847, 4194,  848, 4194,  847, 4194,  848,  962,
     1118, 1119, 1119, 1118,  963,  964, 1118, 1119, 1119, 1118,
     3750, 3065, 3066, 3066, 3065,  847, 4194,  848, 4194, 4194,
     1680, 4194,  720,  998, 4194,  842, 4194, 1121,  842, 1122,
     4194, 4194, 4194, 1121, 4194, 1122,  844, 4194, 2624, 4194,

     3068,  845,  846, 1680, 4194, 4194, 4194, 1123, 3781, 3781,
     3781, 3781,  847, 1123,  848, 4194, 4194, 4194, 2052, 4194,
     3783, 2970, 3779, 3783, 4194, 4194, 4194, 4194, 4194, 4194,
     1136,  717,  718,  718,  717, 3784, 3783, 3789, 1418, 1418,
     3789, 4194,  720,  721, 4194, 4194,  721, 4194,  720, 1561,
     4194, 4194, 4194, 4194, 4194, 3785, 3783, 4194,  723,  721,
      724, 4194, 4194, 4194, 3081, 4194, 1420, 4194, 4194, 4194,
     3798, 3799, 3799, 3798, 4194, 4194, 4194, 4194,  725,  721,
     4194, 2681,  721, 4194,  767,  721, 4194, 1118, 1119, 1119,
     1118, 4194, 3799, 3799, 3799, 3799, 3780,  723,  721, 1363,

     4194, 4194, 4194, 2681,  721, 4194, 4194,  721, 4194, 4194,
     4194, 4194, 4194, 4194, 1121, 4194, 1122,  725,  721,  723,
      721, 3804, 2680, 2680, 3804, 4194, 2680, 2680, 2680, 2680,
     4194, 4194, 2681,  721, 1123, 4194,  721, 2681,  721,  725,
      721,  721, 3868, 4194, 4194, 4194, 4194, 4194,  723,  721,
     3805, 4194, 4194,  723,  721, 3811, 2680, 2680, 3811, 4194,
      842, 4194, 4194,  842, 4194, 4194, 2681,  721,  725,  721,
      721,  844, 4194,  725,  721, 4194,  845,  846, 4194, 4194,
     4194, 4194,  723,  721, 1363, 4194, 4194,  847, 4194,  848,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1118, 1119, 1119,

     1118, 4194,  725,  721, 3812, 3813, 2119, 3814, 3813, 3812,
     3812, 3812, 3815, 3812, 3812, 3812, 3816, 3817, 3812, 3812,
     3817, 3812, 3818, 3812, 1121, 4194, 1122, 4194, 3675, 3676,
      718, 3675, 3819, 3817, 3820, 3812, 3812, 3812, 4194,  720,
      721, 4194, 4194,  721, 1123, 4194, 4194, 4194, 4194, 4194,
     4194, 3812, 3821, 3817, 3812,  723,  721, 1363, 4194, 4194,
      719, 4194, 3676, 3676,  718, 3676, 4194, 2965, 4194, 3402,
     3066, 3066, 3402,  720,  721,  725,  721,  721, 4194, 4194,
      720, 4194, 3812, 3812, 3812, 3812, 3815, 4194,  842,  723,
      721,  842, 4194, 4194, 4194, 4194, 2051, 4194, 3068,  844,

     4194, 4194, 4194, 4194,  845,  846, 4194, 4194, 4194,  725,
      721, 3677,  718,  718, 3677,  847, 2052,  848,  842, 4194,
     3884,  842,  720,  721, 4194, 4194,  721, 4194, 4194,  844,
     4194, 4194, 4194,  842,  845,  846,  842, 4194,  723,  721,
     1363, 4194, 4194, 3845,  844,  847, 4194,  848, 4194,  845,
      846, 4194,  842, 4194, 4194,  842, 4194, 4194,  725,  721,
      847, 4194,  848,  844, 3822, 4194, 4194, 4194,  845,  846,
     3823, 4194, 4194, 4194, 4194, 3824, 4194, 4194, 4194,  847,
     3825,  848, 3826, 3679, 2680, 2680, 3679, 3846, 4194, 3789,
     1418, 1418, 3789, 4194, 2681,  721, 4194, 4194,  721, 4194,

      720, 1561, 4194, 4194, 4194, 4194,  842, 4194, 4194,  842,
      723,  721, 1363, 4194, 1561, 4194,  766,  844, 2106, 4194,
     4194, 4194,  845,  846, 4194, 4194, 4194, 4194, 4194, 4194,
      725,  721, 4194,  847, 4194,  848,  767, 4194, 3680, 4194,
     4194, 4194, 3681, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 3682, 4194, 4194, 4194, 3683, 3660, 3837, 3662, 3662,
     3837, 3660, 3660, 3660, 3663, 3660, 3660, 3660, 3664, 3665,
     3660, 3660, 3665, 3660, 3666, 3660, 1561, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 3667, 3665, 3838, 3660, 3660, 3660,
     4194, 4194, 4194, 4194, 4194, 4194, 4194,  842, 4194, 4194,

      842, 4194, 4194, 3660, 3669, 3665, 3660, 3670,  844, 4194,
     4194, 4194,  842,  845,  846,  842,  842, 4194, 4194,  842,
     4194, 4194, 4194,  844,  847, 4194,  848,  844,  845,  846,
     4194, 4194,  845,  846, 3660, 3660, 3660, 3660, 3663,  847,
     4194,  848, 4194,  847,  842,  848, 4194,  842,  842, 4194,
     4194,  842, 1561, 4194, 4194,  844, 4194, 4194, 4194,  844,
      845,  846, 4194, 4194,  845,  846, 1561, 4194, 4194,  842,
     4194,  847,  842,  848, 4194,  847,  842,  848, 4194,  842,
      844, 4194, 4194, 4194, 3850,  845,  846,  844, 4194, 4194,
     4194,  842,  845,  846,  842, 4194,  847, 4194,  848, 3852,

     4194, 4194,  844,  847, 4194,  848, 4194,  845,  846, 4194,
     4194, 4194, 4194, 3851, 4194, 4194,  959,  960,  847,  959,
      848, 4194, 4194,  959,  960, 4194,  959,  962, 3853, 4194,
     4194, 4194,  963,  964,  962, 4194, 4194, 4194, 4194,  963,
      964, 3854, 4194,  847, 4194,  848,  959,  960, 4194,  959,
      847, 4194,  848, 4194, 4194, 4194, 4194,  962, 4194, 4194,
     4194, 1561,  963,  964, 4194,  959,  960, 4194,  959,  959,
      960, 3855,  959,  847, 4194,  848,  962, 4194, 4194, 4194,
      962,  963,  964, 4194, 4194,  963,  964, 1680, 4194, 4194,
      959,  960,  847,  959,  848, 4194,  847, 4194,  848, 4194,

     4194,  962, 4194, 4194, 4194, 4194,  963,  964, 4194,  959,
      960, 4194,  959,  959,  960, 3856,  959,  847, 4194,  848,
      962, 4194, 4194, 4194,  962,  963,  964, 1680,  842,  963,
      964,  842,  959,  960, 4194,  959,  847, 1680,  848,  844,
      847, 4194,  848,  962,  845,  846, 4194, 4194,  963,  964,
     4194, 4194, 4194,  959,  960,  847,  959,  848, 4194,  847,
     1680,  848, 3857, 4194,  962, 4194, 4194, 4194, 1680,  963,
      964, 4194,  959,  960, 4194,  959,  959,  960, 4194,  959,
      847, 3956,  848,  962, 4194, 4194, 4194,  962,  963,  964,
     4194, 4194,  963,  964, 4194,  959,  960, 4194,  959,  847,

     4194,  848, 4194,  847, 4194,  848,  962, 4194, 4194, 4194,
     4194,  963,  964, 4194,  959,  960, 4194,  959,  959,  960,
     4194,  959,  847, 4194,  848,  962, 1680, 4194, 4194,  962,
      963,  964, 4194, 4194,  963,  964, 4194, 4194, 4194,  959,
      960,  847,  959,  848, 3858,  847, 4194,  848, 4194, 4194,
      962, 3065, 3066, 3066, 3065,  963,  964, 4194,  959,  960,
     4194,  959,  720, 4194, 3859, 3860,  847, 4194,  848,  962,
     3789, 1418, 1418, 3789,  963,  964, 4194, 3861, 2624, 4194,
     3068,  720, 4194, 4194, 4194,  847, 4194,  848, 3781, 3781,
     3781, 3781, 4194, 4194, 4194, 4194, 4194, 3081, 2052, 1420,

     3783, 4194, 4194, 3783, 3862, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 3784, 3783,  767, 4194, 4194,
     4194, 3885, 3781, 3781, 3781, 3781, 4194, 4194, 1680,  717,
      718,  718,  717, 4194, 3783, 3785, 3783, 3783, 4194, 4194,
      720,  721, 4194, 4194,  721, 4194, 4194, 4194, 4194, 3784,
     3783, 3798, 3799, 3799, 3798, 4194,  723,  721,  724, 4194,
     4194, 4194, 2681,  721, 4194, 4194,  721, 4194, 4194, 3785,
     3783, 4194, 4194, 4194, 4194, 4194,  725,  721,  723,  721,
     1363, 3799, 3799, 3799, 3799, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 2681,  721, 4194, 4194,  721, 3886,  725,  721,

     4194, 4194, 4194, 3804, 2680, 2680, 3804, 4194,  723,  721,
     3811, 2680, 2680, 3811, 2681,  721, 4194, 4194,  721, 4194,
     4194, 2681,  721, 4194, 4194,  721, 4194, 4194,  725,  721,
      723,  721, 3805, 3907, 2680, 3908, 3907,  723,  721, 1363,
     4194, 4194, 4194, 4194, 3909, 3910, 4194, 4194, 3910, 4194,
      725,  721, 4194, 4194, 4194, 4194, 4194,  725,  721, 4194,
     3911, 3910, 3912, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     3913, 3910, 3905, 3915, 4194, 3916, 3915, 3905, 3905, 3905,
     3917, 3905, 3905, 3905, 3918, 3910, 3905, 3905, 3910, 3905,

     3919, 3905, 4194, 4194, 4194, 4194, 3946, 2680, 2680, 3946,
     3911, 3910, 3920, 3905, 3905, 3905, 4194, 2681,  721, 4194,
     4194,  721, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3905,
     3913, 3910, 3905,  723,  721, 3947, 4194, 4194,  719, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194,  725,  721, 4194, 4194, 4194, 4194, 4194,
     3905, 3905, 3905, 3905, 3917, 3905, 3905, 4194, 3905, 3905,
     3905, 3905, 3905, 3922, 3905, 3905, 3905, 3906, 3905, 3905,
     3905, 3905, 3905, 3905, 3905, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 3905, 3905, 3905, 3905, 3905, 3905, 1364,

     1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364,
     1364, 1364, 3905, 3905, 3905, 3905, 1364, 1364, 1364, 1364,
     1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364,
     1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364,
     1364, 1364, 1364, 3905, 3905, 3905, 3905, 3922, 3923, 3923,
     4194, 3923, 3923, 3923, 3905, 3923, 3923, 3923, 3923, 3923,
     3924, 3925, 3923, 3923, 3923, 3926, 3926, 3905, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 3923, 3923, 3923, 3923,
     3927, 3923, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 3923, 3923, 3923, 3923, 1365,

     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 3905, 3923, 3925, 3923,
     3923, 3905, 3928, 1370, 3928, 3928, 3905, 3905, 3905, 3929,
     3905, 3905, 3905, 3906, 3905, 3905, 3905, 3905, 3905, 3905,
     3905, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3930,
     3905, 3905, 3905, 3905, 3905, 1371, 1371, 1371, 1371, 1371,
     1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 3905, 3931,
     3905, 3905, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371,
     1371, 1371, 1371, 1371, 1371, 1371, 1371, 1372, 1371, 1371,

     1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 3905,
     3905, 3905, 3932, 3929,  842, 4194, 4194,  842,  842, 4194,
     4194,  842, 4194, 4194, 4194,  844, 4194, 4194, 4194,  844,
      845,  846, 4194,  842,  845,  846,  842,  842, 4194, 4194,
      842,  847, 4194,  848,  844,  847, 4194,  848,  844,  845,
      846, 4194, 4194,  845,  846, 4194,  842, 4194, 4194,  842,
      847, 4194,  848, 4194,  847,  842,  848,  844,  842, 3958,
     4194, 4194,  845,  846, 4194, 4194,  844, 4194, 4194, 4194,
     4194,  845,  846,  847, 3957,  848,  842, 4194, 3961,  842,
     4194, 4194,  847, 4194,  848, 4194, 4194,  844, 4194, 4194,

     4194, 4194,  845,  846, 4194, 4194, 3962,  959,  960, 4194,
      959,  959,  960,  847,  959,  848, 4194, 4194,  962, 4194,
     4194, 4194,  962,  963,  964, 3963, 4194,  963,  964, 4194,
     4194, 4194,  959,  960,  847,  959,  848, 4194,  847, 3965,
      848, 3964, 4194,  962, 4194, 4194, 4194, 4194,  963,  964,
     4194,  959,  960, 4194,  959,  959,  960, 4194,  959,  847,
     3966,  848,  962, 4194, 4194, 4194,  962,  963,  964, 4194,
     4194,  963,  964, 4194,  959,  960, 4194,  959,  847, 4194,
      848, 3967,  847, 3968,  848,  962, 4194, 4194, 4194, 4194,
      963,  964, 4194,  959,  960, 4194,  959, 4194, 4194, 4194,

     4194,  847, 4194,  848,  962, 4194, 3969, 4194, 4194,  963,
      964, 4194,  959,  960, 4194,  959, 4194, 4194, 4194, 4194,
      847, 4194,  848,  962, 3970, 4194, 4194, 4194,  963,  964,
     4194, 3402, 3066, 3066, 3402, 3065, 3066, 3066, 3065,  847,
     4194,  848,  720, 3971, 4194, 4194,  720, 4194, 4194, 4194,
     4038, 4194, 4194, 4038, 4194, 4194, 4194, 4194, 2051, 4194,
     3068,  844, 2624, 4194, 3068, 3973,  845,  846, 4194, 3972,
     4045,  960, 4194, 4045, 4194, 4194, 4194,  847, 2052, 4039,
     4194,  962, 2052, 4194, 4194, 4194,  963,  964, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194,  847, 4194, 4039,

     3992, 3991, 3905, 3993,  718, 3916, 3993, 3905, 3905, 3905,
     3994, 3905, 3905, 3905, 3995, 3910, 3905, 3905, 3910, 3905,
     3905, 3905, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     3911, 3910, 3920, 3905, 3905, 3905, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 3905,
     3913, 3910, 3905, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     3905, 3905, 3905, 3905, 3994, 3904,  718,  718, 3904, 4194,
     4194, 4194, 3907, 2680, 3908, 3907,  720,  721, 4194,  842,

      721, 4194,  842, 3909, 3910, 4194, 4194, 3910, 4194, 4194,
      844, 4194,  723,  721, 1363,  845,  846, 4194, 4194, 3911,
     3910, 3912, 4194, 4194, 4194, 4194,  847, 4194,  848, 4194,
     4194, 4194,  725,  721, 4194, 4194, 4194, 4194, 2726, 3913,
     3910, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4044, 4194, 4194, 4194, 2727, 3925, 3925, 4194, 3925, 3925,
     3925, 3905, 3925, 3925, 3925, 3925, 3925, 3924, 3925, 3925,
     3925, 3925, 3905, 3905, 3905, 1367, 1367, 1367, 1367, 1367,
     1367, 1367, 1367, 3925, 3925, 3925, 3925, 4005, 3925, 1367,
     1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367,

     1367, 1367, 3925, 3925, 3925, 3925, 1367, 1367, 1367, 1367,
     1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367,
     1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367,
     1367, 1367, 1367, 3905, 3925, 3925, 3925, 3925, 3905, 3915,
     4194, 3916, 3915, 3905, 3905, 3905, 3917, 3905, 3905, 3905,
     3918, 3910, 3905, 3905, 3910, 3905, 3919, 3905, 4194, 4194,
     4194, 4194, 3946, 2680, 2680, 3946, 3911, 3910, 3920, 3905,
     3905, 3905, 4194, 2681,  721, 4194, 4194,  721, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 3905, 3913, 3910, 3905,  723,
      721, 3947, 4194, 4194,  719, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,  725,
      721, 4194, 4194, 4194, 4194, 4194, 3905, 3905, 3905, 3905,
     3917, 3905, 3905, 4194, 3905, 3905, 3905, 3905, 3905, 3922,
     3905, 3905, 3905, 3906, 3905, 3905, 3905, 3905, 3905, 3905,
     3905, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3905,
     3905, 3905, 3905, 3905, 3905, 1364, 1364, 1364, 1364, 1364,
     1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 3905, 3905,
     3905, 3905, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364,
     1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364,
     1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 3905,

     3905, 3905, 3905, 3922, 3923, 3923, 4194, 3923, 3923, 3923,
     3905, 3923, 3923, 3923, 3923, 3923, 3924, 3925, 3923, 3923,
     3923, 3926, 3926, 3905, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 3923, 3923, 3923, 3923, 3927, 3923, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 3923, 3923, 3923, 3923, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 3905, 3923, 3925, 3923, 3923, 3905, 4008, 2044,
     4008, 4008, 3905, 3905, 3905, 4009, 3905, 3905, 3905, 3906,

     3905, 3905, 3905, 3905, 3905, 3919, 3905, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 3905, 3905, 3905, 3905, 3905,
     3905, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 3905, 3905, 3905, 3905, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 3905, 3905, 3905, 3905, 4009,
     3926, 3926, 4194, 3926, 3926, 3926, 3905, 3926, 3926, 3926,
     3926, 3926, 3906, 3905, 3926, 3926, 3926, 3926, 3926, 3905,
     1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 3926, 3926,

     3926, 3926, 4010, 3926, 1368, 1368, 1368, 1368, 1368, 1368,
     1368, 1368, 1368, 1368, 1368, 1368, 1368, 3926, 3926, 3926,
     3926, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
     1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
     1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 3905, 3926,
     3905, 3926, 3926, 3905, 4016,  763, 4016, 4016, 3905, 3905,
     3905, 4017, 3905, 3905, 3905, 3906, 3905, 3905, 3905, 3905,
     3905, 3905, 3905, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 3930, 3905, 3905, 3905, 3905, 3905,  764,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,

     3905, 3931, 3905, 3905,  764,  764,  764,  764,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
      764, 3905, 3905, 3905, 4018, 4017, 3905, 4019,  834, 4019,
     4019, 3905, 3905, 3905, 4020, 3905, 3905, 3905, 3906, 3905,
     3905, 3905, 3905, 3905, 3905, 3905, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 3905, 3905, 3905, 3905, 3905, 3905,
      835,  835,  835,  835,  835,  835,  835,  835,  835,  835,
      835,  835,  835, 3905, 3905, 3905, 3905,  835,  835,  835,
      835,  835,  835,  835,  835,  835,  835,  835,  835,  835,

      835,  835,  835,  835,  835,  835,  835,  835,  835,  835,
      835,  835,  835,  835, 3905, 3905, 3905, 3905, 4020,  842,
     4194, 4194,  842,  842, 4194, 4194,  842, 4194, 4194, 4194,
      844, 4194, 4194, 4194,  844,  845,  846, 4194,  842,  845,
      846,  842,  842, 4194, 4194,  842,  847, 4194,  848,  844,
      847, 4194,  848,  844,  845,  846, 4194,  842,  845,  846,
      842,  842, 4194, 4194,  842,  847, 4194,  848,  844,  847,
     4194,  848,  844,  845,  846, 4194, 4194,  845,  846, 4194,
     4194, 4194,  959,  960,  847,  959,  848, 4194,  847, 2778,
      848, 4194, 4040,  962, 4194, 4194, 4194, 4042,  963,  964,

     4194,  959,  960, 4194,  959, 4194, 4194, 4194, 4041,  847,
     4194,  848,  962, 4194, 4194, 4194, 4043,  963,  964, 4194,
      959,  960, 4194,  959, 4194, 4194, 4194, 3957,  847, 4194,
      848,  962, 4194, 4194, 4194, 4194,  963,  964, 4194,  959,
      960, 4194,  959, 4194, 4194, 4194, 4194,  847, 4194,  848,
      962, 4194, 2850, 4194, 4194,  963,  964, 4194,  959,  960,
     4194,  959,  959,  960, 4194,  959,  847, 4194,  848,  962,
     4046, 4194, 4194,  962,  963,  964, 4194, 4194,  963,  964,
     4194,  959,  960, 4194,  959,  847, 4194,  848, 4194,  847,
     4047,  848,  962, 4194, 4048, 4194, 4194,  963,  964, 4194,

     3402, 3066, 3066, 3402, 3065, 3066, 3066, 3065,  847, 4194,
      848,  720, 4194, 4194, 4194,  720, 4194, 4049, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 2051, 3967, 3068,
     4194, 2624, 4050, 3068, 3993,  718, 3916, 3993, 4194, 4194,
     4194, 4000,  718,  718, 4000, 4065, 3910, 2052, 4194, 3910,
     4194, 2052,  720,  721, 4194, 4194,  721, 4194, 4194, 4194,
     4194, 3911, 3910, 3912, 4194, 4063, 4194, 4194,  723,  721,
     4068, 4194, 4064, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 3913, 3910, 4194, 4194, 4194, 4194, 4194,  725,  721,
     3905, 4008, 2044, 4008, 4008, 3905, 3905, 3905, 4009, 3905,

     3905, 3905, 3906, 3905, 3905, 3905, 3905, 3905, 3919, 3905,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 3905, 3905,
     3905, 3905, 3905, 3905, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 3905, 3905, 3905,
     3905, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 3905, 3905,
     3905, 3905, 4009, 3905, 4075, 2626, 4075, 4075, 3905, 3905,
     3905, 4076, 3905, 3905, 3905, 3906, 3905, 3905, 3905, 3905,
     3905, 3905, 3905, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 3930, 3905, 3905, 3905, 3905, 3905, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     3905, 3931, 3905, 3905, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2628,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 3905, 3905, 3905, 4018, 4076, 3905, 4016,  763, 4016,
     4016, 3905, 3905, 3905, 4017, 3905, 3905, 3905, 3906, 3905,
     3905, 3905, 3905, 3905, 3905, 3905, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 3930, 3905, 3905, 3905, 3905, 3905,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,

      764,  764,  764, 3905, 3931, 3905, 3905,  764,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
      764,  764,  764,  764, 3905, 3905, 3905, 4018, 4017, 3905,
     4077, 1418, 4078, 4077, 3905, 3905, 3905, 4079, 3905, 3905,
     3905, 3918, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 1419,
     1419, 1419, 1419, 1419, 1419, 1419, 1419, 3930, 3905, 4080,
     3905, 3905, 3905, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
     1419, 1419, 1419, 1419, 1419, 1419, 3905, 3931, 3905, 3905,
     1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,

     1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
     1419, 1419, 1419, 1419, 1419, 1419, 1419, 3905, 3905, 3905,
     3905, 4079, 3905, 4081, 1421, 4081, 4081, 3905, 3905, 3905,
     4082, 3905, 3905, 3905, 3906, 3905, 3905, 3905, 3905, 3905,
     3905, 3905, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     3905, 3905, 3905, 3905, 3905, 3905, 1422, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 3905,
     3905, 3905, 3905, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,

     3905, 3905, 3905, 3905, 4082, 3905, 4019,  834, 4019, 4019,
     3905, 3905, 3905, 4020, 3905, 3905, 3905, 3906, 3905, 3905,
     3905, 3905, 3905, 3905, 3905, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 3905, 3905, 3905, 3905, 3905, 3905,  835,
      835,  835,  835,  835,  835,  835,  835,  835,  835,  835,
      835,  835, 3905, 3905, 3905, 3905,  835,  835,  835,  835,
      835,  835,  835,  835,  835,  835,  835,  835,  835,  835,
      835,  835,  835,  835,  835,  835,  835,  835,  835,  835,
      835,  835,  835, 3905, 3905, 3905, 3905, 4020, 3905, 4083,
     1527, 4084, 4083, 3905, 3905, 3905, 4085, 3905, 3905, 3905,

     3918, 3910, 3905, 3905, 3910, 3905, 3905, 3905, 1528, 1528,
     1528, 1528, 1528, 1528, 1528, 1528, 3910, 3910, 3912, 3905,
     3905, 3905, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
     1528, 1528, 1528, 1528, 1528, 3905, 3905, 3910, 3905, 1528,
     1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
     1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
     1528, 1528, 1528, 1528, 1528, 1528, 3905, 3905, 3905, 3905,
     4085,  842, 4194, 4194,  842,  842, 4194, 4194,  842, 4194,
     4194, 4194,  844, 4194, 4194, 4194,  844,  845,  846, 4194,
      842,  845,  846,  842,  842, 4194, 4194,  842,  847, 4194,

      848,  844,  847, 4194,  848,  844,  845,  846, 4194, 4194,
      845,  846, 4194,  842, 4194, 4194,  842,  847, 4194,  848,
     4194,  847, 4194,  848,  844, 4098, 4194, 4194, 4194,  845,
      846, 4194, 4194, 4045,  960, 4194, 4045, 4194, 4194, 4194,
      847, 3957,  848, 4194,  962, 4194, 4194, 4194, 1561,  963,
      964, 4194,  959,  960, 4194,  959,  959,  960, 4099,  959,
      847, 4194, 4039,  962, 4194, 4194, 4194,  962,  963,  964,
     4194, 4194,  963,  964, 4194, 1561, 4194, 4194, 4194,  847,
     4194,  848, 4194,  847, 4194,  848,  959,  960, 4194,  959,
     4194, 4194, 4194, 4194, 4194, 4194, 4194,  962, 4194, 4194,

     4194, 4194,  963,  964, 4194, 4194, 4100,  959,  960, 4194,
      959, 4194, 4194,  847, 4194,  848,  959,  960,  962,  959,
     4194, 4194, 3967,  963,  964, 4194, 4194,  962, 3402, 3066,
     3066, 3402,  963,  964,  847,  842,  848, 4194,  842,  720,
     4194, 4194, 4194,  847, 4194,  848,  844, 4077, 1418, 4078,
     4077,  845,  846, 4194, 4101, 2051, 4194, 3068, 3918, 4194,
     4194, 1680,  847, 4194,  848, 4194,  959,  960, 4194,  959,
     4194, 4194, 4194, 4194, 3930, 2052, 4120,  962, 1680, 4194,
     4194, 4194,  963,  964, 4194, 4194, 4194, 4194, 4136, 4194,
     4194, 4194, 4194,  847, 3931,  848, 4110, 3905, 4111, 3066,

     4112, 4111, 3905, 3905, 3905, 4113, 3905, 3905, 3905, 3995,
     3905, 3905, 3905, 3905, 3905, 3905, 3905, 4194, 4194, 4137,
     4194, 4083, 1527, 4084, 4083, 4073, 3905, 4114, 3905, 3905,
     3905, 4194, 4194, 3910, 4194, 4194, 3910, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 3905, 4015, 3905, 3905, 3910, 3910,
     3912, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3905, 3910,
     4194, 4194, 4194, 4194, 4194, 3905, 3905, 3905, 3905, 4113,
     3905, 4075, 2626, 4075, 4075, 3905, 3905, 3905, 4118, 3905,
     3905, 3905, 3906, 3905, 3905, 3905, 3905, 3905, 3905, 3905,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3930, 3905,
     3905, 3905, 3905, 3905, 3063, 3063, 3063, 3063, 3063, 3063,
     3063, 3063, 3063, 3063, 3063, 3063, 3063, 3905, 3931, 3905,
     3905, 3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063,
     3063, 3063, 3063, 3063, 3063, 3063, 3064, 3063, 3063, 3063,
     3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063, 3905, 3905,
     3905, 4018, 4118, 4121, 4121, 4194, 4121, 4121, 4121, 3905,
     4121, 4121, 4121, 4121, 4121, 3924, 4122, 4121, 4121, 4121,
     4123, 4123, 3905, 2107, 2107, 2107, 2107, 2107, 2107, 2107,
     2107, 4121, 4121, 4121, 4121, 4124, 4121, 2107, 2107, 2107,

     2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107,
     4121, 4121, 4121, 4121, 2107, 2107, 2107, 2107, 2107, 2107,
     2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107,
     2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107,
     2107, 3905, 4121, 4122, 4121, 4121, 3905, 4125, 2111, 4126,
     4125, 3905, 3905, 3905, 4127, 3905, 3905, 3905, 3918, 3905,
     3905, 3905, 3905, 3905, 3905, 3905, 2112, 2112, 2112, 2112,
     2112, 2112, 2112, 2112, 3905, 3905, 4120, 3905, 3905, 3905,
     2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112,
     2112, 2112, 2112, 3905, 3905, 3905, 3905, 2112, 2112, 2112,

     2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112,
     2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112,
     2112, 2112, 2112, 2112, 3905, 3905, 3905, 3905, 4127,  842,
     4194, 4194,  842,  959,  960, 4194,  959, 4194, 4194, 4194,
      844, 4194, 4194, 4194,  962,  845,  846, 4194, 4194,  963,
      964, 4194, 4194, 4194, 4194, 4194,  847, 4194,  848, 4194,
      847, 4194,  848, 4194, 4194, 4194, 4194, 4194, 4194,  842,
     4194, 4194,  842,  842, 4194, 4194,  842, 4194, 4194, 4194,
      844, 4194, 4194, 4194,  844,  845,  846, 4194, 4194,  845,
      846, 4194, 4194, 4194, 4194, 4194,  847, 4194,  848, 1561,

      847, 4194,  848, 1680, 3905, 4146, 3066, 4112, 4146, 3905,
     3905, 3905, 4147, 3905, 3905, 3905, 3995, 3905, 3905, 3905,
     3905, 3905, 3905, 3905, 4164, 4194, 4194, 4194,  959,  960,
     4194,  959, 4014, 3905, 4114, 3905, 3905, 3905, 4179,  962,
     4194, 4194, 4194, 4194,  963,  964, 4194, 4194, 4194, 4194,
     4194, 3905, 4015, 3905, 3905,  847, 4194,  848, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4165,
     4194, 4194, 3905, 3905, 3905, 3905, 4147, 4148, 4148, 4194,
     4148, 4148, 4148, 3905, 4148, 4148, 4148, 4148, 4148, 3924,

     4122, 4148, 4148, 4148, 3926, 3926, 3905, 3405, 3405, 3405,
     3405, 3405, 3405, 3405, 3405, 4148, 4148, 4148, 4148, 4149,
     4148, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405,
     3405, 3405, 3405, 3405, 4148, 4148, 4148, 4148, 3405, 3405,
     3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405,
     3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405,
     3405, 3405, 3405, 3405, 3405, 3905, 4148, 4122, 4148, 4148,
     3905, 3905, 4194, 3905, 3905, 3905, 3905, 3905, 4152, 3905,
     3905, 3905, 3906, 3905, 3905, 3905, 3905, 3905, 3905, 3905,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3905, 3905,

     3905, 3905, 3905, 3905, 3335, 3335, 3335, 3335, 3335, 3335,
     3335, 3335, 3335, 3335, 3335, 3335, 3335, 3905, 3905, 3905,
     3905, 3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335,
     3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335,
     3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335, 3905, 3905,
     3905, 3905, 4152, 4122, 4122, 4194, 4122, 4122, 4122, 3905,
     4122, 4122, 4122, 4122, 4122, 3924, 4122, 4122, 4122, 4122,
     3905, 3905, 3905, 1366, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 4122, 4122, 4122, 4122, 4154, 4122, 1366, 1366, 1366,
     1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366,

     4122, 4122, 4122, 4122, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 3905, 4122, 4122, 4122, 4122, 4123, 4123, 4194, 4123,
     4123, 4123, 3905, 4123, 4123, 4123, 4123, 4123, 3906, 3905,
     4123, 4123, 4123, 4123, 4123, 3905, 2108, 2108, 2108, 2108,
     2108, 2108, 2108, 2108, 4123, 4123, 4123, 4123, 4155, 4123,
     2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
     2108, 2108, 2108, 4123, 4123, 4123, 4123, 2108, 2108, 2108,
     2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,

     2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
     2108, 2108, 2108, 2108, 3905, 4123, 3905, 4123, 4123, 3905,
     4171, 4194, 3905, 4171, 3905, 3905, 3905, 4172, 3905, 3905,
     3905, 3906, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3589,
     3589, 3589, 3589, 3589, 3589, 3589, 3589, 4071, 3905, 3905,
     3905, 3905, 3905, 3589, 3589, 3589, 3589, 3589, 3589, 3589,
     3589, 3589, 3589, 3589, 3589, 3589, 3905, 3905, 3905, 3905,
     3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589,
     3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589,
     3589, 3589, 3589, 3589, 3589, 3589, 3589, 3905, 3905, 3905,

     3905, 4172,  959,  960, 4194,  959,  842, 4194, 4194,  842,
     4194, 4194, 4194,  962, 4194, 4194, 4194,  844,  963,  964,
     4194, 4194,  845,  846, 4194,  959,  960, 4194,  959,  847,
     4194,  848, 4194,  847, 4194,  848,  962, 4194, 4194, 4194,
     4194,  963,  964, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194,  847, 4194,  848, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4180, 4194, 4194, 4194, 4194, 3957, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 3967,   76,   76,   76,   76,

       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,  105,  105,  105,  105,  105,

      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  116,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  139,  139,  139,  139,  139,  139,

      139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
      139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
      139,  139,  139,  139,  139,  139,  139,  150,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  351,  351,  351,  351,  351,  351,  351,

      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  399,  399,  399,  399,
      399,  399,  399,  399,  399,  399,  399,  399,  399,  399,
      399,  399,  399,  399,  399,  399,  399,  399,  399,  399,
      399,  399,  399,  399,  399,  399,  399,  399,  399,  553,
      553,  553,  553,  553,  553,  553,  553,  553,  553,  553,
      553,  553,  553,  553,  553,  553,  553,  553,  553,  553,
      553,  553,  553,  553,  553,  553,  553,  553,  553,  553,
      553,  553,  603,  603,  603,  603,  603,  603,  603,  603,

      603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
      603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
      603,  603,  603,  603,  603,  614,  614,  614,  614,  614,
      614,  614,  614,  614,  614,  614,  614,  614,  614,  614,
      614,  614,  614,  614,  614,  614,  614,  614,  614,  614,
      614,  614,  614,  614,  614,  614,  614,  614,  644,  644,
     4194, 4194,  644, 4194,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644, 4194,  644,  644,  644,  644,  644,
      644,  648,  648, 4194,  648,  648,  648,  648,  648,  648,

      648,  648,  648,  648,  648,  648,  648,  648,  648,  648,
      648,  648,  648,  648,  648,  648,  648,  648,  648,  648,
      648,  648,  648,  648,  654,  654, 4194, 4194,  654,  654,
      654, 4194,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,  654,  654,
     4194,  654,  654,  654,  654,  654,  654,  663,  663, 4194,
      663,  663, 4194,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      672,  672, 4194,  672,  672, 4194,  672,  672,  672,  672,

      672,  672,  672,  672, 4194,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672, 4194,  672,  672,  672,
      672,  672,  672,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  682,  682, 4194,  682,
      682,  682,  682,  682,  682,  682, 4194,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  682,  683,
      683, 4194,  683,  683,  683,  683,  683,  683,  683,  683,

      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  695,  695, 4194, 4194,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  707,  707, 4194,  707,  707,
      707,  707,  707,  707,  707, 4194,  707,  707,  707,  707,
      707,  707,  707,  707,  707,  707,  707,  707,  707,  707,
      707,  707,  707,  707,  707,  707,  707,  707,  719,  719,
      719,  719, 4194,  719, 4194,  719,  719, 4194,  719, 4194,

      719, 4194,  719,  719,  719,  719, 4194,  719,  719,  719,
      719,  719, 4194,  719,  719,  719, 4194, 4194, 4194,  719,
      727,  727, 4194,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  764,  764,  764,  764, 4194,  764, 4194,
      764,  764, 4194, 4194, 4194, 4194, 4194, 4194,  764, 4194,
     4194, 4194,  764,  764,  764,  764,  764, 4194,  764, 4194,
      764, 4194, 4194,  764,  764,  835,  835,  835,  835, 4194,
      835, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194,  835,  835,  835,  835,  835, 4194,
     4194, 4194,  835, 4194, 4194, 4194,  835,  843, 4194, 4194,
      843, 4194,  843, 4194,  843, 4194, 4194, 4194,  843,  843,
     4194,  843,  843, 4194,  843, 4194,  843,  843,  843,  843,
      843, 4194, 4194, 4194,  843, 4194, 4194, 4194,  843,  943,
      943,  943,  943, 4194,  943, 4194,  943, 4194, 4194, 4194,
     4194, 4194, 4194,  943,  943, 4194,  943, 4194,  943,  943,
      943,  943,  943, 4194,  943, 4194,  943, 4194, 4194, 4194,
      943,  951,  951,  951,  951, 4194,  951, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194,  951, 4194, 4194, 4194,

      951,  951,  951,  951,  951, 4194,  951, 4194,  951, 4194,
     4194,  951,  951,  957,  957,  957,  957, 4194,  957, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194,  957,  957,  957,  957,  957, 4194, 4194, 4194,
      957, 4194, 4194, 4194,  957,  961,  961, 4194,  961, 4194,
      961, 4194,  961, 4194, 4194, 4194,  961,  961, 4194,  961,
      961, 4194,  961, 4194,  961,  961,  961,  961,  961, 4194,
     4194, 4194,  961, 4194, 4194, 4194,  961, 1035, 4194, 4194,
     1035, 4194, 1035, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1035, 4194, 4194, 4194, 4194, 1035, 1035, 1035, 1035,

     1035, 4194, 4194, 4194, 1035, 1035, 4194, 4194, 1035, 1044,
     4194, 4194, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     4194, 1044, 4194, 1044, 1044, 4194, 4194, 4194, 1044, 1044,
     1044, 1044, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     1044, 1057, 4194, 4194, 4194, 4194, 4194, 4194, 1057, 4194,
     1057, 4194, 4194, 4194, 4194, 1057, 1057, 1057, 1057, 1057,
     4194, 4194, 4194, 1057, 4194, 4194, 4194, 1057, 1061, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1061, 4194, 4194,
     4194, 4194, 1061, 1061, 1061, 1061, 1061, 4194, 4194, 4194,
     1061, 4194, 4194, 4194, 1061, 1069, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 1069, 1069, 4194, 4194, 4194, 1069,
     1069, 1069, 1069, 1069, 4194, 1069, 4194, 1069, 4194, 4194,
     4194, 1069, 1074, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1074, 1074, 1074, 1074,
     1074, 4194, 4194, 4194, 1074, 4194, 4194, 4194, 1074, 1082,
     1082, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1082, 1082, 1082, 1082, 1082, 4194,
     4194, 4194, 1082, 4194, 4194, 4194, 1082, 1084, 1084, 4194,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,

     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1120, 1120, 1120, 1120, 4194, 1120, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1120, 1120, 4194, 1120, 4194, 1120,
     1120, 1120, 1120, 1120, 4194, 1120, 4194, 1120, 4194, 4194,
     4194, 1120, 1148, 1148, 1148, 1148, 4194, 1148, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1148, 1148, 1148, 1148, 1148, 4194, 4194, 4194, 1148,
     4194, 4194, 4194, 1148, 1158, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1158, 4194, 4194, 4194, 4194, 1158, 1158,
     1158, 1158, 1158, 4194, 4194, 4194, 1158, 4194, 4194, 4194,

     1158, 1167, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1167, 4194, 4194, 4194, 4194, 1167, 1167, 1167, 1167, 1167,
     4194, 4194, 4194, 1167, 4194, 4194, 4194, 1167, 1190, 4194,
     4194, 1190, 4194, 1190, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1190, 1190, 4194, 4194, 4194, 1190, 1190, 1190,
     1190, 1190, 4194, 4194, 4194, 1190, 4194, 4194, 4194, 1190,
     1193, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1193,
     4194, 4194, 4194, 4194, 1193, 1193, 1193, 1193, 1193, 4194,
     4194, 4194, 1193, 4194, 4194, 4194, 1193, 1212, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1212, 4194, 4194, 4194,

     4194, 1212, 1212, 1212, 1212, 1212, 4194, 4194, 4194, 1212,
     4194, 4194, 4194, 1212, 1213, 1213, 4194, 1213, 4194, 1213,
     1213, 4194, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213,
     1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213,
     1213, 1213, 1213, 1213, 1213, 1213, 1213, 1222, 1222, 1222,
     1222, 4194, 1222, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1222, 1222, 4194, 4194, 4194, 1222, 1222, 1222, 1222,
     1222, 4194, 4194, 1222, 1222, 4194, 4194, 4194, 1222, 1226,
     1226, 4194, 1226, 1226, 4194, 4194, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226, 4194, 1226, 1226, 1226, 1226,
     1226, 1226, 1227, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1227, 4194, 4194, 4194, 4194, 1227, 1227, 1227, 1227,
     1227, 4194, 4194, 4194, 1227, 4194, 4194, 4194, 1227, 1231,
     1231, 4194, 1231, 1231, 4194, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 4194, 1231, 1231, 1231, 1231,
     1231, 1231, 1232, 1232, 4194, 1232, 1232, 1232, 1232, 1232,
     1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
     1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,

     1232, 1232, 1232, 1232, 1232, 1238, 1238, 4194, 1238, 1238,
     1238, 1238, 1238, 1238, 1238, 4194, 1238, 1238, 1238, 1238,
     1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238,
     1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1249, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1249, 4194, 4194,
     4194, 4194, 1249, 1249, 1249, 1249, 1249, 4194, 4194, 4194,
     1249, 4194, 4194, 4194, 1249, 1275, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1275, 1275, 4194, 4194, 4194, 1275,
     1275, 1275, 1275, 1275, 4194, 4194, 4194, 1275, 4194, 4194,
     4194, 1275, 1278, 4194, 4194, 4194, 4194, 4194, 4194, 1278,

     4194, 1278, 1278, 4194, 4194, 4194, 1278, 1278, 1278, 1278,
     1278, 4194, 4194, 4194, 1278, 4194, 4194, 4194, 1278, 1282,
     1282, 4194, 1282, 1282, 1282, 1282, 1282, 1282, 4194, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1283, 4194, 1283, 1283, 4194, 1283, 1283, 1283,
     4194, 4194, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 4194, 1283,
     1283, 1283, 1283, 1283, 1283,  644,  644, 4194, 4194,  644,
     4194,  644,  644,  644,  644,  644,  644,  644,  644,  644,

      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644, 4194,  644,  644,  644,  644,  644,  644,  654,  654,
     4194, 4194,  654,  654,  654, 4194,  654,  654,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654, 4194,  654,  654,  654,  654,  654,
      654,  663,  663, 4194,  663,  663, 4194,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  672,  672, 4194,  672,  672, 4194,
      672,  672,  672,  672,  672,  672,  672,  672, 4194,  672,

      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
     4194,  672,  672,  672,  672,  672,  672, 1337, 1337, 1337,
     1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337,
     1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337,
     1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337,
      682,  682, 4194,  682,  682,  682,  682,  682,  682,  682,
     4194,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  683,  683, 4194,  683,  683,  683,  683,
      683,  683,  683, 4194,  683,  683,  683,  683,  683,  683,

      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  695,  695, 4194, 4194,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  707,
      707, 4194,  707,  707,  707,  707,  707,  707,  707, 4194,
      707,  707,  707,  707,  707,  707,  707,  707,  707,  707,
      707,  707,  707,  707,  707,  707,  707,  707,  707,  707,
      707,  707,  719,  719,  719,  719, 4194,  719, 4194,  719,
      719, 4194,  719, 4194,  719, 4194,  719,  719,  719,  719,

     4194,  719,  719,  719,  719,  719, 4194,  719,  719,  719,
     4194, 4194, 4194,  719, 1364, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1364, 1364,
     1364, 1364, 1364, 4194, 4194, 4194, 1364, 4194, 4194, 4194,
     1364, 1365, 1365, 4194, 1365, 1365, 4194, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 4194, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     4194, 1365, 1365, 1365, 1371, 1371, 1371, 1371, 4194, 1371,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1371,
     4194, 4194, 4194, 1371, 1371, 1371, 1371, 1371, 4194, 1371,

     4194, 1371, 4194, 4194, 1371, 1371,  727,  727, 4194,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727, 1379,
     4194, 4194, 1379, 4194, 1379, 4194, 4194, 4194, 1379, 4194,
     4194, 4194, 4194, 4194, 1379, 4194, 4194, 4194, 1379, 1379,
     1379, 1379, 1379, 4194, 4194, 4194, 1379, 4194, 4194, 1379,
     1379, 1391, 4194, 4194, 4194, 4194, 4194, 1391, 4194, 1391,
     4194, 4194, 4194, 4194, 1391, 1391, 1391, 1391, 1391, 1397,
     1397, 1397, 1397, 4194, 1397, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 1397, 4194, 4194, 4194, 1397, 1397,
     1397, 1397, 1397, 4194, 1397, 4194, 1397, 4194, 4194, 1397,
     1397, 1414, 4194, 1414, 1414, 4194, 1414, 1414, 1414, 1414,
     4194, 1414, 1414, 1414, 1414, 1414, 1414, 1414, 1414, 1414,
     1414, 1414, 1414, 1414, 1414, 1414, 1414, 4194, 1414, 1414,
     1414, 1414, 1414, 1414,  764,  764,  764,  764, 4194,  764,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,  764,
     4194, 4194, 4194,  764,  764,  764,  764,  764, 4194,  764,
     4194,  764, 4194, 4194,  764,  764, 1419, 1419, 1419, 1419,
     4194, 1419, 4194, 1419, 4194, 4194, 4194, 4194, 4194, 4194,

     1419, 1419, 4194, 1419, 4194, 1419, 1419, 1419, 1419, 1419,
     4194, 1419, 4194, 1419, 4194, 4194, 4194, 1419, 1422, 1422,
     1422, 1422, 4194, 1422, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1422, 1422, 1422,
     1422, 1422, 4194, 4194, 4194, 1422, 4194, 4194, 4194, 1422,
      835,  835,  835,  835, 4194,  835, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,  835,
      835,  835,  835,  835, 4194, 4194, 4194,  835, 4194, 4194,
     4194,  835, 1528, 1528, 1528, 1528, 4194, 1528, 4194, 1528,
     1528, 4194, 1528, 4194, 4194, 4194, 1528, 1528, 1528, 1528,

     4194, 1528, 1528, 1528, 1528, 1528, 4194, 4194, 1528, 1528,
     4194, 4194, 4194, 1528,  843, 4194, 4194,  843, 4194,  843,
     4194,  843, 4194, 4194, 4194,  843,  843, 4194,  843,  843,
     4194,  843, 4194,  843,  843,  843,  843,  843, 4194, 4194,
     4194,  843, 4194, 4194, 4194,  843, 1532, 1532, 4194, 1532,
     1532, 1532, 1532, 1532, 4194, 4194, 1532, 1532, 1532, 1532,
     1532, 1532, 1532, 1532, 4194, 1532, 1532, 1532, 1532, 1532,
     1532, 4194, 1532, 4194, 1532, 4194, 4194, 1532, 1532, 1536,
     4194, 4194, 1536, 4194, 1536, 4194, 4194, 4194, 1536, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1536, 1536,

     1536, 1536, 1536, 4194, 4194, 4194, 1536, 4194, 4194, 4194,
     1536, 1539, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1539, 1539, 1539, 1539, 1539,
     4194, 4194, 4194, 1539, 4194, 4194, 4194, 1539,  943,  943,
      943,  943, 4194,  943, 4194,  943, 4194, 4194, 4194, 4194,
     4194, 4194,  943,  943, 4194,  943, 4194,  943,  943,  943,
      943,  943, 4194,  943, 4194,  943, 4194, 4194, 4194,  943,
     1660, 1660, 4194, 1660, 1660, 4194, 1660, 1660, 4194, 4194,
     1660, 1660, 1660, 1660, 4194, 1660, 1660, 1660, 1660, 1660,
     1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660, 4194,

     4194, 1660, 1660, 1663, 1663, 1663, 1663, 4194, 1663, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1663, 4194,
     4194, 4194, 1663, 1663, 1663, 1663, 1663, 4194, 1663, 4194,
     1663, 4194, 4194, 1663, 1663,  951,  951,  951,  951, 4194,
      951, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
      951, 4194, 4194, 4194,  951,  951,  951,  951,  951, 4194,
      951, 4194,  951, 4194, 4194,  951,  951, 1667, 1667, 1667,
     1667, 4194, 1667, 4194, 1667, 4194, 4194, 4194, 4194, 4194,
     4194, 1667, 1667, 4194, 1667, 4194, 1667, 1667, 1667, 1667,
     1667, 4194, 1667, 4194, 1667, 4194, 4194, 4194, 1667, 1669,

     1669, 1669, 1669, 4194, 1669, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1669, 1669,
     1669, 1669, 1669, 4194, 4194, 4194, 1669, 4194, 4194, 4194,
     1669,  957,  957,  957,  957, 4194,  957, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
      957,  957,  957,  957,  957, 4194, 4194, 4194,  957, 4194,
     4194, 4194,  957, 1672, 1672, 1672, 1672, 4194, 1672, 4194,
     1672, 4194, 4194, 4194, 4194, 4194, 4194, 1672, 4194, 4194,
     4194, 4194, 1672, 1672, 1672, 1672, 1672, 4194, 4194, 4194,
     1672, 4194, 4194, 4194, 1672,  961,  961, 4194,  961, 4194,

      961, 4194,  961, 4194, 4194, 4194,  961,  961, 4194,  961,
      961, 4194,  961, 4194,  961,  961,  961,  961,  961, 4194,
     4194, 4194,  961, 4194, 4194, 4194,  961, 1035, 4194, 4194,
     1035, 4194, 1035, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1035, 4194, 4194, 4194, 4194, 1035, 1035, 1035, 1035,
     1035, 4194, 4194, 4194, 1035, 1035, 4194, 4194, 1035, 1044,
     4194, 4194, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     4194, 1044, 4194, 1044, 1044, 4194, 4194, 4194, 1044, 1044,
     1044, 1044, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     1044, 1771, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 1771, 1771, 1771, 1771, 1771,
     4194, 4194, 4194, 1771, 4194, 4194, 4194, 1771, 1772, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1772, 1772, 1772, 1772, 1772, 4194, 4194, 4194,
     1772, 4194, 4194, 4194, 1772, 1774, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1774,
     1774, 1774, 1774, 1774, 4194, 4194, 4194, 1774, 4194, 4194,
     4194, 1774, 1057, 4194, 4194, 4194, 4194, 4194, 4194, 1057,
     4194, 1057, 4194, 4194, 4194, 4194, 1057, 1057, 1057, 1057,
     1057, 4194, 4194, 4194, 1057, 4194, 4194, 4194, 1057, 1776,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1776, 1776, 1776, 1776, 1776, 4194, 4194,
     4194, 1776, 4194, 4194, 4194, 1776, 1061, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1061, 4194, 4194, 4194, 4194,
     1061, 1061, 1061, 1061, 1061, 4194, 4194, 4194, 1061, 4194,
     4194, 4194, 1061, 1069, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1069, 1069, 4194, 4194, 4194, 1069, 1069, 1069,
     1069, 1069, 4194, 1069, 4194, 1069, 4194, 4194, 4194, 1069,
     1074, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1074, 1074, 1074, 1074, 1074, 4194,

     4194, 4194, 1074, 4194, 4194, 4194, 1074, 1082, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1082, 1082, 1082, 1082, 1082, 4194, 4194, 4194, 1082,
     4194, 4194, 4194, 1082, 1788, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1788, 4194, 4194, 4194, 4194, 1788, 1788,
     1788, 1788, 1788, 4194, 4194, 4194, 1788, 4194, 4194, 4194,
     1788, 1084, 1084, 4194, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1120, 1120, 1120, 1120, 4194, 1120,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1120, 1120,
     4194, 1120, 4194, 1120, 1120, 1120, 1120, 1120, 4194, 1120,
     4194, 1120, 4194, 4194, 4194, 1120, 1826, 1826, 4194, 1826,
     1826, 4194, 1826, 1826, 4194, 1826, 1826, 1826, 4194, 4194,
     4194, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826,
     1826, 1826, 1826, 1826, 1826, 4194, 1826, 1826, 1826, 1829,
     1829, 1829, 1829, 4194, 1829, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1829, 1829,
     1829, 1829, 1829, 4194, 4194, 4194, 1829, 4194, 4194, 1829,
     1829, 1148, 1148, 1148, 1148, 4194, 1148, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1148, 1148, 1148, 1148, 1148, 4194, 4194, 4194, 1148, 4194,
     4194, 4194, 1148, 1859, 4194, 4194, 1859, 4194, 1859, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1859, 4194, 4194,
     1859, 4194, 1859, 1859, 1859, 1859, 1859, 4194, 4194, 4194,
     1859, 4194, 4194, 4194, 1859, 1158, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1158, 4194, 4194, 4194, 4194, 1158,
     1158, 1158, 1158, 1158, 4194, 4194, 4194, 1158, 4194, 4194,
     4194, 1158, 1167, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1167, 4194, 4194, 4194, 4194, 1167, 1167, 1167, 1167,

     1167, 4194, 4194, 4194, 1167, 4194, 4194, 4194, 1167, 1190,
     4194, 4194, 1190, 4194, 1190, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1190, 1190, 4194, 4194, 4194, 1190, 1190,
     1190, 1190, 1190, 4194, 4194, 4194, 1190, 4194, 4194, 4194,
     1190, 1193, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1193, 4194, 4194, 4194, 4194, 1193, 1193, 1193, 1193, 1193,
     4194, 4194, 4194, 1193, 4194, 4194, 4194, 1193, 1212, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1212, 4194, 4194,
     4194, 4194, 1212, 1212, 1212, 1212, 1212, 4194, 4194, 4194,
     1212, 4194, 4194, 4194, 1212, 1903, 1903, 4194, 1903, 4194,

     1903, 1903, 1903, 1903, 1903, 1903, 1903, 1903, 1903, 1903,
     1903, 1903, 1903, 1903, 1903, 1903, 1903, 1903, 1903, 1903,
     1903, 4194, 1903, 1903, 1903, 1903, 1903, 1903, 1905, 1905,
     4194, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
     1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
     1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
     1905, 1907, 1907, 4194, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1222, 1222, 1222, 1222, 4194, 1222,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1222, 1222,
     4194, 4194, 4194, 1222, 1222, 1222, 1222, 1222, 4194, 4194,
     1222, 1222, 4194, 4194, 4194, 1222, 1226, 1226, 4194, 1226,
     1226, 4194, 4194, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 4194, 1226, 1226, 1226, 1226, 1226, 1226, 1227,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1227, 4194,
     4194, 4194, 4194, 1227, 1227, 1227, 1227, 1227, 4194, 4194,
     4194, 1227, 4194, 4194, 4194, 1227, 1231, 1231, 4194, 1231,
     1231, 4194, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,

     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 4194, 1231, 1231, 1231, 1231, 1231, 1231, 1238,
     1238, 4194, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 4194,
     1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238,
     1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238,
     1238, 1238, 1249, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1249, 4194, 4194, 4194, 4194, 1249, 1249, 1249, 1249,
     1249, 4194, 4194, 4194, 1249, 4194, 4194, 4194, 1249, 1275,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1275, 1275,
     4194, 4194, 4194, 1275, 1275, 1275, 1275, 1275, 4194, 4194,

     4194, 1275, 4194, 4194, 4194, 1275, 1278, 4194, 4194, 4194,
     4194, 4194, 4194, 1278, 4194, 1278, 1278, 4194, 4194, 4194,
     1278, 1278, 1278, 1278, 1278, 4194, 4194, 4194, 1278, 4194,
     4194, 4194, 1278, 1949, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1949, 1949, 1949,
     1949, 1949, 4194, 4194, 4194, 1949, 4194, 4194, 4194, 1949,
     1282, 1282, 4194, 1282, 1282, 1282, 1282, 1282, 1282, 4194,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1950, 4194, 1950, 1950, 4194, 1950, 1950,

     1950, 4194, 4194, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 4194,
     1950, 1950, 1950, 1950, 1950, 1950, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     4194, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1969,
     1969, 4194, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,

     1973, 1973, 1973, 1973, 1973, 1973, 4194, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1976, 1976, 4194, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1981, 1981, 4194, 1981, 1981, 1981, 1981, 1981, 1981,

     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981,  644,  644, 4194, 4194,  644, 4194,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
     4194,  644,  644,  644,  644,  644,  644, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1988, 1988, 4194, 1988, 1988, 1988, 1988, 1988, 1988, 1988,

     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1993, 1993, 4194, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,  654,
      654, 4194, 4194,  654,  654,  654, 4194,  654,  654,  654,

      654,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654,  654, 4194,  654,  654,  654,  654,
      654,  654, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 2000, 2000, 4194, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,

     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2005, 2005, 4194, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005,  663,  663, 4194,  663,  663, 4194,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,

     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2012, 2012, 4194, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2016, 2016, 4194, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016,  683,  683, 4194,  683,
      683,  683,  683,  683,  683,  683, 4194,  683,  683,  683,

      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  683,  683,  683, 2018,
     2018, 4194, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2024, 2024, 4194, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,

     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,  695,  695,
     4194, 4194,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2033, 2033, 4194, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,

     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2039, 2039, 4194,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
      707,  707, 4194,  707,  707,  707,  707,  707,  707,  707,
     4194,  707,  707,  707,  707,  707,  707,  707,  707,  707,
      707,  707,  707,  707,  707,  707,  707,  707,  707,  707,
      707,  707,  707, 2041, 2041, 4194, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,

     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 1367, 1367, 4194, 1367,
     1367, 4194, 1367, 1367, 1367, 1367, 1367, 1367, 4194, 4194,
     4194, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367,
     1367, 1367, 1367, 1367, 1367, 4194, 1367, 1367, 1367, 2045,
     2045, 2045, 2045, 4194, 2045, 4194, 4194, 4194, 4194, 4194,
     4194, 2045, 4194, 2045, 4194, 4194, 4194, 4194, 2045, 2045,
     2045, 2045, 2045, 4194, 4194, 4194, 2045, 4194, 4194, 4194,
     2045, 1365, 1365, 4194, 1365, 1365, 4194, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 4194, 1365, 1365, 1365, 1365,

     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     4194, 1365, 1365, 1365, 1366, 1366, 4194, 1366, 1366, 4194,
     1366, 1366, 1366, 1366, 1366, 1366, 4194, 4194, 4194, 1366,
     1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 1366, 1366, 4194, 1366, 1366, 1366, 1368, 1368, 4194,
     1368, 1368, 4194, 1368, 1368, 4194, 4194, 1368, 1368, 1368,
     1368, 4194, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
     1368, 1368, 1368, 1368, 1368, 1368, 4194, 4194, 1368, 1368,
     1371, 1371, 1371, 1371, 4194, 1371, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1371, 4194, 4194, 4194, 1371,

     1371, 1371, 1371, 1371, 4194, 1371, 4194, 1371, 4194, 4194,
     1371, 1371, 2053, 2053, 2053, 2053, 4194, 2053, 4194, 2053,
     2053, 4194, 2053, 4194, 4194, 4194, 2053, 2053, 2053, 2053,
     4194, 2053, 2053, 2053, 2053, 2053, 4194, 2053, 2053, 2053,
     4194, 4194, 4194, 2053,  835,  835,  835,  835, 4194,  835,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194,  835,  835,  835,  835,  835, 4194, 4194,
     4194,  835, 4194, 4194, 4194,  835,  719,  719,  719,  719,
     4194,  719, 4194,  719,  719, 4194,  719, 4194,  719, 4194,
      719,  719,  719,  719, 4194,  719,  719,  719,  719,  719,

     4194,  719,  719,  719, 4194, 4194, 4194,  719, 1379, 4194,
     4194, 1379, 4194, 1379, 4194, 4194, 4194, 1379, 4194, 4194,
     4194, 4194, 4194, 1379, 4194, 4194, 4194, 1379, 1379, 1379,
     1379, 1379, 4194, 4194, 4194, 1379, 4194, 4194, 1379, 1379,
     2059, 2059, 2059, 2059, 4194, 2059, 4194, 4194, 2059, 4194,
     4194, 4194, 4194, 4194, 2059, 2059, 4194, 4194, 4194, 2059,
     2059, 2059, 2059, 2059, 4194, 2059, 4194, 2059, 4194, 4194,
     2059, 2059, 2066, 2066, 2066, 2066, 4194, 2066, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 2066, 2066, 2066, 2066, 2066, 4194, 4194, 4194, 2066,

     4194, 4194, 4194, 2066, 2075, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 2075, 4194, 4194, 4194, 4194, 2075, 2075, 2075,
     2075, 2075, 1397, 1397, 1397, 1397, 4194, 1397, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1397, 4194, 4194,
     4194, 1397, 1397, 1397, 1397, 1397, 4194, 1397, 4194, 1397,
     4194, 4194, 1397, 1397, 2083, 2083, 2083, 2083, 4194, 2083,
     4194, 2083, 2083, 4194, 2083, 4194, 4194, 4194, 2083, 2083,
     2083, 2083, 4194, 2083, 2083, 2083, 2083, 2083, 4194, 2083,
     2083, 2083, 4194, 4194, 4194, 2083, 2104, 4194, 2104, 2104,
     4194, 2104, 2104, 2104, 2104, 4194, 2104, 2104, 2104, 2104,

     2104, 2104, 2104, 2104, 2104, 2104, 2104, 2104, 2104, 2104,
     2104, 2104, 4194, 2104, 2104, 2104, 2104, 2104, 2104, 1419,
     1419, 1419, 1419, 4194, 1419, 4194, 1419, 4194, 4194, 4194,
     4194, 4194, 4194, 1419, 1419, 4194, 1419, 4194, 1419, 1419,
     1419, 1419, 1419, 4194, 1419, 4194, 1419, 4194, 4194, 4194,
     1419, 2107, 2107, 4194, 2107, 2107, 4194, 2107, 2107, 2107,
     2107, 2107, 2107, 2107, 2107, 4194, 2107, 2107, 2107, 2107,
     2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107,
     4194, 2107, 2107, 2107, 1422, 1422, 1422, 1422, 4194, 1422,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 1422, 1422, 1422, 1422, 1422, 4194, 4194,
     4194, 1422, 4194, 4194, 4194, 1422, 2112, 2112, 2112, 2112,
     4194, 2112, 4194, 2112, 4194, 4194, 4194, 4194, 4194, 4194,
     2112, 4194, 4194, 2112, 4194, 2112, 2112, 2112, 2112, 2112,
     4194, 4194, 4194, 2112, 4194, 4194, 4194, 2112, 1364, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1364, 1364, 1364, 1364, 1364, 4194, 4194, 4194,
     1364, 4194, 4194, 4194, 1364, 1365, 1365, 4194, 1365, 1365,
     4194, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 4194,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,

     1365, 1365, 1365, 1365, 4194, 1365, 1365, 1365, 1371, 1371,
     1371, 1371, 4194, 1371, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1371, 4194, 4194, 4194, 1371, 1371, 1371,
     1371, 1371, 4194, 1371, 4194, 1371, 4194, 4194, 1371, 1371,
     1528, 1528, 1528, 1528, 4194, 1528, 4194, 1528, 1528, 4194,
     1528, 4194, 4194, 4194, 1528, 1528, 1528, 1528, 4194, 1528,
     1528, 1528, 1528, 1528, 4194, 4194, 1528, 1528, 4194, 4194,
     4194, 1528, 2213, 4194, 4194, 2213, 4194, 2213, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 2213, 2213, 2213, 2213, 2213, 4194, 4194, 4194, 2213,

     4194, 4194, 4194, 2213, 1532, 1532, 4194, 1532, 1532, 1532,
     1532, 1532, 4194, 4194, 1532, 1532, 1532, 1532, 1532, 1532,
     1532, 1532, 4194, 1532, 1532, 1532, 1532, 1532, 1532, 4194,
     1532, 4194, 1532, 4194, 4194, 1532, 1532,  843, 4194, 4194,
      843, 4194,  843, 4194,  843, 4194, 4194, 4194,  843,  843,
     4194,  843,  843, 4194,  843, 4194,  843,  843,  843,  843,
      843, 4194, 4194, 4194,  843, 4194, 4194, 4194,  843, 1536,
     4194, 4194, 1536, 4194, 1536, 4194, 4194, 4194, 1536, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1536, 1536,
     1536, 1536, 1536, 4194, 4194, 4194, 1536, 4194, 4194, 4194,

     1536, 2216, 4194, 4194, 2216, 4194, 2216, 4194, 4194, 2216,
     4194, 4194, 4194, 4194, 4194, 2216, 4194, 4194, 4194, 4194,
     2216, 2216, 2216, 2216, 2216, 4194, 4194, 4194, 2216, 4194,
     4194, 4194, 2216, 2220, 4194, 4194, 2220, 4194, 2220, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 2220, 2220, 4194,
     2220, 4194, 2220, 2220, 2220, 2220, 2220, 4194, 4194, 4194,
     2220, 4194, 4194, 4194, 2220, 1660, 1660, 4194, 1660, 1660,
     4194, 1660, 1660, 4194, 4194, 1660, 1660, 1660, 1660, 4194,
     1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660,
     1660, 1660, 1660, 1660, 4194, 4194, 1660, 1660, 1663, 1663,

     1663, 1663, 4194, 1663, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1663, 4194, 4194, 4194, 1663, 1663, 1663,
     1663, 1663, 4194, 1663, 4194, 1663, 4194, 4194, 1663, 1663,
      943,  943,  943,  943, 4194,  943, 4194,  943, 4194, 4194,
     4194, 4194, 4194, 4194,  943,  943, 4194,  943, 4194,  943,
      943,  943,  943,  943, 4194,  943, 4194,  943, 4194, 4194,
     4194,  943,  957,  957,  957,  957, 4194,  957, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194,  957,  957,  957,  957,  957, 4194, 4194, 4194,  957,
     4194, 4194, 4194,  957, 1667, 1667, 1667, 1667, 4194, 1667,

     4194, 1667, 4194, 4194, 4194, 4194, 4194, 4194, 1667, 1667,
     4194, 1667, 4194, 1667, 1667, 1667, 1667, 1667, 4194, 1667,
     4194, 1667, 4194, 4194, 4194, 1667, 1669, 1669, 1669, 1669,
     4194, 1669, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1669, 1669, 1669, 1669, 1669,
     4194, 4194, 4194, 1669, 4194, 4194, 4194, 1669, 2323, 2323,
     2323, 2323, 4194, 2323, 4194, 2323, 4194, 4194, 4194, 4194,
     4194, 4194, 2323, 4194, 4194, 4194, 4194, 2323, 2323, 2323,
     2323, 2323, 4194, 4194, 4194, 2323, 4194, 4194, 4194, 2323,
     1672, 1672, 1672, 1672, 4194, 1672, 4194, 1672, 4194, 4194,

     4194, 4194, 4194, 4194, 1672, 4194, 4194, 4194, 4194, 1672,
     1672, 1672, 1672, 1672, 4194, 4194, 4194, 1672, 4194, 4194,
     4194, 1672,  961,  961, 4194,  961, 4194,  961, 4194,  961,
     4194, 4194, 4194,  961,  961, 4194,  961,  961, 4194,  961,
     4194,  961,  961,  961,  961,  961, 4194, 4194, 4194,  961,
     4194, 4194, 4194,  961, 2407, 4194, 4194, 2407, 4194, 4194,
     4194, 4194, 4194, 2407, 4194, 4194, 4194, 4194, 2407, 2407,
     2407, 2407, 2407, 4194, 4194, 4194, 2407, 4194, 4194, 4194,
     2407, 2409, 4194, 4194, 4194, 4194, 4194, 4194, 2409, 4194,
     2409, 4194, 4194, 4194, 4194, 2409, 2409, 2409, 2409, 2409,

     4194, 4194, 4194, 2409, 4194, 4194, 4194, 2409, 2410, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 2410, 2410, 2410, 2410, 2410, 4194, 4194, 4194,
     2410, 4194, 4194, 4194, 2410, 2411, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 2411, 4194, 4194, 4194, 4194, 2411,
     2411, 2411, 2411, 2411, 4194, 2411, 4194, 2411, 4194, 4194,
     4194, 2411, 1044, 4194, 4194, 1044, 4194, 1044, 4194, 1044,
     4194, 4194, 4194, 4194, 1044, 4194, 1044, 1044, 4194, 4194,
     4194, 1044, 1044, 1044, 1044, 1044, 4194, 1044, 4194, 1044,
     4194, 4194, 4194, 1044, 2413, 4194, 4194, 4194, 4194, 4194,

     4194, 2413, 4194, 2413, 4194, 4194, 4194, 4194, 2413, 2413,
     2413, 2413, 2413, 4194, 4194, 4194, 2413, 4194, 4194, 4194,
     2413, 1061, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1061, 4194, 4194, 4194, 4194, 1061, 1061, 1061, 1061, 1061,
     4194, 4194, 4194, 1061, 4194, 4194, 4194, 1061, 1069, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1069, 1069, 4194,
     4194, 4194, 1069, 1069, 1069, 1069, 1069, 4194, 1069, 4194,
     1069, 4194, 4194, 4194, 1069, 1788, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1788, 4194, 4194, 4194, 4194, 1788,
     1788, 1788, 1788, 1788, 4194, 4194, 4194, 1788, 4194, 4194,

     4194, 1788, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429,
     2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429,
     2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429,
     2429, 2429, 2429, 2429, 2429, 2433, 2433, 4194, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 1084, 1084,
     4194, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,

     1084, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2442, 2442, 4194, 2442, 2442, 2442,
     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442,
     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442,
     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2464, 2464, 2464,
     2464, 4194, 2464, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 2464, 2464, 2464, 2464,
     2464, 4194, 4194, 4194, 2464, 4194, 4194, 2464, 2464, 1826,

     1826, 4194, 1826, 1826, 4194, 1826, 1826, 4194, 1826, 1826,
     1826, 4194, 4194, 4194, 1826, 1826, 1826, 1826, 1826, 1826,
     1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 4194, 1826,
     1826, 1826, 1829, 1829, 1829, 1829, 4194, 1829, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1829, 1829, 1829, 1829, 1829, 4194, 4194, 4194, 1829,
     4194, 4194, 1829, 1829, 2467, 2467, 2467, 2467, 4194, 2467,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 2467, 2467,
     4194, 2467, 4194, 2467, 2467, 2467, 2467, 2467, 4194, 2467,
     4194, 2467, 4194, 4194, 4194, 2467, 1148, 1148, 1148, 1148,

     4194, 1148, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1148, 1148, 1148, 1148, 1148,
     4194, 4194, 4194, 1148, 4194, 4194, 4194, 1148, 1120, 1120,
     1120, 1120, 4194, 1120, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1120, 1120, 4194, 1120, 4194, 1120, 1120, 1120,
     1120, 1120, 4194, 1120, 4194, 1120, 4194, 4194, 4194, 1120,
     1859, 4194, 4194, 1859, 4194, 1859, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1859, 4194, 4194, 1859, 4194, 1859,
     1859, 1859, 1859, 1859, 4194, 4194, 4194, 1859, 4194, 4194,
     4194, 1859, 1158, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 1158, 4194, 4194, 4194, 4194, 1158, 1158, 1158, 1158,
     1158, 4194, 4194, 4194, 1158, 4194, 4194, 4194, 1158, 1167,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1167, 4194,
     4194, 4194, 4194, 1167, 1167, 1167, 1167, 1167, 4194, 4194,
     4194, 1167, 4194, 4194, 4194, 1167, 1193, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1193, 4194, 4194, 4194, 4194,
     1193, 1193, 1193, 1193, 1193, 4194, 4194, 4194, 1193, 4194,
     4194, 4194, 1193, 2521, 2521, 4194, 2521, 4194, 2521, 2521,
     2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521,
     2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 4194,

     2521, 2521, 2521, 2521, 2521, 2521, 1907, 1907, 4194, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 2524,
     2524, 4194, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
     2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
     2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
     2524, 2524, 2525, 2525, 4194, 2525, 2525, 2525, 2525, 2525,
     2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525,
     2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525,

     2525, 2525, 2525, 2525, 2525, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2530, 2530,
     4194, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530,
     2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530,
     2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530,
     2530, 1226, 1226, 4194, 1226, 1226, 4194, 4194, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 4194, 1226, 1226,

     1226, 1226, 1226, 1226, 2534, 2534, 2534, 2534, 2534, 2534,
     2534, 2534, 2534, 2534, 2534, 2534, 2534, 2534, 2534, 2534,
     2534, 2534, 2534, 2534, 2534, 2534, 2534, 2534, 2534, 2534,
     2534, 2534, 2534, 2534, 2534, 2534, 2534, 2537, 2537, 4194,
     2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,
     2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,
     2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,
     2539, 2539, 4194, 2539, 2539, 2539, 2539, 2539, 2539, 2539,
     2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539,
     2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539,

     2539, 2539, 2539, 1238, 1238, 4194, 1238, 1238, 1238, 1238,
     1238, 1238, 1238, 4194, 1238, 1238, 1238, 1238, 1238, 1238,
     1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238,
     1238, 1238, 1238, 1238, 1238, 1238, 2541, 2541, 4194, 2541,
     2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541,
     2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541,
     2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 1249,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1249, 4194,
     4194, 4194, 4194, 1249, 1249, 1249, 1249, 1249, 4194, 4194,
     4194, 1249, 4194, 4194, 4194, 1249, 2562, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     2562, 2562, 2562, 2562, 2562, 4194, 4194, 4194, 2562, 4194,
     4194, 4194, 2562, 2563, 4194, 4194, 4194, 4194, 4194, 4194,
     2563, 4194, 2563, 2563, 4194, 4194, 4194, 2563, 2563, 2563,
     2563, 2563, 4194, 4194, 4194, 2563, 4194, 4194, 4194, 2563,
     2564, 4194, 2564, 2564, 4194, 2564, 2564, 2564, 4194, 4194,
     2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564,
     2564, 2564, 2564, 2564, 2564, 2564, 4194, 2564, 2564, 2564,
     2564, 2564, 2564, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,

     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2569, 2569, 4194, 2569,
     2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
     2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
     2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 1282,
     1282, 4194, 1282, 1282, 1282, 1282, 1282, 1282, 4194, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573,
     2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573,

     2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573,
     2573, 2573, 2573, 2573, 2573, 2576, 2576, 4194, 2576, 2576,
     2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576,
     2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576,
     2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2578, 2578,
     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 4194, 2578,
     2578, 2578, 4194, 2578, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,

     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
     2580, 2580, 2580, 2580, 1969, 1969, 4194, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 2583, 2583, 2583,
     2583, 2583, 2583, 2583, 2583, 2583, 2583, 4194, 2583, 2583,
     2583, 4194, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583,
     2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583,
     2584, 2584, 4194, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,

     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2585, 2585, 2585, 2585, 2585, 2585, 2585,
     2585, 2585, 2585, 2585, 2585, 2585, 2585, 4194, 2585, 2585,
     2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585,
     2585, 2585, 2585, 2585, 2585, 2585, 1976, 1976, 4194, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,

     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587,  644,  644, 4194, 4194,  644, 4194,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644, 4194,  644,
      644,  644,  644,  644,  644, 1981, 1981, 4194, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 2589, 2589,
     2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589,
     2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589,

     2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589,
     2589, 2590, 2590, 4194, 2590, 2590, 2590, 2590, 2590, 2590,
     2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590,
     2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590,
     2590, 2590, 2590, 2590, 2591, 2591, 2591, 2591, 2591, 2591,
     2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591,
     2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591,
     2591, 2591, 2591, 2591, 2591, 2591, 2591, 1988, 1988, 4194,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,

     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593,
     2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593,
     2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593,
     2593, 2593, 2593,  654,  654, 4194, 4194,  654,  654,  654,
     4194,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,  654, 4194,
      654,  654,  654,  654,  654,  654, 1993, 1993, 4194, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,

     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 2594,
     2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594,
     2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594,
     2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594, 2594,
     2594, 2594, 2595, 2595, 4194, 2595, 2595, 2595, 2595, 2595,
     2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595,
     2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595,
     2595, 2595, 2595, 2595, 2595, 2596, 2596, 2596, 2596, 2596,
     2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
     2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,

     2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2000, 2000,
     4194, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598,
     2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598,
     2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598,
     2598, 2598, 2598, 2598,  663,  663, 4194,  663,  663, 4194,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,

      663,  663,  663,  663,  663,  663,  663, 2005, 2005, 4194,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599,
     2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599,
     2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599,
     2599, 2599, 2599, 2600, 2600, 4194, 2600, 2600, 2600, 2600,
     2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600,
     2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600,

     2600, 2600, 2600, 2600, 2600, 2600, 2601, 2601, 2601, 2601,
     2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601,
     2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601,
     2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2012,
     2012, 4194, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603,
     2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603,
     2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603,

     2603, 2603, 2603, 2603, 2603, 2016, 2016, 4194, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2604, 2604,
     4194, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604,
     2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604,
     2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604,
     2604, 2018, 2018, 4194, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,

     2018, 2018, 2018, 2018, 2605, 2605, 2605, 2605, 2605, 2605,
     2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605,
     2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605,
     2605, 2605, 2605, 2605, 2605, 2605, 2605,  695,  695, 4194,
     4194,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
     2024, 2024, 4194, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,

     2024, 2024, 2024, 2607, 2607, 2607, 2607, 2607, 2607, 2607,
     2607, 2607, 2607, 2607, 2607, 2607, 2607, 2607, 2607, 2607,
     2607, 2607, 2607, 2607, 2607, 2607, 2607, 2607, 2607, 2607,
     2607, 2607, 2607, 2607, 2607, 2607, 2609, 2609, 4194, 2609,
     2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609,
     2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609,
     2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2611,
     2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,
     2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,
     2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,

     2611, 2611, 2033, 2033, 4194, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2615, 2615, 2615, 2615, 2615,
     2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615,
     2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615,
     2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2039, 2039,
     4194, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,

     2039, 2619, 2619, 4194, 2619, 2619, 2619, 2619, 2619, 2619,
     2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619,
     2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619,
     2619, 2619, 2619, 2619, 2041, 2041, 4194, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2620, 2620, 2620,
     2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620,
     2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620,
     2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620,

     2045, 2045, 2045, 2045, 4194, 2045, 4194, 4194, 4194, 4194,
     4194, 4194, 2045, 4194, 2045, 4194, 4194, 4194, 4194, 2045,
     2045, 2045, 2045, 2045, 4194, 4194, 4194, 2045, 4194, 4194,
     4194, 2045, 2627, 2627, 2627, 2627, 4194, 2627, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 2627, 4194, 4194,
     4194, 2627, 2627, 2627, 2627, 2627, 4194, 2627, 4194, 2627,
     4194, 4194, 2627, 2627, 2053, 2053, 2053, 2053, 4194, 2053,
     4194, 2053, 2053, 4194, 2053, 4194, 4194, 4194, 2053, 2053,
     2053, 2053, 4194, 2053, 2053, 2053, 2053, 2053, 4194, 2053,
     2053, 2053, 4194, 4194, 4194, 2053,  719,  719,  719,  719,

     4194,  719, 4194,  719,  719, 4194,  719, 4194,  719, 4194,
      719,  719,  719,  719, 4194,  719,  719,  719,  719,  719,
     4194,  719,  719,  719, 4194, 4194, 4194,  719, 2059, 2059,
     2059, 2059, 4194, 2059, 4194, 4194, 2059, 4194, 4194, 4194,
     4194, 4194, 2059, 2059, 4194, 4194, 4194, 2059, 2059, 2059,
     2059, 2059, 4194, 2059, 4194, 2059, 4194, 4194, 2059, 2059,
     1379, 1379, 1379, 1379, 4194, 1379, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1379,
     1379, 1379, 1379, 1379, 4194, 4194, 4194, 1379, 4194, 4194,
     1379, 1379, 2066, 2066, 2066, 2066, 4194, 2066, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 2066, 2066, 2066, 2066, 2066, 4194, 4194, 4194, 2066,
     4194, 4194, 4194, 2066, 2637, 4194, 4194, 2637, 4194, 2637,
     4194, 4194, 2637, 4194, 4194, 4194, 4194, 4194, 2637, 2637,
     4194, 4194, 4194, 2637, 2637, 2637, 2637, 2637, 4194, 4194,
     4194, 2637, 4194, 4194, 2637, 2637, 2075, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 2075, 4194, 4194, 4194, 4194, 2075,
     2075, 2075, 2075, 2075, 2642, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 2642, 4194, 4194, 4194, 4194, 2642, 2642, 4194,
     4194, 2642, 2083, 2083, 2083, 2083, 4194, 2083, 4194, 2083,

     2083, 4194, 2083, 4194, 4194, 4194, 2083, 2083, 2083, 2083,
     4194, 2083, 2083, 2083, 2083, 2083, 4194, 2083, 2083, 2083,
     4194, 4194, 4194, 2083, 2646, 2646, 4194, 2646, 2646, 4194,
     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 4194, 2646,
     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2646, 2646, 4194, 2646, 2646, 2646, 1397, 1397, 1397,
     1397, 4194, 1397, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1397, 4194, 4194, 4194, 1397, 1397, 1397, 1397,
     1397, 4194, 1397, 4194, 1397, 4194, 4194, 1397, 1397, 2117,
     2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117,

     2117, 2117, 2117, 2117, 4194, 2117, 2117, 2117, 2117, 4194,
     4194, 4194, 4194, 4194, 2117, 2117, 2117, 4194, 2117, 2117,
     2117, 2117, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
     1469, 1469, 1469, 1469, 1469, 1469, 1469, 4194, 1469, 1469,
     1469, 1469, 4194, 4194, 4194, 4194, 4194, 1469, 1469, 1469,
     4194, 1469, 1469, 1469, 1469, 2671, 4194, 2671, 2671, 4194,
     2671, 2671, 2671, 2671, 4194, 2671, 2671, 2671, 2671, 2671,
     2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671,
     2671, 4194, 2671, 2671, 2671, 2671, 2671, 2671, 1366, 1366,
     4194, 1366, 1366, 4194, 1366, 1366, 1366, 1366, 1366, 1366,

     4194, 4194, 4194, 1366, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 1366, 1366, 1366, 1366, 1366, 1366, 4194, 1366, 1366,
     1366, 2107, 2107, 4194, 2107, 2107, 4194, 2107, 2107, 2107,
     2107, 2107, 2107, 2107, 2107, 4194, 2107, 2107, 2107, 2107,
     2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107,
     4194, 2107, 2107, 2107, 2108, 2108, 4194, 2108, 2108, 4194,
     2108, 2108, 4194, 4194, 2108, 2108, 2108, 2108, 4194, 2108,
     2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
     2108, 2108, 2108, 4194, 4194, 2108, 2108, 2112, 2112, 2112,
     2112, 4194, 2112, 4194, 2112, 4194, 4194, 4194, 4194, 4194,

     4194, 2112, 4194, 4194, 2112, 4194, 2112, 2112, 2112, 2112,
     2112, 4194, 4194, 4194, 2112, 4194, 4194, 4194, 2112, 1364,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1364, 1364, 1364, 1364, 1364, 4194, 4194,
     4194, 1364, 4194, 4194, 4194, 1364, 1365, 1365, 4194, 1365,
     1365, 4194, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     4194, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 4194, 1365, 1365, 1365, 1371,
     1371, 1371, 1371, 4194, 1371, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1371, 4194, 4194, 4194, 1371, 1371,

     1371, 1371, 1371, 4194, 1371, 4194, 1371, 4194, 4194, 1371,
     1371, 2213, 4194, 4194, 2213, 4194, 2213, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     2213, 2213, 2213, 2213, 2213, 4194, 4194, 4194, 2213, 4194,
     4194, 4194, 2213, 2757, 4194, 4194, 2757, 4194, 2757, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 2757, 2757, 4194,
     2757, 4194, 2757, 2757, 2757, 2757, 2757, 4194, 4194, 4194,
     2757, 4194, 4194, 4194, 2757,  843, 4194, 4194,  843, 4194,
      843, 4194,  843, 4194, 4194, 4194,  843,  843, 4194,  843,
      843, 4194,  843, 4194,  843,  843,  843,  843,  843, 4194,

     4194, 4194,  843, 4194, 4194, 4194,  843, 2216, 4194, 4194,
     2216, 4194, 2216, 4194, 4194, 2216, 4194, 4194, 4194, 4194,
     4194, 2216, 4194, 4194, 4194, 4194, 2216, 2216, 2216, 2216,
     2216, 4194, 4194, 4194, 2216, 4194, 4194, 4194, 2216, 2220,
     4194, 4194, 2220, 4194, 2220, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 2220, 2220, 4194, 2220, 4194, 2220, 2220,
     2220, 2220, 2220, 4194, 4194, 4194, 2220, 4194, 4194, 4194,
     2220, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243,
     2243, 2243, 2243, 2243, 2243, 2243, 4194, 2243, 2243, 2243,
     2243, 4194, 4194, 4194, 4194, 4194, 2243, 2243, 2243, 4194,

     2243, 2243, 2243, 2243, 1607, 1607, 1607, 1607, 1607, 1607,
     1607, 1607, 1607, 1607, 1607, 1607, 1607, 1607, 1607, 4194,
     1607, 1607, 1607, 1607, 4194, 4194, 4194, 4194, 4194, 1607,
     1607, 1607, 4194, 1607, 1607, 1607, 1607, 1532, 1532, 4194,
     1532, 1532, 1532, 1532, 1532, 4194, 4194, 1532, 1532, 1532,
     1532, 1532, 1532, 1532, 1532, 4194, 1532, 1532, 1532, 1532,
     1532, 1532, 4194, 1532, 4194, 1532, 4194, 4194, 1532, 1532,
     2323, 2323, 2323, 2323, 4194, 2323, 4194, 2323, 4194, 4194,
     4194, 4194, 4194, 4194, 2323, 4194, 4194, 4194, 4194, 2323,
     2323, 2323, 2323, 2323, 4194, 4194, 4194, 2323, 4194, 4194,

     4194, 2323,  961,  961, 4194,  961, 4194,  961, 4194,  961,
     4194, 4194, 4194,  961,  961, 4194,  961,  961, 4194,  961,
     4194,  961,  961,  961,  961,  961, 4194, 4194, 4194,  961,
     4194, 4194, 4194,  961, 2407, 4194, 4194, 2407, 4194, 4194,
     4194, 4194, 4194, 2407, 4194, 4194, 4194, 4194, 2407, 2407,
     2407, 2407, 2407, 4194, 4194, 4194, 2407, 4194, 4194, 4194,
     2407, 2409, 4194, 4194, 4194, 4194, 4194, 4194, 2409, 4194,
     2409, 4194, 4194, 4194, 4194, 2409, 2409, 2409, 2409, 2409,
     4194, 4194, 4194, 2409, 4194, 4194, 4194, 2409, 2917, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 2917, 2917, 4194,

     4194, 4194, 2917, 2917, 2917, 2917, 2917, 4194, 4194, 4194,
     2917, 4194, 4194, 4194, 2917, 2411, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 2411, 4194, 4194, 4194, 4194, 2411,
     2411, 2411, 2411, 2411, 4194, 2411, 4194, 2411, 4194, 4194,
     4194, 2411, 1044, 4194, 4194, 1044, 4194, 1044, 4194, 1044,
     4194, 4194, 4194, 4194, 1044, 4194, 1044, 1044, 4194, 4194,
     4194, 1044, 1044, 1044, 1044, 1044, 4194, 1044, 4194, 1044,
     4194, 4194, 4194, 1044, 2413, 4194, 4194, 4194, 4194, 4194,
     4194, 2413, 4194, 2413, 4194, 4194, 4194, 4194, 2413, 2413,
     2413, 2413, 2413, 4194, 4194, 4194, 2413, 4194, 4194, 4194,

     2413, 1061, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1061, 4194, 4194, 4194, 4194, 1061, 1061, 1061, 1061, 1061,
     4194, 4194, 4194, 1061, 4194, 4194, 4194, 1061, 1069, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1069, 1069, 4194,
     4194, 4194, 1069, 1069, 1069, 1069, 1069, 4194, 1069, 4194,
     1069, 4194, 4194, 4194, 1069, 1788, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1788, 4194, 4194, 4194, 4194, 1788,
     1788, 1788, 1788, 1788, 4194, 4194, 4194, 1788, 4194, 4194,
     4194, 1788, 1084, 1084, 4194, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,

     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 2433, 2433, 4194, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 1969, 1969,
     4194, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,
     2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,

     2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,
     2933, 2933, 2933, 2933, 2935, 2935, 4194, 2935, 2935, 2935,
     2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935,
     2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935,
     2935, 2935, 2935, 2935, 2935, 2935, 2935, 2937, 2937, 2937,
     2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937,
     2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937,
     2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937,
     2442, 2442, 4194, 2442, 2442, 2442, 2442, 2442, 2442, 2442,
     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442,

     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442,
     2442, 2442, 2442, 1976, 1976, 4194, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 2940, 2940, 2940, 2940,
     2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940,
     2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940,
     2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2961,
     2961, 2961, 2961, 4194, 2961, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 2961, 2961, 4194, 2961, 4194, 2961, 2961,

     2961, 2961, 2961, 4194, 2961, 4194, 2961, 4194, 4194, 4194,
     2961, 2467, 2467, 2467, 2467, 4194, 2467, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 2467, 2467, 4194, 2467, 4194,
     2467, 2467, 2467, 2467, 2467, 4194, 2467, 4194, 2467, 4194,
     4194, 4194, 2467, 1120, 1120, 1120, 1120, 4194, 1120, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1120, 1120, 4194,
     1120, 4194, 1120, 1120, 1120, 1120, 1120, 4194, 1120, 4194,
     1120, 4194, 4194, 4194, 1120, 1158, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1158, 4194, 4194, 4194, 4194, 1158,
     1158, 1158, 1158, 1158, 4194, 4194, 4194, 1158, 4194, 4194,

     4194, 1158, 1167, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1167, 4194, 4194, 4194, 4194, 1167, 1167, 1167, 1167,
     1167, 4194, 4194, 4194, 1167, 4194, 4194, 4194, 1167, 1193,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1193, 4194,
     4194, 4194, 4194, 1193, 1193, 1193, 1193, 1193, 4194, 4194,
     4194, 1193, 4194, 4194, 4194, 1193, 3016, 3016, 4194, 3016,
     4194, 3016, 3016, 3016, 3016, 3016, 3016, 3016, 3016, 3016,
     3016, 3016, 3016, 3016, 3016, 3016, 3016, 3016, 3016, 3016,
     3016, 3016, 4194, 3016, 3016, 3016, 3016, 3016, 3016, 2524,
     2524, 4194, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,

     2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
     2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
     2524, 2524, 2525, 2525, 4194, 2525, 2525, 2525, 2525, 2525,
     2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525,
     2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525, 2525,
     2525, 2525, 2525, 2525, 2525, 3018, 3018, 3018, 3018, 3018,
     3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018,
     3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018,
     3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 1226, 1226,
     4194, 1226, 1226, 4194, 4194, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 4194, 1226, 1226, 1226, 1226, 1226,
     1226, 2530, 2530, 4194, 2530, 2530, 2530, 2530, 2530, 2530,
     2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530,
     2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530, 2530,
     2530, 2530, 2530, 2530, 3019, 3019, 3019, 3019, 3019, 3019,
     3019, 3019, 3019, 3019, 3019, 3019, 3019, 3019, 3019, 3019,
     3019, 3019, 3019, 3019, 3019, 3019, 3019, 3019, 3019, 3019,
     3019, 3019, 3019, 3019, 3019, 3019, 3019, 3020, 3020, 4194,
     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,

     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
     3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021,
     3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021,
     3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021,
     3021, 3021, 3021, 2537, 2537, 4194, 2537, 2537, 2537, 2537,
     2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,
     2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,
     2537, 2537, 2537, 2537, 2537, 2537, 3023, 3023, 3023, 3023,
     3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023,

     3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023,
     3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 2539,
     2539, 4194, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539,
     2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539,
     2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539,
     2539, 2539, 3024, 3024, 4194, 3024, 3024, 3024, 3024, 3024,
     3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024,
     3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024,
     3024, 3024, 3024, 3024, 3024, 2541, 2541, 4194, 2541, 2541,
     2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541,

     2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541,
     2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 3025, 3025,
     3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
     3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
     3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
     3025, 1249, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1249, 4194, 4194, 4194, 4194, 1249, 1249, 1249, 1249, 1249,
     4194, 4194, 4194, 1249, 4194, 4194, 4194, 1249, 3045, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 3045, 3045, 4194,
     4194, 4194, 3045, 3045, 3045, 3045, 3045, 4194, 4194, 4194,

     3045, 4194, 4194, 4194, 3045, 2563, 4194, 4194, 4194, 4194,
     4194, 4194, 2563, 4194, 2563, 2563, 4194, 4194, 4194, 2563,
     2563, 2563, 2563, 2563, 4194, 4194, 4194, 2563, 4194, 4194,
     4194, 2563, 3046, 4194, 3046, 3046, 4194, 3046, 3046, 3046,
     4194, 4194, 3046, 3046, 3046, 3046, 3046, 3046, 3046, 3046,
     3046, 3046, 3046, 3046, 3046, 3046, 3046, 3046, 4194, 3046,
     3046, 3046, 3046, 3046, 3046, 1282, 1282, 4194, 1282, 1282,
     1282, 1282, 1282, 1282, 4194, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 2569, 2569,

     4194, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
     2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
     2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
     2569, 3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048,
     3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048,
     3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048, 3048,
     3048, 3048, 3048, 3048, 3049, 3049, 4194, 3049, 3049, 3049,
     3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049,
     3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049,
     3049, 3049, 3049, 3049, 3049, 3049, 3049, 3050, 3050, 3050,

     3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050,
     3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050,
     3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050,
     2576, 2576, 4194, 2576, 2576, 2576, 2576, 2576, 2576, 2576,
     2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576,
     2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576,
     2576, 2576, 2576, 3052, 3052, 3052, 3052, 3052, 3052, 3052,
     3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052,
     3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052,
     3052, 3052, 3052, 3052, 3052, 3052, 2580, 2580, 2580, 2580,

     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 3055,
     3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055,
     3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055,
     3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055,
     3055, 3055, 2584, 2584, 4194, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2585, 2585, 2585, 2585, 2585,

     2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 4194,
     2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585,
     2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587,  644,  644, 4194, 4194,  644, 4194,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644, 4194,  644,  644,
      644,  644,  644,  644, 2590, 2590, 4194, 2590, 2590, 2590,

     2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590,
     2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590,
     2590, 2590, 2590, 2590, 2590, 2590, 2590, 2591, 2591, 2591,
     2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591,
     2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591,
     2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591,
     2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593,
     2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593,
     2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593, 2593,
     2593, 2593, 2593,  654,  654, 4194, 4194,  654,  654,  654,

     4194,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,  654, 4194,
      654,  654,  654,  654,  654,  654, 2595, 2595, 4194, 2595,
     2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595,
     2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595,
     2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2596,
     2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
     2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
     2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
     2596, 2596, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598,

     2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598,
     2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598,
     2598, 2598, 2598, 2598, 2598,  663,  663, 4194,  663,  663,
     4194,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663, 2600, 2600,
     4194, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600,
     2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600,
     2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600,
     2600, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601,

     2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601,
     2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601, 2601,
     2601, 2601, 2601, 2601, 2603, 2603, 2603, 2603, 2603, 2603,
     2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603,
     2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603, 2603,
     2603, 2603, 2603, 2603, 2603, 2603, 2603, 2604, 2604, 4194,
     2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604,
     2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604,
     2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604, 2604,
     2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605,

     2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605,
     2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605, 2605,
     2605, 2605, 2605, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969,  695,  695, 4194, 4194,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695, 2609,
     2609, 4194, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609,

     2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609,
     2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609, 2609,
     2609, 2609, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,
     2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,
     2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,
     2611, 2611, 2611, 2611, 2611, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 2615, 2615,
     2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615,

     2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615,
     2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615, 2615,
     2615, 2619, 2619, 4194, 2619, 2619, 2619, 2619, 2619, 2619,
     2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619,
     2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619, 2619,
     2619, 2619, 2619, 2619, 2620, 2620, 2620, 2620, 2620, 2620,
     2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620,
     2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620,
     2620, 2620, 2620, 2620, 2620, 2620, 2620, 3063, 3063, 3063,
     3063, 4194, 3063, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 3063, 4194, 4194, 4194, 3063, 3063, 3063, 3063,
     3063, 4194, 3063, 4194, 3063, 4194, 4194, 3063, 3063, 2627,
     2627, 2627, 2627, 4194, 2627, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 2627, 4194, 4194, 4194, 2627, 2627,
     2627, 2627, 2627, 4194, 2627, 4194, 2627, 4194, 4194, 2627,
     2627, 3067, 3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194,
     4194, 4194, 4194, 4194, 4194, 3067, 3067, 4194, 3067, 4194,
     3067, 3067, 3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194,
     4194, 4194, 3067, 2053, 2053, 2053, 2053, 4194, 2053, 4194,
     2053, 2053, 4194, 2053, 4194, 4194, 4194, 2053, 2053, 2053,

     2053, 4194, 2053, 2053, 2053, 2053, 2053, 4194, 2053, 2053,
     2053, 4194, 4194, 4194, 2053,  719,  719,  719,  719, 4194,
      719, 4194,  719,  719, 4194,  719,  719,  719, 4194,  719,
      719,  719,  719, 4194,  719,  719,  719,  719,  719, 4194,
      719,  719,  719, 4194, 4194, 4194,  719, 1379, 1379, 1379,
     1379, 4194, 1379, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1379, 1379, 1379, 1379,
     1379, 4194, 4194, 4194, 1379, 4194, 4194, 1379, 1379, 2059,
     2059, 2059, 2059, 4194, 2059, 4194, 4194, 2059, 4194, 4194,
     4194, 4194, 4194, 2059, 2059, 4194, 4194, 4194, 2059, 2059,

     2059, 2059, 2059, 4194, 2059, 4194, 2059, 4194, 4194, 2059,
     2059, 2637, 4194, 4194, 2637, 4194, 2637, 4194, 4194, 2637,
     4194, 4194, 4194, 4194, 4194, 2637, 2637, 4194, 4194, 4194,
     2637, 2637, 2637, 2637, 2637, 4194, 4194, 4194, 2637, 4194,
     4194, 2637, 2637, 2642, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 2642, 4194, 4194, 4194, 4194, 2642, 2642, 4194, 4194,
     2642, 2075, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 2075,
     4194, 4194, 4194, 4194, 2075, 2075, 2075, 2075, 2075, 2646,
     2646, 4194, 2646, 2646, 4194, 2646, 2646, 2646, 2646, 2646,
     2646, 2646, 2646, 4194, 2646, 2646, 2646, 2646, 2646, 2646,

     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 4194, 2646,
     2646, 2646, 1397, 1397, 1397, 1397, 4194, 1397, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1397, 4194, 4194,
     4194, 1397, 1397, 1397, 1397, 1397, 4194, 1397, 4194, 1397,
     4194, 4194, 1397, 1397, 3103, 4194, 3103, 3103, 4194, 3103,
     3103, 3103, 3103, 4194, 3103, 3103, 3103, 3103, 3103, 3103,
     3103, 3103, 3103, 3103, 3103, 3103, 3103, 3103, 3103, 3103,
     4194, 3103, 3103, 3103, 3103, 3103, 3103, 1364, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1364, 1364, 1364, 1364, 1364, 4194, 4194, 4194, 1364,

     4194, 4194, 4194, 1364, 2757, 4194, 4194, 2757, 4194, 2757,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 2757, 2757,
     4194, 2757, 4194, 2757, 2757, 2757, 2757, 2757, 4194, 4194,
     4194, 2757, 4194, 4194, 4194, 2757,  843, 4194, 4194,  843,
     4194,  843, 4194,  843, 4194, 4194, 4194,  843,  843, 4194,
      843,  843, 4194,  843, 4194,  843,  843,  843,  843,  843,
     4194, 4194, 4194,  843, 4194, 4194, 4194,  843,  961,  961,
     4194,  961, 4194,  961, 4194,  961, 4194, 4194, 4194,  961,
      961, 4194,  961,  961, 4194,  961, 4194,  961,  961,  961,
      961,  961, 4194, 4194, 4194,  961, 4194, 4194, 4194,  961,

     2917, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 2917,
     2917, 4194, 4194, 4194, 2917, 2917, 2917, 2917, 2917, 4194,
     4194, 4194, 2917, 4194, 4194, 4194, 2917, 1044, 4194, 4194,
     1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194, 4194, 1044,
     4194, 1044, 1044, 4194, 4194, 4194, 1044, 1044, 1044, 1044,
     1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194, 1044, 1061,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1061, 4194,
     4194, 4194, 4194, 1061, 1061, 1061, 1061, 1061, 4194, 4194,
     4194, 1061, 4194, 4194, 4194, 1061, 1069, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1069, 1069, 4194, 4194, 4194,

     1069, 1069, 1069, 1069, 1069, 4194, 1069, 4194, 1069, 4194,
     4194, 4194, 1069, 1788, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1788, 4194, 4194, 4194, 4194, 1788, 1788, 1788,
     1788, 1788, 4194, 4194, 4194, 1788, 4194, 4194, 4194, 1788,
     1084, 1084, 4194, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1084, 2935, 2935, 4194, 2935, 2935, 2935, 2935,
     2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935,
     2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935,

     2935, 2935, 2935, 2935, 2935, 2935, 2584, 2584, 4194, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2937,
     2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937,
     2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937,
     2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937, 2937,
     2937, 2937, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940,
     2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940,
     2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940, 2940,

     2940, 2940, 2940, 2940, 2940, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2961, 2961,
     2961, 2961, 4194, 2961, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 2961, 2961, 4194, 2961, 4194, 2961, 2961, 2961,
     2961, 2961, 4194, 2961, 4194, 2961, 4194, 4194, 4194, 2961,
     3335, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 3335, 3335, 3335, 3335, 3335, 4194,
     4194, 4194, 3335, 4194, 4194, 4194, 3335, 1120, 1120, 1120,

     1120, 4194, 1120, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 1120, 1120, 4194, 1120, 4194, 1120, 1120, 1120, 1120,
     1120, 4194, 1120, 4194, 1120, 4194, 4194, 4194, 1120, 1158,
     1158, 1158, 1158, 4194, 1158, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1158, 4194, 1158, 4194, 1158, 1158, 1158,
     1158, 1158, 1158, 4194, 4194, 4194, 1158, 1158, 4194, 4194,
     1158, 1167, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1167, 4194, 4194, 4194, 4194, 1167, 1167, 1167, 1167, 1167,
     4194, 4194, 4194, 1167, 4194, 4194, 4194, 1167, 1193, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1193, 4194, 4194,

     4194, 4194, 1193, 1193, 1193, 1193, 1193, 4194, 4194, 4194,
     1193, 4194, 4194, 4194, 1193, 3018, 3018, 3018, 3018, 3018,
     3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018,
     3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018,
     3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 1226, 1226,
     4194, 1226, 1226, 4194, 4194, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 4194, 1226, 1226, 1226, 1226, 1226,
     1226, 3020, 3020, 4194, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,

     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 3020, 3020, 3020, 3021, 3021, 3021, 3021, 3021, 3021,
     3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021,
     3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021, 3021,
     3021, 3021, 3021, 3021, 3021, 3021, 3021, 3023, 3023, 3023,
     3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023,
     3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023,
     3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023, 3023,
     3024, 3024, 4194, 3024, 3024, 3024, 3024, 3024, 3024, 3024,
     3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024,

     3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024,
     3024, 3024, 3024, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
     3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
     3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
     3025, 3025, 3025, 3025, 3025, 3025, 1249, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1249, 4194, 4194, 4194, 4194,
     1249, 1249, 1249, 1249, 1249, 4194, 4194, 4194, 1249, 4194,
     4194, 4194, 1249, 3045, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 3045, 3045, 4194, 4194, 4194, 3045, 3045, 3045,
     3045, 3045, 4194, 4194, 4194, 3045, 4194, 4194, 4194, 3045,

     3396, 4194, 3396, 3396, 4194, 3396, 3396, 3396, 4194, 4194,
     3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396,
     3396, 3396, 3396, 3396, 3396, 3396, 4194, 3396, 3396, 3396,
     3396, 3396, 3396, 1282, 1282, 4194, 1282, 1282, 1282, 1282,
     1282, 1282, 4194, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 3049, 3049, 4194, 3049,
     3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049,
     3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049,
     3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3049, 3050,

     3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050,
     3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050,
     3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050,
     3050, 3050, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052,
     3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052,
     3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052, 3052,
     3052, 3052, 3052, 3052, 3052, 3055, 3055, 3055, 3055, 3055,
     3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055,
     3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055,
     3055, 3055, 3055, 3055, 3055, 3055, 3055, 3055, 2584, 2584,

     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 3399, 3399, 3399, 3399, 3399, 3399,
     3399, 3399, 3399, 3399, 4194, 3399, 3399, 3399, 4194, 3399,
     3399, 3399, 3399, 3399, 3399, 3399, 3399, 3399, 3399, 3399,
     3399, 3399, 3399, 3399, 3399, 3399, 3399, 3403, 3403, 3403,

     3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 4194, 4194,
     4194, 3403, 3403, 4194, 3403, 4194, 3403, 3403, 3403, 3403,
     3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 3403, 3067,
     3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194, 4194, 4194,
     4194, 4194, 4194, 3067, 3067, 4194, 3067, 4194, 3067, 3067,
     3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194, 4194, 4194,
     3067, 3405, 3405, 4194, 3405, 3405, 4194, 3405, 3405, 3405,
     3405, 3405, 3405, 3405, 3405, 4194, 3405, 3405, 3405, 3405,
     3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405,
     4194, 3405, 3405, 3405, 2053, 2053, 2053, 2053, 4194, 2053,

     4194, 2053, 2053, 4194, 2053, 4194, 4194, 4194, 2053, 2053,
     2053, 2053, 4194, 2053, 2053, 2053, 2053, 2053, 4194, 2053,
     2053, 2053, 4194, 4194, 4194, 2053, 1364, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1364, 1364, 1364, 1364, 1364, 4194, 4194, 4194, 1364, 4194,
     4194, 4194, 1364, 1379, 1379, 1379, 1379, 4194, 1379, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1379, 1379, 1379, 1379, 1379, 4194, 4194, 4194,
     1379, 4194, 4194, 1379, 1379, 2075, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 2075, 4194, 4194, 4194, 4194, 2075, 2075,

     2075, 2075, 2075, 1441, 1441, 1441, 1441, 1441, 1441, 1441,
     1441, 1441, 1441, 1441, 1441, 1441, 1441, 1441, 4194, 1441,
     1441, 1441, 1441, 4194, 4194, 4194, 4194, 4194, 1441, 1441,
     1441, 4194, 1441, 1441, 1441, 1441, 2117, 2117, 2117, 2117,
     2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117,
     2117, 4194, 2117, 2117, 2117, 2117, 4194, 4194, 4194, 4194,
     4194, 2117, 2117, 2117, 4194, 2117, 2117, 2117, 2117,  719,
      719,  719,  719, 4194,  719, 4194,  719,  719, 4194,  719,
     4194,  719, 4194,  719,  719,  719,  719, 4194,  719,  719,
      719,  719,  719, 4194,  719,  719,  719, 4194, 4194, 4194,

      719, 3432, 4194, 3432, 3432, 4194, 3432, 3432, 3432, 3432,
     4194, 3432, 3432, 3432, 3432, 3432, 3432, 3432, 3432, 3432,
     3432, 3432, 3432, 3432, 3432, 3432, 3432, 4194, 3432, 3432,
     3432, 3432, 3432, 3432, 1575, 1575, 1575, 1575, 1575, 1575,
     1575, 1575, 1575, 1575, 1575, 1575, 1575, 1575, 1575, 4194,
     1575, 1575, 1575, 1575, 4194, 4194, 4194, 4194, 4194, 1575,
     1575, 1575, 4194, 1575, 1575, 1575, 1575,  843, 4194, 4194,
      843, 4194,  843, 4194,  843, 4194, 4194, 4194,  843,  843,
     4194,  843,  843, 4194,  843, 4194,  843,  843,  843,  843,
      843, 4194, 4194, 4194,  843, 4194, 4194, 4194,  843, 1532,

     1532, 4194, 1532, 1532, 1532, 1532, 1532, 4194, 4194, 1532,
     1532, 1532, 1532, 1532, 1532, 1532, 1532, 4194, 1532, 1532,
     1532, 1532, 1532, 1532, 4194, 1532, 4194, 1532, 4194, 4194,
     1532, 1532,  961,  961, 4194,  961, 4194,  961, 4194,  961,
     4194, 4194, 4194,  961,  961, 4194,  961,  961, 4194,  961,
     4194,  961,  961,  961,  961,  961, 4194, 4194, 4194,  961,
     4194, 4194, 4194,  961, 1044, 4194, 4194, 1044, 4194, 1044,
     4194, 1044, 4194, 4194, 4194, 4194, 1044, 4194, 1044, 1044,
     4194, 4194, 4194, 1044, 1044, 1044, 1044, 1044, 4194, 1044,
     4194, 1044, 4194, 4194, 4194, 1044, 1061, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 1061, 4194, 4194, 4194, 4194,
     1061, 1061, 1061, 1061, 1061, 4194, 4194, 4194, 1061, 4194,
     4194, 4194, 1061, 1069, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1069, 1069, 4194, 4194, 4194, 1069, 1069, 1069,
     1069, 1069, 4194, 1069, 4194, 1069, 4194, 4194, 4194, 1069,
     1788, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1788,
     4194, 4194, 4194, 4194, 1788, 1788, 1788, 1788, 1788, 4194,
     4194, 4194, 1788, 4194, 4194, 4194, 1788, 3589, 4194, 4194,
     3589, 4194, 3589, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 3589, 3589, 4194, 4194, 4194, 3589, 3589, 3589, 3589,

     3589, 4194, 4194, 4194, 3589, 4194, 4194, 4194, 3589, 1120,
     1120, 1120, 1120, 4194, 1120, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1120, 1120, 4194, 1120, 4194, 1120, 1120,
     1120, 1120, 1120, 4194, 1120, 4194, 1120, 4194, 4194, 4194,
     1120, 1826, 1826, 4194, 1826, 1826, 4194, 1826, 1826, 4194,
     1826, 1826, 1826, 4194, 4194, 4194, 1826, 1826, 1826, 1826,
     1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826,
     4194, 1826, 1826, 1826, 1829, 1829, 1829, 1829, 4194, 1829,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1829, 1829, 1829, 1829, 1829, 4194, 4194,

     4194, 1829, 4194, 4194, 1829, 1829, 1158, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1158, 4194, 4194, 4194, 4194,
     1158, 1158, 1158, 1158, 1158, 4194, 4194, 4194, 1158, 4194,
     4194, 4194, 1158, 1167, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1167, 4194, 4194, 4194, 4194, 1167, 1167, 1167,
     1167, 1167, 4194, 4194, 4194, 1167, 4194, 4194, 4194, 1167,
     1193, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1193,
     4194, 4194, 4194, 4194, 1193, 1193, 1193, 1193, 1193, 4194,
     4194, 4194, 1193, 4194, 4194, 4194, 1193, 1249, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1249, 4194, 4194, 4194,

     4194, 1249, 1249, 1249, 1249, 1249, 4194, 4194, 4194, 1249,
     4194, 4194, 4194, 1249, 3624, 4194, 3624, 3624, 4194, 3624,
     3624, 3624, 4194, 4194, 3624, 3624, 3624, 3624, 3624, 3624,
     3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624,
     4194, 3624, 3624, 3624, 3624, 3624, 3624, 3403, 3403, 3403,
     3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 4194, 4194,
     4194, 3403, 3403, 4194, 3403, 4194, 3403, 3403, 3403, 3403,
     3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 3403, 3405,
     3405, 4194, 3405, 3405, 4194, 3405, 3405, 3405, 3405, 3405,
     3405, 3405, 3405, 4194, 3405, 3405, 3405, 3405, 3405, 3405,

     3405, 3405, 3405, 3405, 3405, 3405, 3405, 3405, 4194, 3405,
     3405, 3405, 3067, 3067, 3067, 3067, 4194, 3067, 4194, 3067,
     4194, 4194, 4194, 4194, 4194, 4194, 3067, 3067, 4194, 3067,
     4194, 3067, 3067, 3067, 3067, 3067, 4194, 3067, 4194, 3067,
     4194, 4194, 4194, 3067, 2053, 2053, 2053, 2053, 4194, 2053,
     4194, 2053, 2053, 4194, 2053, 4194, 4194, 4194, 2053, 2053,
     2053, 2053, 4194, 2053, 2053, 2053, 2053, 2053, 4194, 2053,
     2053, 2053, 4194, 4194, 4194, 2053, 3632, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 3632, 4194, 4194, 4194,
     3632, 3632, 3632, 3632, 3632, 4194, 4194, 4194, 3632, 4194,

     4194, 3632, 3632, 3635, 3635, 3635, 3635, 4194, 3635, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 3635, 4194,
     4194, 4194, 3635, 3635, 3635, 3635, 3635, 4194, 3635, 4194,
     3635, 4194, 4194, 3635, 3635,  719,  719,  719,  719, 4194,
      719, 4194,  719,  719, 4194,  719, 4194,  719, 4194,  719,
      719,  719,  719, 4194,  719,  719,  719,  719,  719, 4194,
      719,  719,  719, 4194, 4194, 4194,  719, 3649, 4194, 3649,
     3649, 4194, 3649, 3649, 3649, 3649, 4194, 3649, 3649, 3649,
     3649, 3649, 3649, 3649, 3649, 3649, 3649, 3649, 3649, 3649,
     3649, 3649, 3649, 4194, 3649, 3649, 3649, 3649, 3649, 3649,

      843, 4194, 4194,  843, 4194,  843, 4194,  843, 4194, 4194,
     4194,  843,  843, 4194,  843,  843, 4194,  843, 4194,  843,
      843,  843,  843,  843, 4194, 4194, 4194,  843, 4194, 4194,
     4194,  843,  961,  961, 4194,  961, 4194,  961, 4194,  961,
     4194, 4194, 4194,  961,  961, 4194,  961,  961, 4194,  961,
     4194,  961,  961,  961,  961,  961, 4194, 4194, 4194,  961,
     4194, 4194, 4194,  961, 1044, 4194, 4194, 1044, 4194, 1044,
     4194, 1044, 4194, 4194, 4194, 4194, 1044, 4194, 1044, 1044,
     4194, 4194, 4194, 1044, 1044, 1044, 1044, 1044, 4194, 1044,
     4194, 1044, 4194, 4194, 4194, 1044, 1061, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 1061, 4194, 4194, 4194, 4194,
     1061, 1061, 1061, 1061, 1061, 4194, 4194, 4194, 1061, 4194,
     4194, 4194, 1061, 1069, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1069, 1069, 4194, 4194, 4194, 1069, 1069, 1069,
     1069, 1069, 4194, 1069, 4194, 1069, 4194, 4194, 4194, 1069,
     1788, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1788,
     4194, 4194, 4194, 4194, 1788, 1788, 1788, 1788, 1788, 4194,
     4194, 4194, 1788, 4194, 4194, 4194, 1788, 3757, 3757, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757,
     3757, 3757, 4194, 3757, 3757, 3757, 3757, 4194, 4194, 4194,

     4194, 4194, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757,
     3589, 4194, 4194, 3589, 4194, 3589, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 3589, 3589, 4194, 4194, 4194, 3589,
     3589, 3589, 3589, 3589, 4194, 4194, 4194, 3589, 4194, 4194,
     4194, 3589, 1120, 1120, 1120, 1120, 4194, 1120, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1120, 1120, 4194, 1120,
     4194, 1120, 1120, 1120, 1120, 1120, 4194, 1120, 4194, 1120,
     4194, 4194, 4194, 1120, 1158, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1158, 4194, 4194, 4194, 4194, 1158, 1158,
     1158, 1158, 1158, 4194, 4194, 4194, 1158, 4194, 4194, 4194,

     1158, 1167, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1167, 4194, 4194, 4194, 4194, 1167, 1167, 1167, 1167, 1167,
     4194, 4194, 4194, 1167, 4194, 4194, 4194, 1167, 1193, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1193, 4194, 4194,
     4194, 4194, 1193, 1193, 1193, 1193, 1193, 4194, 4194, 4194,
     1193, 4194, 4194, 4194, 1193, 1249, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1249, 4194, 4194, 4194, 4194, 1249,
     1249, 1249, 1249, 1249, 4194, 4194, 4194, 1249, 4194, 4194,
     4194, 1249, 3774, 4194, 3774, 3774, 4194, 3774, 3774, 3774,
     4194, 4194, 3774, 3774, 3774, 3774, 3774, 3774, 3774, 3774,

     3774, 3774, 3774, 3774, 3774, 3774, 3774, 3774, 4194, 3774,
     3774, 3774, 3774, 3774, 3774, 3403, 3403, 3403, 3403, 4194,
     3403, 4194, 3403, 4194, 4194, 4194, 4194, 4194, 4194, 3403,
     3403, 4194, 3403, 4194, 3403, 3403, 3403, 3403, 3403, 4194,
     3403, 4194, 3403, 4194, 4194, 4194, 3403, 3067, 3067, 3067,
     3067, 4194, 3067, 4194, 3067, 4194, 4194, 4194, 4194, 4194,
     4194, 3067, 3067, 4194, 3067, 4194, 3067, 3067, 3067, 3067,
     3067, 4194, 3067, 4194, 3067, 4194, 4194, 4194, 3067, 2053,
     2053, 2053, 2053, 4194, 2053, 4194, 2053, 2053, 4194, 2053,
     4194, 4194, 4194, 2053, 2053, 2053, 2053, 4194, 2053, 2053,

     2053, 2053, 2053, 4194, 2053, 2053, 2053, 4194, 4194, 4194,
     2053, 3782, 3782, 3782, 3782, 4194, 3782, 4194, 4194, 3782,
     4194, 3782, 4194, 4194, 4194, 3782, 3782, 3782, 4194, 4194,
     3782, 3782, 3782, 3782, 3782, 4194, 3782, 3782, 3782, 4194,
     4194, 4194, 3782, 3788, 3788, 3788, 3788, 4194, 3788, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 3788, 3788, 3788, 3788, 3788, 4194, 4194, 4194,
     3788, 4194, 4194, 4194, 3788, 3790, 3790, 3790, 3790, 4194,
     3790, 4194, 3790, 4194, 4194, 4194, 4194, 4194, 4194, 3790,
     3790, 4194, 3790, 4194, 3790, 3790, 3790, 3790, 3790, 4194,

     3790, 4194, 3790, 4194, 4194, 4194, 3790, 3797, 4194, 3797,
     3797, 4194, 3797, 3797, 3797, 3797, 4194, 3797, 3797, 3797,
     3797, 3797, 3797, 3797, 3797, 3797, 3797, 3797, 3797, 3797,
     3797, 3797, 3797, 4194, 3797, 3797, 3797, 3797, 3797, 3797,
     1364, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1364, 1364, 1364, 1364, 1364, 4194,
     4194, 4194, 1364, 4194, 4194, 4194, 1364, 3806, 3806, 4194,
     3806, 3806, 4194, 3806, 3806, 3806, 3806, 3806, 3806, 3806,
     3806, 4194, 3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806,
     3806, 3806, 3806, 3806, 3806, 3806, 4194, 3806, 3806, 3806,

     1371, 1371, 1371, 1371, 4194, 1371, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 1371, 4194, 4194, 4194, 1371,
     1371, 1371, 1371, 1371, 4194, 1371, 4194, 1371, 4194, 4194,
     1371, 1371,  843, 4194, 4194,  843, 4194,  843, 4194,  843,
     4194, 4194, 4194,  843,  843, 4194,  843,  843, 4194,  843,
     4194,  843,  843,  843,  843,  843, 4194, 4194, 4194,  843,
     4194, 4194, 4194,  843, 1532, 1532, 4194, 1532, 1532, 1532,
     1532, 1532, 4194, 4194, 1532, 1532, 1532, 1532, 1532, 1532,
     1532, 1532, 4194, 1532, 1532, 1532, 1532, 1532, 1532, 4194,
     1532, 4194, 1532, 4194, 4194, 1532, 1532,  961,  961, 4194,

      961, 4194,  961, 4194,  961, 4194, 4194, 4194,  961,  961,
     4194,  961,  961, 4194,  961, 4194,  961,  961,  961,  961,
      961, 4194, 4194, 4194,  961, 4194, 4194, 4194,  961, 1044,
     4194, 4194, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     4194, 1044, 4194, 1044, 1044, 4194, 4194, 4194, 1044, 1044,
     1044, 1044, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     1044, 1061, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1061, 4194, 4194, 4194, 4194, 1061, 1061, 1061, 1061, 1061,
     4194, 4194, 4194, 1061, 4194, 4194, 4194, 1061, 1069, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1069, 1069, 4194,

     4194, 4194, 1069, 1069, 1069, 1069, 1069, 4194, 1069, 4194,
     1069, 4194, 4194, 4194, 1069, 1788, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 1788, 4194, 4194, 4194, 4194, 1788,
     1788, 1788, 1788, 1788, 4194, 4194, 4194, 1788, 4194, 4194,
     4194, 1788, 1120, 1120, 1120, 1120, 4194, 1120, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1120, 1120, 4194, 1120,
     4194, 1120, 1120, 1120, 1120, 1120, 4194, 1120, 4194, 1120,
     4194, 4194, 4194, 1120, 1158, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1158, 4194, 4194, 4194, 4194, 1158, 1158,
     1158, 1158, 1158, 4194, 4194, 4194, 1158, 4194, 4194, 4194,

     1158, 1167, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1167, 4194, 4194, 4194, 4194, 1167, 1167, 1167, 1167, 1167,
     4194, 4194, 4194, 1167, 4194, 4194, 4194, 1167, 1249, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1249, 4194, 4194,
     4194, 4194, 1249, 1249, 1249, 1249, 1249, 4194, 4194, 4194,
     1249, 4194, 4194, 4194, 1249, 3881, 4194, 3881, 3881, 4194,
     3881, 3881, 3881, 4194, 4194, 3881, 3881, 3881, 3881, 3881,
     3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881,
     3881, 4194, 3881, 3881, 3881, 3881, 3881, 3881, 3403, 3403,
     3403, 3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 4194,

     4194, 4194, 3403, 3403, 4194, 3403, 4194, 3403, 3403, 3403,
     3403, 3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 3403,
     3067, 3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194, 4194,
     4194, 4194, 4194, 4194, 3067, 3067, 4194, 3067, 4194, 3067,
     3067, 3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194, 4194,
     4194, 3067, 2053, 2053, 2053, 2053, 4194, 2053, 4194, 2053,
     2053, 4194, 2053, 4194, 4194, 4194, 2053, 2053, 2053, 2053,
     4194, 2053, 2053, 2053, 2053, 2053, 4194, 2053, 2053, 2053,
     4194, 4194, 4194, 2053, 3782, 3782, 3782, 3782, 4194, 3782,
     4194, 4194, 3782, 4194, 3782, 4194, 4194, 4194, 3782, 3782,

     3782, 4194, 4194, 3782, 3782, 3782, 3782, 3782, 4194, 3782,
     3782, 3782, 4194, 4194, 4194, 3782, 3632, 3632, 3632, 3632,
     4194, 3632, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 3632, 3632, 3632, 3632, 3632,
     4194, 4194, 4194, 3632, 4194, 4194, 3632, 3632, 3788, 3788,
     3788, 3788, 4194, 3788, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 3788, 3788, 3788,
     3788, 3788, 4194, 4194, 4194, 3788, 4194, 4194, 4194, 3788,
     3890, 3890, 3890, 3890, 4194, 3890, 4194, 4194, 3890, 4194,
     3890, 4194, 4194, 4194, 3890, 4194, 3890, 4194, 4194, 3890,

     3890, 3890, 3890, 3890, 4194, 4194, 3890, 3890, 4194, 4194,
     4194, 3890, 3790, 3790, 3790, 3790, 4194, 3790, 4194, 3790,
     4194, 4194, 4194, 4194, 4194, 4194, 3790, 3790, 4194, 3790,
     4194, 3790, 3790, 3790, 3790, 3790, 4194, 3790, 4194, 3790,
     4194, 4194, 4194, 3790, 2117, 2117, 2117, 2117, 2117, 2117,
     2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117, 4194,
     2117, 2117, 2117, 2117, 4194, 4194, 4194, 4194, 4194, 2117,
     2117, 2117, 4194, 2117, 2117, 2117, 2117, 3896, 4194, 3896,
     3896, 4194, 3896, 3896, 3896, 3896, 4194, 3896, 3896, 3896,
     3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896,

     3896, 3896, 3896, 4194, 3896, 3896, 3896, 3896, 3896, 3896,
     3808, 3808, 4194, 3808, 3808, 4194, 3808, 3808, 3808, 3808,
     3808, 3808, 4194, 4194, 4194, 3808, 3808, 3808, 3808, 3808,
     3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 4194,
     3808, 3808, 3808, 3806, 3806, 4194, 3806, 3806, 4194, 3806,
     3806, 3806, 3806, 3806, 3806, 3806, 3806, 4194, 3806, 3806,
     3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806,
     3806, 3806, 4194, 3806, 3806, 3806, 3807, 3807, 4194, 3807,
     3807, 4194, 3807, 3807, 3807, 3807, 3807, 3807, 4194, 4194,
     4194, 3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807,

     3807, 3807, 3807, 3807, 3807, 4194, 3807, 3807, 3807, 3905,
     3905, 4194, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905,
     3905, 3905, 3905, 3905, 4194, 3905, 3905, 3905, 3905, 4194,
     4194, 4194, 4194, 4194, 3905, 3905, 3905, 4194, 3905, 3905,
     3905, 3905, 3948, 3948, 4194, 3948, 3948, 4194, 3948, 3948,
     3948, 3948, 3948, 3948, 3948, 3948, 4194, 3948, 3948, 3948,
     3948, 3948, 3948, 3948, 3948, 3948, 3948, 3948, 3948, 3948,
     3948, 4194, 3948, 3948, 3948,  843, 4194, 4194,  843, 4194,
      843, 4194,  843, 4194, 4194, 4194,  843,  843, 4194,  843,
      843, 4194,  843, 4194,  843,  843,  843,  843,  843, 4194,

     4194, 4194,  843, 4194, 4194, 4194,  843,  961,  961, 4194,
      961, 4194,  961, 4194,  961, 4194, 4194, 4194,  961,  961,
     4194,  961,  961, 4194,  961, 4194,  961,  961,  961,  961,
      961, 4194, 4194, 4194,  961, 4194, 4194, 4194,  961, 1044,
     4194, 4194, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     4194, 1044, 4194, 1044, 1044, 4194, 4194, 4194, 1044, 1044,
     1044, 1044, 1044, 4194, 1044, 4194, 1044, 4194, 4194, 4194,
     1044, 1061, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1061, 4194, 4194, 4194, 4194, 1061, 1061, 1061, 1061, 1061,
     4194, 4194, 4194, 1061, 4194, 4194, 4194, 1061, 1788, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 1788, 4194, 4194,
     4194, 4194, 1788, 1788, 1788, 1788, 1788, 4194, 4194, 4194,
     1788, 4194, 4194, 4194, 1788, 1120, 1120, 1120, 1120, 4194,
     1120, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1120,
     1120, 4194, 1120, 4194, 1120, 1120, 1120, 1120, 1120, 4194,
     1120, 4194, 1120, 4194, 4194, 4194, 1120, 1158, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1158, 4194, 4194, 4194,
     4194, 1158, 1158, 1158, 1158, 1158, 4194, 4194, 4194, 1158,
     4194, 4194, 4194, 1158, 1167, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 1167, 4194, 4194, 4194, 4194, 1167, 1167,

     1167, 1167, 1167, 4194, 4194, 4194, 1167, 4194, 4194, 4194,
     1167, 1249, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1249, 4194, 4194, 4194, 4194, 1249, 1249, 1249, 1249, 1249,
     4194, 4194, 4194, 1249, 4194, 4194, 4194, 1249, 3989, 4194,
     3989, 3989, 4194, 3989, 3989, 3989, 4194, 4194, 3989, 3989,
     3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989,
     3989, 3989, 3989, 3989, 4194, 3989, 3989, 3989, 3989, 3989,
     3989, 3403, 3403, 3403, 3403, 4194, 3403, 4194, 3403, 4194,
     4194, 4194, 4194, 4194, 4194, 3403, 3403, 4194, 3403, 4194,
     3403, 3403, 3403, 3403, 3403, 4194, 3403, 4194, 3403, 4194,

     4194, 4194, 3403, 3067, 3067, 3067, 3067, 4194, 3067, 4194,
     3067, 4194, 4194, 4194, 4194, 4194, 4194, 3067, 3067, 4194,
     3067, 4194, 3067, 3067, 3067, 3067, 3067, 4194, 3067, 4194,
     3067, 4194, 4194, 4194, 3067, 3632, 3632, 3632, 3632, 4194,
     3632, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 3632, 3632, 3632, 3632, 3632, 4194,
     4194, 4194, 3632, 4194, 4194, 3632, 3632, 3890, 3890, 3890,
     3890, 4194, 3890, 4194, 4194, 3890, 4194, 3890, 4194, 4194,
     4194, 3890, 4194, 3890, 4194, 4194, 3890, 3890, 3890, 3890,
     3890, 4194, 4194, 3890, 3890, 4194, 4194, 4194, 3890, 3999,

     4194, 3999, 3999, 4194, 3999, 3999, 3999, 3999, 4194, 3999,
     3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999,
     3999, 3999, 3999, 3999, 3999, 4194, 3999, 3999, 3999, 3999,
     3999, 3999, 2117, 2117, 2117, 2117, 2117, 2117, 2117, 2117,
     2117, 2117, 2117, 2117, 2117, 2117, 2117, 4194, 2117, 2117,
     2117, 2117, 4194, 4194, 4194, 4194, 4194, 2117, 2117, 2117,
     4194, 2117, 2117, 2117, 2117, 1366, 1366, 4194, 1366, 1366,
     4194, 1366, 1366, 1366, 1366, 1366, 1366, 4194, 4194, 4194,
     1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 1366, 1366, 1366, 4194, 1366, 1366, 1366, 3950, 3950,

     4194, 3950, 3950, 4194, 3950, 3950, 3950, 3950, 3950, 3950,
     4194, 4194, 4194, 3950, 3950, 3950, 3950, 3950, 3950, 3950,
     3950, 3950, 3950, 3950, 3950, 3950, 3950, 4194, 3950, 3950,
     3950, 3948, 3948, 4194, 3948, 3948, 4194, 3948, 3948, 3948,
     3948, 3948, 3948, 3948, 3948, 4194, 3948, 3948, 3948, 3948,
     3948, 3948, 3948, 3948, 3948, 3948, 3948, 3948, 3948, 3948,
     4194, 3948, 3948, 3948, 3949, 3949, 4194, 3949, 3949, 4194,
     3949, 3949, 3949, 3949, 3949, 3949, 4194, 4194, 4194, 3949,
     3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949,
     3949, 3949, 3949, 4194, 3949, 3949, 3949,  843, 4194, 4194,

      843, 4194,  843, 4194,  843, 4194, 4194, 4194,  843,  843,
     4194,  843,  843, 4194,  843, 4194,  843,  843,  843,  843,
      843, 4194, 4194, 4194,  843, 4194, 4194, 4194,  843, 2243,
     2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243,
     2243, 2243, 2243, 2243, 4194, 2243, 2243, 2243, 2243, 4194,
     4194, 4194, 4194, 4194, 2243, 2243, 2243, 4194, 2243, 2243,
     2243, 2243,  961,  961, 4194,  961, 4194,  961, 4194,  961,
     4194, 4194, 4194,  961,  961, 4194,  961,  961, 4194,  961,
     4194,  961,  961,  961,  961,  961, 4194, 4194, 4194,  961,
     4194, 4194, 4194,  961, 1044, 4194, 4194, 1044, 4194, 1044,

     4194, 1044, 4194, 4194, 4194, 4194, 1044, 4194, 1044, 1044,
     4194, 4194, 4194, 1044, 1044, 1044, 1044, 1044, 4194, 1044,
     4194, 1044, 4194, 4194, 4194, 1044, 1120, 1120, 1120, 1120,
     4194, 1120, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     1120, 1120, 4194, 1120, 4194, 1120, 1120, 1120, 1120, 1120,
     4194, 1120, 4194, 1120, 4194, 4194, 4194, 1120, 1158, 1158,
     1158, 1158, 4194, 1158, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 1158, 4194, 4194, 4194, 4194, 1158, 1158, 1158,
     1158, 1158, 4194, 4194, 4194, 1158, 1158, 4194, 4194, 1158,
     1167, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 1167,

     4194, 4194, 4194, 4194, 1167, 1167, 1167, 1167, 1167, 4194,
     4194, 4194, 1167, 4194, 4194, 4194, 1167, 1249, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 1249, 4194, 4194, 4194,
     4194, 1249, 1249, 1249, 1249, 1249, 4194, 4194, 4194, 1249,
     4194, 4194, 4194, 1249, 4061, 4194, 4061, 4061, 4194, 4061,
     4061, 4061, 4194, 4194, 4061, 4061, 4061, 4061, 4061, 4061,
     4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061,
     4194, 4061, 4061, 4061, 4061, 4061, 4061, 3403, 3403, 3403,
     3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 4194, 4194,
     4194, 3403, 3403, 4194, 3403, 4194, 3403, 3403, 3403, 3403,

     3403, 4194, 3403, 4194, 3403, 4194, 4194, 4194, 3403, 3067,
     3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194, 4194, 4194,
     4194, 4194, 4194, 3067, 3067, 4194, 3067, 4194, 3067, 3067,
     3067, 3067, 3067, 4194, 3067, 4194, 3067, 4194, 4194, 4194,
     3067, 4067, 4194, 4067, 4067, 4194, 4067, 4067, 4067, 4067,
     4194, 4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067,
     4067, 4067, 4067, 4067, 4067, 4067, 4067, 4194, 4067, 4067,
     4067, 4067, 4067, 4067, 1365, 1365, 4194, 1365, 1365, 4194,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 4194, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,

     1365, 1365, 1365, 4194, 1365, 1365, 1365, 1532, 1532, 4194,
     1532, 1532, 1532, 1532, 1532, 4194, 4194, 1532, 1532, 1532,
     1532, 1532, 1532, 1532, 1532, 4194, 1532, 1532, 1532, 1532,
     1532, 1532, 4194, 1532, 4194, 1532, 4194, 4194, 1532, 1532,
      843, 4194, 4194,  843, 4194,  843, 4194,  843, 4194, 4194,
     4194,  843,  843, 4194,  843,  843, 4194,  843, 4194,  843,
      843,  843,  843,  843, 4194, 4194, 4194,  843, 4194, 4194,
     4194,  843,  961,  961, 4194,  961, 4194,  961, 4194,  961,
     4194, 4194, 4194,  961,  961, 4194,  961,  961, 4194,  961,
     4194,  961,  961,  961,  961,  961, 4194, 4194, 4194,  961,

     4194, 4194, 4194,  961, 4103, 4194, 4194, 4103, 4194, 4103,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4103, 4103, 4103, 4103, 4103, 4194, 4194,
     4194, 4103, 4194, 4194, 4194, 4103, 4108, 4194, 4108, 4108,
     4194, 4108, 4108, 4108, 4194, 4194, 4108, 4108, 4108, 4108,
     4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108,
     4108, 4108, 4194, 4108, 4108, 4108, 4108, 4108, 4108, 4116,
     4194, 4116, 4116, 4194, 4116, 4116, 4116, 4116, 4194, 4116,
     4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116,
     4116, 4116, 4116, 4116, 4116, 4194, 4116, 4116, 4116, 4116,

     4116, 4116, 1367, 1367, 4194, 1367, 1367, 4194, 1367, 1367,
     1367, 1367, 1367, 1367, 4194, 4194, 4194, 1367, 1367, 1367,
     1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367, 1367,
     1367, 4194, 1367, 1367, 1367, 4138, 4194, 4194, 4138, 4194,
     4138, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4138, 4138, 4138, 4138, 4138, 4194,
     4194, 4194, 4138, 4194, 4194, 4194, 4138, 4140, 4194, 4194,
     4140, 4194, 4140, 4194, 4194, 4140, 4194, 4194, 4194, 4194,
     4194, 4140, 4194, 4194, 4194, 4194, 4140, 4140, 4140, 4140,
     4140, 4194, 4194, 4194, 4140, 4194, 4194, 4194, 4140, 4144,

     4194, 4144, 4144, 4194, 4144, 4144, 4144, 4194, 4194, 4144,
     4144, 4144, 4144, 4144, 4144, 4144, 4144, 4144, 4144, 4144,
     4144, 4144, 4144, 4144, 4144, 4194, 4144, 4144, 4144, 4144,
     4144, 4144, 4151, 4194, 4151, 4151, 4194, 4151, 4151, 4151,
     4151, 4194, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151,
     4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4194, 4151,
     4151, 4151, 4151, 4151, 4151, 4166, 4194, 4194, 4166, 4194,
     4166, 4194, 4194, 4166, 4194, 4194, 4194, 4194, 4194, 4166,
     4194, 4194, 4194, 4194, 4166, 4166, 4166, 4166, 4166, 4194,
     4194, 4194, 4166, 4194, 4194, 4194, 4166, 4168, 4194, 4168,

     4168, 4194, 4168, 4168, 4168, 4194, 4194, 4168, 4168, 4168,
     4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168,
     4168, 4168, 4168, 4194, 4168, 4168, 4168, 4168, 4168, 4168,
     4170, 4194, 4170, 4170, 4194, 4170, 4170, 4170, 4170, 4194,
     4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170,
     4170, 4170, 4170, 4170, 4170, 4170, 4194, 4170, 4170, 4170,
     4170, 4170, 4170, 4181, 4194, 4181, 4181, 4194, 4181, 4181,
     4181, 4194, 4194, 4181, 4181, 4181, 4181, 4181, 4181, 4181,
     4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4194,
     4181, 4181, 4181, 4181, 4181, 4181, 4183, 4194, 4183, 4183,

     4194, 4183, 4183, 4183, 4183, 4194, 4183, 4183, 4183, 4183,
     4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183,
     4183, 4183, 4194, 4183, 4183, 4183, 4183, 4183, 4183, 4187,
     4194, 4187, 4187, 4194, 4187, 4187, 4187, 4194, 4194, 4187,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187,
     4187, 4187, 4187, 4187, 4187, 4194, 4187, 4187, 4187, 4187,
     4187, 4187, 4189, 4194, 4189, 4189, 4194, 4189, 4189, 4189,
     4189, 4194, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4194, 4189,
     4189, 4189, 4189, 4189, 4189, 4190, 4194, 4190, 4190, 4194,

     4190, 4190, 4190, 4194, 4194, 4190, 4190, 4190, 4190, 4190,
     4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190,
     4190, 4194, 4190, 4190, 4190, 4190, 4190, 4190, 4192, 4194,
     4192, 4192, 4194, 4192, 4192, 4192, 4192, 4194, 4192, 4192,
     4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192,
     4192, 4192, 4192, 4192, 4194, 4192, 4192, 4192, 4192, 4192,
     4192,   75, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194
    } ;

static const flex_int16_t yy_chk[44846] =
    {   0,
        0,    0,    1,    1,    2,    2,    2,    2,  124,  124,
        3,    3,    1,    1,    3,    2,    2,    0,   81,    1,
        3,    3,    2,   81,  136,   85,   90,    3,    5,    5,
       85,   90,  167,    1,  366,  167,    2,    5,    5,    5,
       18,    3,    0,   18,  167,    5,   18,    1,   95,    1,
        2,   20,    2,   95,   20,    3,    3,    3,   18,    5,
       22,   24,   26,   22,   24,   26,    7,    7,   28,   20,
        7,   28,  145,    5,    5,    5,    7,    7,   22,   24,
       26,   34,    1,    7,   34,    2,   28,  136,  147, 2144,
        3,    4,    4,    4,    4,  100,    4,    7,  366,   34,

      100,   36,    4,    4,   36,  104,  804,  111,    5,    4,
      104,    7,  111,    7,  145,    8,    8,    8,    8,   36,
        8,  804,  147,    4,    9,    9,    8,    8,    9,  323,
      135,  115,  323,    8,    9,    9,  115,    4,    4,    4,
      203,    9,   46,  135,  203,   46,    7,    8,   13,   13,
       40,  165,  122,   40,  165,    9,   40,  122,   13,   13,
       46,    8,  127,    8,  165,   13,  180,  127,   40,    9,
        9,    9,    4,    6,    6,    6,    6,  214,  429,   13,
      214,  134,   40,    6,    6,    6,  134,  146,  146,   48,
      180,    6,   48,   13,   13,   13,    8,   11,   11,   11,

       11,   15,   15,  225,    9,    6,  323,   48,   11,   11,
       11,   15,   15,   15,  429,   11,  219,  225,   15,    6,
        6,    6,   50,   52,   54,   50,   52,   54,   13,   11,
      138,   56,   15,  146,   56,  138,  214,  219,  636,  156,
       50,   52,   54,   11,  156,   11,   15,  636,   15,   56,
       12,   12,   12,   12,    6,   10,   10,   10,   10,  160,
       10,   12,   12,   12,  160,  144,   10,   10,   12,  379,
      144,  232,  232,   10,   14,   14,   14,   14,   11,  172,
      385,   15,   12,  149,  172,   14,   14,   10,  149,  379,
       58,   60,   14,   58,   60,  223,   12,  191,   12,  144,

      191,   10,   10,   10,  637,  208,   14,  191,   58,   60,
      208,  223,   16,   16,   16,   16,   62,  149,  637,   62,
       14,   14,   14,   16,   16,   16,  192,  234,  234,   66,
       16,   12,   66,  192,   62,   68,   10,  192,   68,   70,
      192,  385,   70,   77,   16,   84,   77,   66,   84,   94,
     2152,  103,   94,   68,  103,   14,  106,   70,   16,  106,
       16,   77,  114,   84,  196,  114,  196,   94,  117,  103,
      126,  117,  129,  126,  106,  129,  196,  194,  215,  194,
      114, 2196,  197,  215,  197,  129,  117,  194,  126,  194,
      129,  197,  197,   16,   17,   17,   17,   17,   17,   17,

       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,

       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,

       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,

       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,

       25,   25,   25,   25,   25,   25,   25,   25,   25,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   29,   29,   30,   30,   30,   30,  739,  739,

       31,   31,   29,   29,  140,   30,   30,  140,  372,   29,
       31,   31,   30,  201,  193,  424,  206,   31,   32,   32,
       32,   32,  140,   29,  193,  137,   30,  201,  137,   32,
       32,   31,  206,  201,  193,  424,   32,   29,  137,   29,
       30,  148,   30,  137,  148,   31,  190,   31,  277,  151,
       32,  159,  151,  277,  159,  206,  190,  200,  372,  148,
      206,  200,  195,  190,   32,  190,   32,  151, 2210,  159,
      195,  200,   29,  195,  744,   30,  195,  200,  334,  195,
       31,  334,  195,  211,  211,  211,  211,  414,  148,  171,
      171,  171,  171,  171,  171,  171,  171,  414,  744,   32,

       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,

       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   37,   37,   37,   37,
      265,  337,   43,   43,  337,  227,   43,   37,   37,  202,
      227,  291,   43,   43,   37,  222,  291,  202,  222,   43,
       71,   71,  227,   37,   63,   63,  202,  222,   37,  202,

       71,   71,   43,   43,   63,   63,   63,   71,  207,  591,
      205,   63,   37,  205,   37,  222,  207,   43,  265,   43,
      415,   71,  207,  205,  415,   63,  213,  702,  178,  213,
      205,  575,  213,  220,  392,   71,  220,   71,  575,   63,
     2211,   63,  275,   37,  213,  275,  220,   37,   38,   38,
       38,   38,   43,  204,  275,  419,  204,  204,  235,   38,
       38,  702,  345,  591,  268,  419,   38,  345,  204,  268,
       71,  204,  350,  204,   63,   38,  178,  350,  178,  178,
       38,  268,  178,  288,  288,  288,  288,  290,  178,  178,
      290,  178,  178,  178,   38,  392,   38,  226,  226,  226,

      226,  226,  226,  226,  226,  290,  235,  310,  235,  235,
      356,  362,  235,  293, 2221,  356,  362,  310,  235,  235,
      310,  235,  235,  235,  310,   38,  310,  293,  293,   38,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,

       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   41,   41,  341,  748,   41,  341,  751,
      751,  311,   41,   41,   41,  378,  326,  748,  378,  326,
       41,  311,  314,  341,   64,   64,   64,   64,  311,  314,
      311,   41,  314,   41,   41,   64,   64,   64,  314,  314,
      399,  314,   64,  330,  217,  389,  330,  217,   41,  485,
       41,  187,  187,  187,  187,  217,   64,  326, 2222,  485,
      217,  217,  187,  187,  327,  389,  399,  327,  388,  327,
       64,  217,   64,  217,  284,  284,  284,  284,  187,   72,
       72,   72,   72,   41,   42,   42,   42,   42,  388,   42,

       72,   72,  378,  326,   42,   42,   42,   72,  187,  389,
      388,  284,   42,  333,  333,   64,  236,  458,  333,  236,
      628,   72,  458,   42,  217,   42,   42,  236,  489,  506,
      330,  284,  236,  236,  330,   72,  628,   72,  489,  506,
       42,  187,   42,  236,  237,  236,  363,  237,  251,  363,
      251,  327,  251,  762,  333,  237,  251,  762,  400,  251,
      237,  237,  251,  331,  284,  251,  331,  470,  251, 2224,
       72,  237,  470,  237,  363,   42,   44,   44,   44,   44,
      349,   44,  645,  349,  400,  237,  238,   44,   44,  238,
      331,  645,  352,  361,   44,  352,  361,  238,  349,  757,

      401,  239,  238,  238,  239,  655,  239,   44,   44,  237,
      352,  361,  239,  238,  655,  238,  240,  239,  239,  240,
      241,  387,   44,  241,   44,  322,  401,  240,  239,  402,
      239,  241,  240,  240,  404,  322,  241,  241,  238,  770,
      331,  387,  322,  240,  322,  240, 2225,  241,  477,  241,
      770,  240,  757,  477,  322,  402,  253,   44,   45,   45,
      404,  241,  387,  245,  253,  387,  245,  253,   45,   45,
      253,  423,  423,  253,  245,   45,  253,  499,  774,  245,
      245,  303,  499,  423,  367,  774,   45,  367,   45,   45,
      245,  303,  245, 1511,  303,   45,   45,  303,  303,   45,

      303,   45,  367,   45,  303,   45,  493,  493, 1511,   45,
       45,   45,  367,   45,   45,  245,   45,  368,  493,   45,
      368,   45,   45,  510,  785,  245,   45,   45,   45,   45,
       45,  527,  245,  510,  245,  368,  527,  785,   45,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,

       49,   49,   49,   49,   49,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,

       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,

       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,

       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,

       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,

       61,   61,   61,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,

       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,

       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   73,   73,  773,  405,   73,  448,  448,  448,
      448,   73,   73,   73,  472,  646,  773,  472,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,  574,  646,
      581,  405,  472,   73,  304,  304,  578, 2226,  574,   73,
      242,  304,   73,  242,   73,  304,  578,   73,  304,   73,

      581,  242,  304,  403,  304,  498,  242,  242,  498,  536,
      244,  403, 2227,  244,  536,  500,  403,  242,  500,  242,
      546,  244,   73,  498,  745,  546,  244,  244,   73,  403,
       73,  405,   73,   74,   74,   74,   74,  244,   74,  244,
      836,  242,  500,   74,   74,   74,  339,  656,  745,  339,
       74,   74,   74,   74,   74,   74,   74,   74,   74,   74,
      244,  656,  407,  836,  339,   74,  246,  552,  306,  246,
      407,   74,  552,  339,   74,  407,   74,  246,  306,   74,
      306,   74,  246,  246,  690,  306,  252,  306,  407,  252,
      306,  252, 2228,  246,  252,  246,  559,  252,  252,  252,

      252,  559,  406,  252,   74,  406,  252,  406,  247,  776,
       74,  247,   74,  665,   74,  163,  163,  163,  163,  247,
      406,  776,  665,  339,  247,  247,  163,  163,  799,  595,
      163,  246,  163,  406,  246,  247,  799,  247,  254,  595,
      257,  246,  163,  163,  163,  563,  254,  690,  257,  254,
      563,  257,  254,  502,  257,  254,  502,  257,  254,  247,
      257,  248,  163,  163,  248,  249,  247,  755,  249,  666,
      247,  520,  248,  247,  520, 2230,  249,  248,  248,  598,
      502,  249,  249,  666,  598,  163,  173,  755,  248,  520,
      248, 1277,  249,  173,  249,  173,  173,  173,  173,  173,

      173,  173,  173,  761,  602,  308,  308,  608,  308,  602,
      173,  173,  608,  514,  514,  308,  248,  535,  308,  784,
      535,  173,  308,  761,  308,  514,  248,  249,  173,  249,
      784,  173,  256,  256,  502,  535,  248,  315,  315,  249,
      256,  315,  676,  256,  600, 1277,  256,  256,  315,  256,
      173,  174,  256,  256,  600,  315,  676,  315,  174,  687,
      174,  174,  174,  174,  174,  174,  174,  174,  687,  312,
      312,  756,  551,  312,  255,  551,  174, 2231,  255,  174,
      312,  756,  255,  312,  174,  255,  174,  312,  255,  312,
      551,  255, 2232,  258,  255,  261,  174,  258,  771,  771,

      688,  258,  554,  174,  258,  554,  562,  258,  600,  562,
      258,  261,  174,  258,  688,  174,  179,  179,  179,  179,
      554,  261,  582,  778,  562,  582,  582,  179,  179,  261,
      778,  179,  261,  179,  261,  261, 2233,  582,  261,  261,
      262,  261,  260,  179,  179,  179,  260,  613,  262,  260,
      260,  262,  613,  260,  262,  390,  260,  262,  390,  260,
      262,  390,  260,  179,  179,  228,  260,  753,  593,  710,
      753,  593,  228,  390,  228,  228,  228,  228,  228,  228,
      228,  228, 2234,  710,  259,  267,  593,  390,  259,  228,
      228,  259,  259,  267,  601,  259,  267,  601,  259,  267,

      228,  259,  267,  259,  259,  267,  259,  228,  259,  622,
      228,  263,  601,  263,  622,  267,  633,  604,  263,  263,
      604,  633,  263,  708,  708,  263,  708,  709,  263,  228,
      229,  263,  390,  635, 2247,  604,  709,  229,  635,  229,
      229,  229,  229,  229,  229,  229,  229, 1084,  641,  272,
      272,  272,  272,  641,  612,  229,  328,  612,  229,  328,
      272,  792,  792,  229,  276,  276,  276,  276,  276,  276,
      276,  276,  612, 1084,  651,  229,  272,  775,  272,  651,
      775,  328,  229,  280,  280,  280,  280,  281,  281,  281,
      281,  229,  250,  728,  280,  250,  272,  328,  281,  643,

      660,  317,  728,  250,  317,  660, 2249,  317,  250,  250,
      280,  317,  280,  643,  281,  779,  281,  317,  317,  250,
      317,  250,  779,  615,  317,  653,  615,  643,  281,  759,
      280,  759,  796,  328,  281,  282,  282,  282,  282,  653,
      282,  615,  305,  250,  796,  305,  282,  286,  286,  286,
      286,  250,  305,  653,  250,  305, 1111,  250,  286,  305,
      250,  305,  282,  250,  282,  305,  289,  289,  289,  289,
      292,  292,  286,  292,  286, 1111,  286,  289,  669,  320,
      320,  292,  282,  669,  783,  320,  292,  292,  286,  320,
      783,  814,  814,  289,  286,  289,  320,  292,  320,  292,

      294,  294,  294,  294,  294,  294,  294,  294,  295,  295,
      309,  295,  309,  289,  309,  296,  296, 2250,  296,  295,
      309,  309,  309,  675,  295,  295,  296,  309,  675,  309,
      791,  296,  296,  632,  692,  295,  632,  295,  714,  692,
      791, 2335,  296,  714,  296,  297,  297,  289,  297,  295,
      297,  632,  298,  298,  830,  298,  297,  537,  537,  537,
      537,  297,  297,  298,  830,  758,  704,  296,  298,  298,
      758,  704,  297,  295,  297,  299,  299,  786,  299,  298,
      786,  298,  300,  300,  537,  300,  299,  298, 2407,  696,
      696,  299,  299,  300,  538,  538,  538,  538,  300,  300,

      704,  772,  299, 2409,  299,  537,  772,  301,  301,  300,
      301,  300,  820,  820,  302,  302,  299,  302,  301,  634,
      787,  538,  634,  301,  301,  302,  640, 1455,  787,  640,
      302,  302,  787,  300,  301,  696,  301,  634,  307,  307,
     1455,  302,  538,  302,  640,  642,  307,  789,  729,  307,
      313,  729,  307,  789,  642,  307,  307,  301,  307,  318,
      313,  729,  650,  652,  313,  650,  302,  313, 2410,  313,
      313,  316,  652,  642,  316,  318,  302,  316,  316,  805,
      650,  316,  805,  302,  332,  302,  318,  332,  316,  316,
      316,  652,  316,  790,  316,  332,  318,  319,  318,  661,

      790,  332,  864,  318,  319,  318,  336,  319,  661,  336,
      319,  332,  826,  864,  319,  338,  319,  336,  338,  428,
      428,  428,  428,  336,  793,  659,  338,  661,  659,  826,
      793,  332,  338,  336,  432,  432,  432,  432,  433,  433,
      433,  433,  338,  659,  825,  697,  428,  788,  428,  801,
      662,  788,  825,  336,  697,  801,  336,  434,  434,  434,
      434,  432,  338,  432,  662,  433,  428,  433,  435,  435,
      435,  435,  803,  436,  436,  436,  436,  803,  662,  808,
      668,  432,  808,  668,  434,  433,  434,  698,  697,  671,
      433,  674,  434, 2411,  674,  435,  338,  435,  668,  432,

      436,  698,  436,  671,  434,  437,  437,  437,  437,  674,
      438,  438,  438,  438,  807,  435,  807,  671,  680,  435,
      436,  680,  439,  439,  439,  439,  440,  440,  440,  440,
      698,  777,  437, 2413,  437,  811,  680,  438,  436,  438,
      681,  811,  777,  777,  539,  539,  539,  539,  436,  439,
      795,  439,  437,  440,  681,  440,  795,  438,  441,  441,
      441,  441,  795,  437,  442,  442,  442,  442,  681,  439,
      437,  539,  794,  440,  731,  438,  684,  731,  794,  684,
      440,  817,  794, 2415,  439,  441,  731,  441,  817,  684,
      440,  442,  539,  442,  684,  443,  443,  443,  443,  444,

      444,  444,  444,  713, 1124,  441,  713,  445,  445,  445,
      445,  442,  446,  446,  446,  446,  449,  449,  449,  449,
      769,  713,  443,  441,  443,  539,  444,  769,  444,  451,
      451,  451,  451,  806,  445,  442,  445,  806,  769,  446,
     1124,  446,  443,  449,  670,  449,  444,  443,  780,  447,
      447,  447,  447,  670,  445,  822,  780,  444,  444,  446,
      822,  691,  780,  449,  691,  452,  452,  452,  452,  444,
      797,  445,  670,  797,  691,  693,  447,  446,  447,  691,
      802, 1183,  451,  452,  693,  453,  453,  453,  453, 1059,
      781,  694,  802,  781,  451,  781,  447,  449,  451,  781,

     1183,  451,  447,  693,  705,  694,  451,  469,  469,  469,
      469,  703,  706,  705,  703,  715, 1429,  716,  452,  694,
      768,  768,  768,  768,  715,  469,  706, 1429,  797,  703,
      452,  716,  705,  809,  452,  813,  809,  452,  453, 2416,
      706,  813,  452,  715,  800,  716,  730,  705,  800,  730,
      453,  828,  828, 1059,  453,  706,  800,  453,  703,  730,
      469,  821,  453,  818,  818,  833,  833,  821,  564,  564,
      564,  564,  469,  730,  812,  812,  469,  823,  823,  469,
      838,  812,  818,  838,  469,  548,  548,  823,  548,  548,
      548, 2417,  548,  548,  548,  548,  548,  548,  548,  548,

      548,  548,  548,  548,  548,  621,  621,  621,  621,  621,
      621,  621,  621,  548,  548,  548,  548,  548,  548,  827,
      827,  564,  747,  747,  747,  747,  730,  840,  840, 1215,
      827,  810,  548,  564,  548,  548,  810,  564, 1215,  838,
      564,  565,  565,  565,  565,  564,  810,  867,  867,  747,
      566,  566,  566,  566,  829, 1405,  831,  831,  829,  565,
      831, 1405, 2418,  548,  548,  548,  548,  550,  550,  747,
      550,  550,  550,  871,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  550,  550,  550,  550,  588,  588,  588,
      588,  872, 2419,  871,  565,  550,  550,  550,  550,  550,

      550,  872,  747,  566,  819,  588,  565, 1304,  816, 1304,
      565,  819,  816,  565,  550,  566,  550,  550,  565,  566,
      816,  819,  566,  718,  718,  718,  718,  566,  834,  834,
      834,  834, 1235,  839,  718,  718,  839, 1235,  718, 1216,
      588,  725,  725,  725,  725,  550,  550,  550,  550,  550,
      718,  718,  588, 1216,  851,  837,  588,  851,  837,  588,
      869,  837, 1069,  869,  588,  623, 1041,  851,  725, 1041,
      718,  718,  623,  837,  623,  623,  623,  623,  623,  623,
      623,  623, 1069, 1278,  717,  717,  717,  717,  725,  623,
      623,  842,  839, 1278,  842,  717,  717,  724,  724,  717,

      623, 1034,  724,  724, 1034, 1042,  725,  623, 1042, 1499,
      623,  717,  717,  717,  738, 1206, 1050,  724,  842, 1050,
      842,  725, 1499,  738,  738,  738,  738,  738,  738,  623,
      624,  717,  717, 1052, 1206,  852, 1052,  624,  852,  624,
      624,  624,  624,  624,  624,  624,  624, 1229,  852,  763,
      763,  763,  763, 1035, 1040,  624, 1035, 1040,  624,  824,
     2420, 1229,  740,  624,  740,  724,  824,  740,  740,  740,
      740,  740,  740,  740,  740,  624,  763,  853, 1034,  824,
      853, 1040,  624,  824,  954,  954,  954,  954, 1306,  853,
     1306,  624,  719,  719,  719,  719,  763,  956,  956,  956,

      956,  735, 1039,  719,  719, 1039, 1089,  719,  735,  719,
      735,  735,  735,  735,  735,  735,  735,  735, 1074,  719,
      719,  719,  957,  957,  957,  957,  735, 1451, 1451,  763,
     1035, 1040, 1089,  957,  764,  764,  764,  764, 1074,  719,
      719,  726,  726,  726,  726,  764,  735,  767,  767,  767,
      767, 1073,  726,  726, 1073, 1413,  726, 1037,  726, 1413,
     1037,  764, 1037,  764,  815,  815,  815,  815,  726,  726,
      726,  815, 1241, 1043,  767,  815, 1043, 1083,  815, 1039,
     1083,  764, 1089, 1039, 1043, 2421, 1241, 1078,  726,  726,
      835,  835,  835,  835,  767,  941,  941,  941,  941,  726,

      734,  835,  835, 1049, 1049,  835,  941, 1078, 1049,  734,
      734,  734,  734,  734,  734,  734,  734,  835,  835,  835,
      843, 1038,  941,  843, 1038,  734,  734,  767,  734, 1105,
     1177,  843, 1105, 1177, 1037, 1245,  843,  843,  835, 1228,
     1245, 1078,  941, 2426, 1049,  734,  734,  843, 1228,  843,
     1087, 1087,  734,  736,  736,  736,  736,  736,  736,  736,
      736,  923, 1038,  923, 1087,  849,  923,  923,  849,  736,
      736,  923,  736, 1220,  923, 1480,  849, 1087,  924, 1349,
      924,  849,  849, 1480,  924, 1077,  924, 1220,  924,  736,
      736,  924,  849, 1219,  849, 1076,  736,  737, 1038, 1268,

     1055, 1220, 1219, 1055,  737, 1077,  737,  737,  737,  737,
      737,  737,  737,  737,  873, 1076, 1423,  873, 1268,  873,
     1076, 1219,  737,  849, 1349,  873, 1077,  925, 1055,  925,
      873,  873,  737,  925, 1423, 1240, 1271,  925,  856, 1271,
      925,  873,  737,  873, 1240,  856,  925,  856,  856,  856,
      856,  856,  856,  856,  856, 1234, 2427, 1068, 1234, 1505,
     1068,  737,  741,  856,  741,  741,  741,  741,  741,  741,
      741,  741, 1505, 1234,  960,  960,  926,  960,  741,  741,
      741,  741,  926,  856,  926,  960, 1244, 1363,  926, 1244,
      960,  960,  926,  926, 1236,  926,  741,  741,  741,  741,

      741,  741,  743, 1236, 1244, 1060, 1367, 1363, 1060,  743,
     1286,  743,  743,  743,  743,  743,  743,  743,  743,  927,
     1075,  927, 1236, 1060, 1286,  927, 1367,  743,  875,  927,
      743,  875,  927, 1060, 1068,  743,  928,  743,  928,  875,
     1075, 1285,  928,  928,  875,  875,  928,  743, 1290,  928,
     1285, 1298, 1075, 1290,  743,  875, 1298,  875, 1075, 1147,
     1147, 1147, 1147,  743, 1793, 1355,  743,  782,  782,  782,
      782,  782,  782,  782,  782,  782,  782,  782,  782,  782,
      782,  782,  782,  782,  782,  782,  782, 1303,  875, 1431,
     1793,  874, 1303, 1431,  874,  782,  782,  782,  782,  782,

      782, 1314,  874, 1314, 1086, 1086, 1340,  874,  874, 1148,
     1355, 1340, 1148, 1086,  782,  782,  782,  782,  874,  929,
      874,  929, 1344, 1490,  930,  929,  930, 1344, 1498,  929,
      930, 1086,  929, 1490,  930,  930, 1498,  930, 1148,  782,
     1316, 1324, 1316, 1324,  874,  782,  782,  782,  782,  782,
      798,  798,  798,  798,  798,  798,  798,  798,  798,  798,
      798,  798,  798,  798,  798,  798,  798,  798,  798,  798,
     1214, 1214, 1214, 1214, 1214, 1214, 1246,  857,  798,  798,
      798,  798,  798,  798,  857, 1246,  857,  857,  857,  857,
      857,  857,  857,  857,  933,  931, 1281,  798,  798,  798,

      798,  931,  857,  931, 1246, 1425, 1281,  931, 1492, 1492,
      933,  931,  933, 1319,  931,  931,  933, 1092, 1092,  931,
      933, 1319,  857,  933, 1425, 1326, 1092, 1326,  798,  798,
      798,  798,  798,  858, 1416,  858,  858,  858,  858,  858,
      858,  858,  858, 1090, 1092, 1092, 1090, 1291, 1090,  858,
      858,  858,  858,  935, 1416,  935, 1291, 2021, 1319,  935,
     1281, 1090,  876,  935, 2428,  876,  935,  858,  858,  858,
      858,  858,  858,  876, 1090, 1291, 1428,  877,  876,  876,
      877,  878, 1189, 1454,  878, 1189, 2021, 1237,  877,  876,
     1428,  876,  878,  877,  877, 1454,  879,  878,  878,  879,

      876, 1237, 1247, 1334,  877, 1334,  877,  879,  878, 1189,
      878,  880,  879,  879,  880, 1237, 1247, 1336,  881, 1336,
     2445,  881,  880,  879, 1338,  879, 1338,  880,  880,  881,
     1247,  934,  878,  934,  881,  881, 1426,  934,  880,  877,
      880,  934, 1426,  934,  934,  881,  882,  881, 2446,  882,
      878, 1346, 1295, 1346,  937,  883,  937,  882,  883,  937,
      937, 1295,  882,  882,  937,  879,  883,  937, 1325, 1424,
      880,  883,  883,  882,  884,  882, 1325,  884, 1434, 1091,
     1295,  881,  883,  885,  883,  884,  885, 1091, 2447, 1424,
      884,  884, 1091, 1292,  885, 1434, 1435, 1093, 1093,  885,

      885,  884, 1362,  884, 1362, 1091,  886, 1292, 1438,  886,
      885, 1093,  885, 1325, 1435,  887,  882,  886,  887, 1438,
      883, 1292,  886,  886, 1093, 1093,  887, 1357, 1357,  884,
     1357,  887,  887,  886,  888,  886, 1522,  888,  889, 1522,
     1289,  889,  887, 1289,  887,  888,  938,  938,  938,  889,
      888,  888,  938,  885,  889,  889,  938,  890, 1289,  938,
      890,  888, 1433,  888, 1433,  889,  887,  889,  890, 1190,
     1485, 1300, 1190,  890,  890,  886,  886, 2450,  892, 1378,
     1300,  892, 1378, 1296,  890,  888,  890,  893,  889,  892,
      893, 1388, 1378, 1485,  892,  892, 1190, 1296,  893, 1300,

     1388, 1388,  889,  893,  893,  892, 1378,  892, 1949, 1309,
      890, 1296, 1309,  890,  893, 1463,  893, 1463, 1949,  890,
      891,  891,  891,  891,  891,  891,  891,  891,  891,  891,
      891,  891,  891,  891,  891,  891,  891,  891,  891,  891,
     1358, 1358,  892, 1358,  894, 2451, 1456,  894,  891,  891,
      891,  891,  891,  891, 1309,  894,  893, 1456, 1358, 1378,
      894,  894, 1465, 1119, 1119, 1119, 1119,  891,  891,  891,
      891,  894,  932,  894,  932, 1501, 1465,  895,  932, 1327,
      895,  932,  932, 1327, 1315,  932, 1044, 1315,  895, 1044,
     1119, 1327,  891,  895,  895, 1501, 1327, 1044,  891,  891,

      891,  891,  891, 1044,  895,  896,  895, 1432,  896,  897,
     1119, 1432,  897, 1044, 1310,  894,  896, 1514, 1354, 1458,
      897,  896,  896, 1310,  898,  897,  897,  898,  899, 1315,
     1514,  899,  896, 1044,  896,  898,  897, 1458,  897,  899,
      898,  898, 1310,  895,  899,  899, 1436,  895, 1354,  900,
     1354,  898,  900,  898, 1301,  899, 1192,  899,  901, 1192,
      900,  901, 1320, 1436, 1502,  900,  900,  896, 1301,  901,
     1436, 1320, 1311,  897,  901,  901,  900,  902,  900, 2024,
      902, 1467, 1301, 1192, 1502,  901, 1311,  901,  902,  898,
     1320, 1356, 1491,  902,  902, 1467,  899,  939,  903,  939,

     1311,  903,  904,  939,  902,  904,  902,  939,  900,  903,
      939, 1491, 1321,  904,  903,  903, 1479,  920,  904,  904,
      920, 1356,  901, 1356, 2024,  903, 1321,  903,  920,  904,
     1479,  904,  907,  920,  920,  907,  909, 1192, 1328,  909,
     1321,  902, 1328,  907,  920,  902,  920,  909,  907,  907,
     1328, 1482,  909,  909, 1020, 1328, 1020, 1482, 1519,  907,
     1020,  907,  903,  909, 1020,  909, 1440, 1020,  903,  920,
     1440, 1519,  904,  905,  905,  905,  905,  905,  905,  905,
      905,  905,  905,  905,  905,  905,  905,  905,  905,  905,
      905,  905,  905, 1364, 1364, 1364, 1364, 1488,  907, 1331,

      909,  905,  905,  905,  905,  905,  905, 1510,  910, 1510,
     1364,  910, 1453, 1331, 1488,  914, 1453, 2452,  914,  910,
      905,  905,  905,  905,  910,  910,  914, 1331,  936, 1457,
      936,  914,  914, 1457,  936,  910, 1462,  910,  936,  936,
     1462,  936,  914, 1531,  914, 2453, 1531, 1123, 1123, 1123,
     1123,  905,  905,  905,  905,  905,  906,  906,  906,  906,
      906,  906,  906,  906,  906,  906,  906,  906,  906,  906,
      906,  906,  906,  906,  906,  906, 2454,  914,  910, 1486,
      908,  908,  908,  908,  906,  906,  906,  906,  906,  906,
     1486,  908,  947,  947,  947,  947,  908,  908, 2455,  911,

     1495, 1489,  911,  906,  906,  906,  906,  908, 1464,  908,
      911, 1495, 1464, 2105,  912,  911,  911,  912, 1489,  947,
     2105, 1125, 1125, 1125, 1125,  912,  911, 1123,  911,  913,
      912,  912,  913, 1493,  906,  906,  906,  906,  906,  947,
      913,  912,  908,  912,  915,  913,  913,  915,  916, 1466,
      908,  916, 1503, 1466, 1493,  915,  913, 1503,  913,  916,
      915,  915,  911,  917,  916,  916,  917, 1373, 1373, 1373,
     1373,  915,  947,  915,  917,  916, 2456,  916,  918,  917,
      917,  918,  919, 1497,  913,  919, 1497,  912, 1811,  918,
      917, 1811,  917,  919,  918,  918, 1500,  921,  919,  919,

      921, 1125, 1484,  916,  915,  918, 1484,  918,  921,  919,
     1500,  919, 1507,  921,  921,  940,  922,  940,  917,  922,
     1330,  940, 2128, 2128,  921,  940,  921,  922,  940, 1330,
     1342, 1507,  922,  922, 1497,  942,  942,  942,  942,  940,
     1360,  919,  918,  922, 1342,  922,  942,  919, 1330,  943,
      943,  943,  943, 1496, 1360, 1332,  921, 1333, 1342, 1332,
      943, 1333,  942,  948,  948,  948,  948, 1332, 1360, 1333,
     1494, 1496, 1332,  922, 1333,  922,  943, 1487,  943,  922,
     1506, 1487,  942,  922, 1506, 1494,  922, 2145, 2145, 1494,
      948, 1504,  949,  949,  949,  949,  943,  949,  950,  950,

      950,  950, 1512,  949,  951,  951,  951,  951, 1504, 2457,
      948,  953,  953,  953,  953,  951, 1910, 1509, 1910,  949,
     1512,  949, 1508, 1317, 1317,  950,  955,  955,  955,  955,
     1508,  951, 1317,  951, 2458, 1317, 1509,  955,  953,  949,
     1317, 1547, 1508,  948, 1016,  950, 1016, 1547, 1515, 1016,
     1016,  951, 1515,  955, 1016,  955, 2459, 1016,  953,  958,
      958,  958,  958,  959,  959, 2019,  959,  955, 1518, 1317,
      958, 1516, 1350,  955,  959, 1516, 1518, 2019,  950,  959,
      959, 1350,  961,  961, 1520,  961,  958, 1517,  958, 1521,
      959,  953,  959,  961, 1381, 1381, 1381, 1381,  961,  961,

     1350, 1517,  966,  966, 1520,  966,  958,  966, 1521,  961,
     1021,  961, 1021,  966, 1786, 1350, 1021, 1021,  966,  966,
     1021,  967,  967, 1021,  967,  968,  968, 2060,  968,  966,
     2060,  966,  967, 1022, 1786, 1022,  968,  967,  967, 1022,
      958,  968,  968, 1022,  969,  969, 1022,  969,  967, 1786,
      967, 1437,  968, 1437,  968,  969, 1421, 1421, 1421, 1421,
      969,  969, 2460, 2461,  970,  970, 1023,  970, 1023, 1437,
     1437,  969, 1023,  969,  967,  970, 1023, 1023, 1525, 1023,
      970,  970,  969,  971,  971,  968,  971,  972,  972, 1525,
      972,  970, 1799,  970,  971, 1028, 1782, 1028,  972,  971,

      971, 1028, 1782,  972,  972, 1028,  973,  973, 1028,  973,
      971, 1513,  971, 1789,  972, 1513,  972,  973, 1799, 1789,
     2113, 1481,  973,  973, 1481, 1513,  970, 2113,  974,  974,
     1918,  974, 1918,  973,  971,  973, 2028,  975,  975,  974,
      975, 2033, 2103, 1784,  974,  974, 1827, 1535,  975, 1827,
     1535, 2103,  971,  975,  975,  974,  972,  974,  976,  976,
     1535,  976, 2139, 1784,  975,  973,  975,  977,  977,  976,
      977, 2139, 1481, 1827,  976,  976, 1481, 1054,  977, 1858,
     1054, 2028, 1858,  977,  977,  976, 2033,  976, 1784,  978,
      978,  974,  978, 2013,  977, 1054,  977, 2013,  979,  979,

      978,  979, 2167, 2462, 1054,  978,  978,  975, 1858,  979,
     1785, 1017, 2167, 1017,  979,  979,  978, 1017,  978, 1017,
     2115, 1017,  977,  976, 1017,  979, 2115,  979,  980,  980,
     1785,  980, 1920, 2095, 1920,  981,  981, 2095,  981,  980,
     1617, 1617, 1617, 1617,  980,  980,  981, 1664, 1664, 1664,
     1664,  981,  981, 1785, 1054,  980, 1026,  980, 2136,  978,
      982,  982,  981,  982,  981, 2114, 2136,  979,  979, 2114,
     1351,  982, 1026, 1924, 1026, 1924,  982,  982, 1026,  980,
      983,  983, 1026,  983, 1351, 1026,  981,  982, 2463,  982,
     1914,  983, 1221, 1221, 1221, 1221,  983,  983, 1351, 1914,

      985,  985, 1018,  985, 1018, 2466, 2485,  983, 1018,  983,
      982,  985, 1018, 1351, 2042, 1018,  985,  985, 1914, 1221,
     1952, 1018, 1019, 1913,  982, 1913, 2042,  985, 1019,  985,
     1019, 1952, 1952,  983, 1019, 2486,  983, 1952, 1019, 1019,
     1221, 1019,  983,  984,  984,  984,  984,  984,  984,  984,
      984,  984,  984,  984,  984,  984,  984,  984,  984,  984,
      984,  984,  984, 2487,  985, 1913, 1859,  986,  986, 1859,
      986,  984,  984,  984,  984,  984,  984, 1787,  986, 1118,
     1118, 1118, 1118,  986,  986, 1120, 1120, 1120, 1120, 2071,
      984,  984,  984,  984,  986, 1859,  986, 1787, 2071, 2071,

      987,  987, 1959,  987, 1959, 1961, 1118, 1961, 1118, 2072,
     1981,  987, 1120, 1981, 1120,  984,  987,  987, 2072, 2072,
     1787,  984,  984,  984,  984,  984, 1118,  987, 2131,  987,
      988,  988, 1120,  988, 2038, 2131,  986,  989,  989, 2038,
      989,  988, 1150, 1150, 1150, 1150,  988,  988,  989, 1668,
     1668, 1668, 1668,  989,  989, 1981, 2488,  988, 1533,  988,
     1915, 1533,  990,  990,  989,  990,  989, 1963, 2078, 1963,
     1030,  987, 1030,  990, 1915, 1030, 1030, 2489,  990,  990,
     1030,  991,  991, 1030,  991, 1533, 2129, 1533, 1915,  990,
     2129,  990,  991, 2490, 2078, 1150,  988,  991,  991,  989,

      988,  992,  992, 1027,  992, 1027, 2491, 1150,  991, 1027,
      991, 1150,  992, 1027, 1150, 1027, 1027,  992,  992, 1150,
      993,  993, 2132,  993,  994,  994,  990,  994,  992, 2492,
      992,  993, 1029, 2132, 1029,  994,  993,  993, 1029, 1955,
      994,  994, 1029, 1029, 1024, 1029,  991,  993, 1955,  993,
     1024,  994, 1024,  994,  995,  995, 1024,  995, 2134, 1390,
     1024, 2134, 2493, 1024, 1024,  995, 2150, 1955, 1024,  992,
      995,  995, 2150,  996,  996, 1965,  996, 1965, 1919,  993,
     1919,  995, 2494,  995,  996, 1390, 1798, 1390,  994,  996,
      996, 2137,  997,  997, 2137,  997, 1422, 1422, 1422, 1422,

      996, 1922,  996,  997, 1025, 1390, 1025, 1422,  997,  997,
     1025, 1390, 1798, 1025, 1025, 1922, 2495, 1025,  995,  997,
     1919,  997,  995, 1000, 1000, 1422, 1000, 1794, 1794, 1922,
     1003, 1003, 2160, 1003, 1000, 2133, 1794,  996, 2160, 1000,
     1000, 1003, 2133,  996, 1307, 1307, 1003, 1003, 1307, 2116,
     1000, 2116, 1000, 2076, 1794, 1794, 1307, 1003, 1798, 1003,
     1798, 1307,  997,  998,  998,  998,  998,  998,  998,  998,
      998,  998,  998,  998,  998,  998,  998,  998,  998,  998,
      998,  998,  998, 2076, 2149, 1347, 1347, 2149, 2496, 1000,
     1307,  998,  998,  998,  998,  998,  998, 1347, 2135, 2138,

     1003, 2151, 1347, 1002, 1002, 2135, 1002, 2138, 2151, 2076,
      998,  998,  998,  998, 1002, 1031, 1031, 1031, 2164, 1002,
     1002, 1031, 1308, 1308, 2164, 1031, 1308, 1032, 1031, 1032,
     1002, 1347, 1002, 1032, 1308, 1984, 2499, 1032, 1984, 1308,
     1032,  998,  998,  998,  998,  998,  999,  999,  999,  999,
      999,  999,  999,  999,  999,  999,  999,  999,  999,  999,
      999,  999,  999,  999,  999,  999, 2500, 1002, 1308, 1988,
     1001, 1001, 1988, 1001,  999,  999,  999,  999,  999,  999,
     1984, 1001, 1129, 1129, 1129, 1129, 1001, 1001, 1539, 1004,
     1004, 1539, 1004,  999,  999,  999,  999, 1001, 2185, 1001,

     1004, 2155, 2140, 2501, 1576, 1004, 1004, 1576, 2185, 1129,
     2140, 1129, 2155, 2148, 1988, 1539, 1004, 1539, 1004, 1005,
     1005, 2148, 1005, 1956,  999,  999,  999,  999,  999, 1129,
     1005, 1576, 1001, 1576, 2502, 1005, 1005, 1956, 1006, 1006,
     1001, 1006, 1007, 1007, 1129, 1007, 1005, 1600, 1005, 1006,
     1600, 1956, 1004, 1007, 1006, 1006, 1791, 2503, 1007, 1007,
     1791, 1008, 1008, 2159, 1008, 1006, 2159, 1006, 1791, 1007,
     2203, 1007, 1008, 1791, 1600, 2203, 1600, 1008, 1008, 1608,
     1009, 1009, 1608, 1009, 1010, 1010, 1791, 1010, 1008, 2169,
     1008, 1009, 1005, 1006, 2158, 1010, 1009, 1009, 2169, 1053,

     1010, 1010, 1053, 1800, 1007, 2158, 1608, 1009, 1608, 1009,
     1053, 1010, 2166, 1010, 1011, 1011, 1053, 1011, 2166, 2022,
     2022, 1008, 1365, 1365, 2153, 1011, 1053, 1365, 1365, 1800,
     1011, 1011, 2153, 1012, 1012, 1009, 1012, 1013, 1013, 1010,
     1013, 1011, 1365, 1011, 1012, 1033, 1053, 1033, 1013, 1012,
     1012, 1033, 2504, 1013, 1013, 1033, 1014, 1014, 1033, 1014,
     1012, 2156, 1012, 2156, 1013, 2022, 1013, 1014, 2165, 1033,
     2165, 2505, 1014, 1014, 2157, 1800, 1051, 1800, 1011, 1051,
     1053, 2170, 2157, 1014, 2170, 1014, 2171, 1051, 1079, 1013,
     1365, 1079, 1012, 1051, 1079, 2171, 1993, 2184, 1012, 1126,

     1126, 1126, 1126, 1051, 1993, 2184, 1079, 1127, 1127, 1127,
     1127, 1128, 1128, 1128, 1128, 1014, 1015, 1015, 2175, 1015,
     1079, 2175, 2506, 1051, 2168, 1792, 1126, 1015, 1126, 1792,
     1051, 2168, 1015, 1015, 1127, 2193, 1127, 1792, 1128, 1953,
     1128, 1993, 1792, 1015, 2193, 1015, 1126, 2170, 2172, 1128,
     1953, 1953, 1126, 2174, 1127, 1792, 1953, 2507, 1128, 2172,
     1130, 1130, 1130, 1130, 2174, 1079, 2173, 1127, 1131, 1131,
     1131, 1131, 2173, 1015, 2176, 1015, 1420, 1420, 2176, 1015,
     2195, 1420, 1420, 1015, 2195, 2180, 1015, 1130, 2180, 1130,
     1132, 1132, 1132, 1132, 2229, 1131, 1420, 1131, 2229, 1133,

     1133, 1133, 1133, 1134, 1134, 1134, 1134, 1130, 1222, 1222,
     1222, 1222, 1312, 1312, 2508, 1131, 1312, 1132, 2509, 1132,
     1135, 1135, 1135, 1135, 1312, 1130, 1133, 2187, 1133, 1312,
     1134, 1996, 1134, 2187, 2177, 1222, 1796, 1132, 1131, 1996,
     1796, 1132, 2194, 1957, 1420, 2177, 1133, 1135, 1796, 1135,
     1134, 2194, 2178, 1796, 1957, 1957, 1222, 2511, 1312, 2178,
     1957, 1313, 1313, 1133, 2000, 1313, 1796, 1135, 1825, 1825,
     1825, 1825, 2000, 1313, 1134, 2188, 1996, 2179, 1313, 1137,
     1137, 1137, 1137, 2188, 2179, 1135, 1136, 1136, 1136, 1136,
     1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136,

     1136, 1136, 1136, 1136, 1136, 1136, 1137, 1313, 1137, 2000,
     1138, 1138, 1138, 1138, 1136, 1136, 1136, 1136, 1136, 1136,
     1828, 1828, 1828, 1828, 2025, 2025, 1137, 1795, 1795, 1139,
     1139, 1139, 1139, 1136, 1136, 1136, 1136, 1138, 2207, 1138,
     2181, 1795, 1140, 1140, 1140, 1140, 2207, 2181, 1825, 1137,
     1141, 1141, 1141, 1141, 1795, 1795, 1139, 1138, 1139, 1142,
     1142, 1142, 1142, 2512, 1136, 1136, 1136, 1136, 1136, 1140,
     2025, 1140, 2186, 1958, 1138, 2186, 1139, 1141, 2206, 1141,
     1143, 1143, 1143, 1143, 1958, 1958, 1142, 2206, 1142, 1140,
     1958, 1139, 1144, 1144, 1144, 1144, 2183, 1141, 2191, 2513,

     1828, 2191, 1140, 2183, 1989, 1989, 1142, 1143, 1989, 1143,
     2189, 1145, 1145, 1145, 1145, 1141, 1142, 2189, 2192, 1144,
     2192, 1144, 1146, 1146, 1146, 1146, 2200, 1143, 1149, 1149,
     1149, 1149, 2202, 2200, 2202, 1142, 2001, 2001, 1145, 1144,
     1145, 1151, 1151, 1151, 1151, 2001, 2514, 2205, 1143, 1146,
     1989, 1146, 2030, 2030, 2205, 1149, 2198, 1149, 1145, 2034,
     2034, 1144, 2208, 1157, 1157, 1157, 1157, 2198, 2208, 1146,
     1145, 2036, 2036, 1145, 2036, 1149, 1225, 1225, 1225, 1225,
     1146, 1157, 2001, 1166, 1166, 1166, 1166, 1318, 1318, 2036,
     1616, 1616, 1616, 1616, 1151, 2204, 1318, 2199, 2030, 1318,

     2204, 1166, 2515, 1225, 1318, 2034, 1151, 2516, 2199, 1149,
     1151, 2037, 2037, 1151, 2037, 2190, 1157, 1616, 1151, 1616,
     1369, 1369, 1369, 1369, 1225, 2517, 2518, 2190, 1157, 2037,
     2190, 1369, 1157, 1318, 2519, 1157, 1166, 1322, 1322, 2006,
     1157, 1323, 1323, 2006, 2520, 2521, 1322, 1369, 1166, 1322,
     1323, 2006, 1166, 1323, 1322, 1166, 2006, 1225, 1323, 2526,
     1166, 1231, 1231, 2528, 1231, 1231, 1231, 1369, 1231, 1231,
     1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 2035, 2035, 1322, 2007, 1348, 1348, 1323, 2007, 1231,
     1231, 1231, 1231, 1231, 1231, 2212, 2007, 1348, 2212, 1449,

     1449, 2007, 1348, 2465, 1449, 1449, 2465, 2539, 1231, 2209,
     1231, 1231, 1248, 1248, 1248, 1248, 2209, 1352, 1352, 1449,
     1353, 1353, 1370, 1370, 1370, 1370, 2540, 2035, 2201, 1352,
     1248, 1348, 1353, 2201, 1352, 2541, 2201, 1353, 2201, 1231,
     1231, 1231, 1231, 1233, 1233, 2543, 1233, 1233, 1233, 1370,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1352, 2544, 1248, 1353, 1449, 2545, 1370,
     2542, 1233, 1233, 1233, 1233, 1233, 1233, 1248, 2548, 2549,
     2287, 1248, 2542, 2287, 1248, 2550, 2551, 1370, 2552, 1248,
     1233, 2213, 1233, 1233, 2213, 1274, 1274, 1274, 1274, 1384,

     2215, 1384, 1370, 2215, 1384, 1384, 1384, 1384, 1384, 1384,
     1384, 1384, 2215, 1274, 1830, 1830, 1830, 1830, 2213, 2553,
     2213, 1233, 1233, 1233, 1233, 1233, 1260, 1260, 1260, 1260,
     1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
     1260, 1260, 1260, 1260, 1260, 1260, 2287, 2554, 1274, 2555,
     1371, 1371, 1371, 1371, 1260, 1260, 1260, 1260, 1260, 1260,
     1274, 1371, 1371, 2556, 1274, 1371, 2557, 1274, 2044, 2044,
     2044, 2044, 1274, 1260, 1260, 1260, 1260, 1371, 1371, 1371,
     1377, 1389, 1389, 1389, 1389, 1389, 1389, 1389, 1389, 1377,
     1377, 1377, 1377, 1377, 1377, 1377, 1377, 1371, 1371, 2558,

     1831, 1831, 1831, 1831, 1260, 1260, 1260, 1260, 1260, 1372,
     1372, 1372, 1372, 1477, 1477, 1377, 1386, 2559, 1477, 1477,
     1372, 1372, 2560, 1386, 1372, 1386, 1386, 1386, 1386, 1386,
     1386, 1386, 1386, 1477, 2561, 2422, 1372, 1372, 1372, 2562,
     2373, 1386, 2564, 2373, 1377, 1396, 1396, 1396, 1396, 1669,
     1669, 1669, 1669, 2565, 2010, 2422, 1372, 1372, 2010, 2422,
     1669, 1386, 1418, 1418, 1418, 1418, 2010, 1846, 1846, 1846,
     1846, 2010, 1396, 1418, 2567, 1372, 1374, 1374, 1374, 1374,
     1831, 1477, 2569, 1397, 1397, 1397, 1397, 1374, 1374, 1418,
     2572, 1374, 1396, 1374, 1397, 1397, 1797, 2576, 1397, 2197,

     1797, 2423, 2197, 1374, 1374, 1374, 2373, 2429, 1797, 1418,
     1397, 1397, 1397, 1797, 2580, 2197, 2197, 1417, 1417, 1417,
     1417, 2423, 2563, 1374, 1374, 1396, 1797, 2582, 1417, 2423,
     1397, 1397, 2563, 2429, 2586, 1374, 1379, 1379, 1379, 1379,
     1419, 1419, 1419, 1419, 1417, 2432, 1417, 1846, 1379, 2587,
     2600, 1419, 2425, 2026, 2026, 1379, 1379, 1379, 1379, 1379,
     1379, 1379, 1379, 1379, 1417, 2026, 2424, 1419, 2604, 1419,
     2026, 2432, 2425, 1442, 1442, 1442, 1442, 1661, 1661, 1661,
     1661, 2606, 2607, 1379, 1442, 1442, 2424, 1419, 1442, 2433,
     2611, 2614, 1670, 1670, 1670, 1670, 2425, 2437, 2424, 2026,

     1442, 1442, 1442, 1670, 1661, 2618, 2619, 1443, 1443, 1443,
     1443, 1450, 1450, 1450, 1450, 2433, 1379, 1382, 1443, 1443,
     1442, 1442, 1443, 2437, 1661, 2577, 1382, 1382, 1382, 1382,
     1382, 1382, 1382, 1382, 1443, 1443, 2577, 2624, 1450, 2510,
     2631, 2510, 1382, 1382, 2510, 1382, 1671, 1671, 1671, 1671,
     1672, 1672, 1672, 1672, 1443, 1443, 2603, 1671, 1450, 2605,
     2603, 1672, 1382, 1382, 2065, 2065, 2065, 2065, 2438, 1382,
     1387, 2605, 2045, 2045, 2045, 2045, 1450, 1387, 2609, 1387,
     1387, 1387, 1387, 1387, 1387, 1387, 1387, 1994, 1994, 2045,
     1554, 1450, 2441, 1554, 2438, 1387, 1994, 1695, 1695, 1994,

     1695, 1554, 2649, 2650, 1994, 1387, 1554, 1554, 1695, 1468,
     1468, 1468, 1468, 1695, 1695, 1387, 2654, 1554, 2441, 1554,
     1468, 1468, 2655, 2609, 1468, 1478, 1478, 1478, 1478, 2046,
     2046, 2046, 2046, 1994, 1387, 1393, 1468, 1468, 1468, 2656,
     2046, 1554, 1393, 2442, 1393, 1393, 1393, 1393, 1393, 1393,
     1393, 1393, 1478, 2657, 2658, 2659, 1468, 1468, 1393, 1393,
     1393, 1393, 2085, 2085, 2530, 1393, 2530, 2085, 2085, 2442,
     2632, 2444, 1478, 2632, 2661, 2444, 1393, 1393, 1393, 1393,
     1393, 1393, 2085, 2608, 2608, 1470, 1470, 1470, 1470, 2617,
     1478, 1393, 1412, 1412, 1412, 1412, 1470, 1470, 2617, 1562,

     1470, 2444, 1562, 1412, 1412, 1478, 2530, 1412, 2217, 1412,
     1562, 2217, 1470, 1470, 1470, 1562, 1562, 2617, 2662, 1412,
     1412, 1412, 2663, 2664, 2217, 2217, 1562, 2665, 1562, 2608,
     2085, 2671, 1470, 1470, 2063, 2063, 2063, 2063, 2220, 1412,
     1412, 2220, 2703, 1412, 1427, 1427, 1427, 1427, 1427, 1427,
     1427, 1427, 1427, 1427, 1427, 1427, 1427, 1427, 1427, 1427,
     1427, 1427, 1427, 1427, 1562, 2220, 2694, 2220, 1471, 1471,
     1471, 1471, 1427, 1427, 1427, 1427, 1427, 1427, 1536, 1471,
     1471, 1536, 2670, 1471, 2064, 2064, 2064, 2064, 2675, 2694,
     1536, 1427, 1427, 1427, 1427, 1471, 1471, 1536, 1536, 1536,

     1536, 1536, 1536, 1536, 1536, 2067, 2067, 2067, 2067, 2067,
     2067, 2067, 2067, 2670, 2063, 1471, 1471, 2726, 2723, 2533,
     2675, 2533, 1427, 1427, 1427, 1427, 1427, 1461, 1461, 1461,
     1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
     1461, 1461, 1461, 1461, 1461, 1461, 1461, 2723, 2537, 2684,
     2537, 1526, 1526, 1526, 1526, 1461, 1461, 1461, 1461, 1461,
     1461, 2533, 1526, 1526, 2064, 2448, 1526, 2684, 2448, 2727,
     1527, 1527, 1527, 1527, 1461, 1461, 1461, 1461, 1526, 1526,
     1526, 1527, 1527, 1461, 2620, 1527, 1662, 1662, 1662, 1662,
     2537, 2742, 1665, 1665, 1665, 1665, 2620, 1527, 1527, 1526,

     1528, 1528, 1528, 1528, 2755, 1461, 1461, 1461, 1461, 1461,
     2693, 1528, 1528, 1662, 1534, 1528, 2660, 1534, 1527, 1665,
     2448, 2089, 2089, 2089, 2089, 1534, 2660, 1528, 1528, 1528,
     1534, 1534, 2089, 1662, 1663, 1663, 1663, 1663, 2756, 1665,
     1537, 1534, 2683, 1534, 2760, 1663, 2693, 1537, 1528, 1537,
     1537, 1537, 1537, 1537, 1537, 1537, 1537, 2683, 2538, 1995,
     1995, 1663, 2538, 1663, 2538, 1537, 1662, 1556, 1995, 2641,
     1556, 1995, 1665, 1534, 2712, 2254, 1995, 2254, 1556, 2127,
     2254, 1663, 2127, 1556, 1556, 1537, 1538, 1538, 1538, 1538,
     1538, 1538, 1538, 1538, 1556, 2310, 1556, 2712, 2310, 2641,

     1538, 1538, 1538, 1538, 2538, 1995, 1666, 1666, 1666, 1666,
     2254, 2310, 2310, 1555, 2610, 2610, 1555, 1666, 1538, 1538,
     1538, 1538, 1538, 1538, 1555, 2641, 2685, 2692, 1557, 1555,
     1555, 1557, 1558, 1666, 2127, 1558, 2642, 2685, 1556, 1557,
     1555, 2127, 1555, 1558, 1557, 1557, 2688, 1559, 1558, 1558,
     1559, 2497, 2692, 1666, 2497, 1557, 2762, 1557, 1559, 1558,
     2610, 1558, 1560, 1559, 1559, 1560, 2642, 2676, 1555, 2101,
     2101, 2101, 2101, 1560, 1559, 2431, 1559, 2688, 1560, 1560,
     2101, 2244, 1563, 2676, 2244, 1563, 2689, 2581, 2431, 1560,
     2581, 1560, 2642, 1563, 2763, 1998, 1998, 1557, 1563, 1563,

     2764, 2431, 2689, 1558, 1998, 2581, 2497, 1998, 2244, 1563,
     2244, 1563, 1998, 1829, 1829, 1829, 1829, 1559, 2701, 1560,
     1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
     1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
     1829, 1998, 1829, 2701, 1563, 2677, 2707, 2765, 1561, 1561,
     1561, 1561, 1561, 1561, 2690, 1564, 2697, 2677, 1564, 2340,
     1829, 2340, 1565, 2570, 2340, 1565, 1564, 1561, 1561, 1561,
     1561, 1564, 1564, 1565, 2570, 2570, 2697, 2707, 1565, 1565,
     2570, 2690, 1564, 2700, 1564, 1842, 1842, 1842, 1842, 1565,
     2590, 1565, 1566, 2590, 2340, 1566, 2766, 2700, 1561, 1561,

     1561, 1561, 1561, 1566, 2682, 2595, 1564, 1567, 1566, 1566,
     1567, 1568, 1842, 2595, 1568, 2695, 2682, 1565, 1567, 1566,
     2731, 1566, 1568, 1567, 1567, 2704, 1569, 1568, 1568, 1569,
     2672, 2695, 1842, 2672, 1567, 2590, 1567, 1569, 1568, 2704,
     1568, 1570, 1569, 1569, 1570, 1571, 2767, 1566, 1571, 2731,
     2595, 2678, 1570, 1569, 2571, 1569, 1571, 1570, 1570, 2768,
     1567, 1571, 1571, 2678, 1572, 2571, 2571, 1572, 1570, 2672,
     1570, 2571, 1571, 1573, 1571, 1572, 1573, 2678, 2732, 1568,
     1572, 1572, 2709, 2696, 1573, 2111, 2111, 2111, 2111, 1573,
     1573, 1572, 1570, 1572, 1574, 1569, 2111, 1574, 1571, 2696,

     1573, 1577, 1573, 2732, 1577, 1574, 2715, 2706, 2574, 1570,
     1574, 1574, 1577, 2709, 1571, 1571, 1570, 1577, 1577, 2574,
     2574, 1574, 2687, 1574, 1573, 2574, 1572, 2706, 1577, 1583,
     1577, 2739, 1583, 2068, 2687, 2130, 1584, 2715, 2130, 1584,
     1583, 2633, 2633, 2633, 2633, 1583, 1583, 1584, 2710, 1574,
     2739, 1585, 1584, 1584, 1585, 2130, 1583, 2130, 1583, 2068,
     2130, 2068, 1585, 1584, 2710, 1584, 1586, 1585, 1585, 1586,
     2593, 2593, 2708, 1587, 2593, 2769, 1587, 1586, 1585, 2068,
     1585, 1583, 1586, 1586, 1587, 2068, 2713, 1584, 1588, 1587,
     1587, 1588, 2708, 1586, 2771, 1586, 2472, 2130, 2472, 1588,

     1587, 2472, 1587, 2714, 1588, 1588, 1585, 1589, 1982, 1982,
     1589, 1590, 1982, 2713, 1590, 1588, 2593, 1588, 1589, 2714,
     1982, 2633, 1590, 1589, 1589, 1982, 2729, 1590, 1590, 1586,
     1591, 2472, 2730, 1591, 1589, 1587, 1589, 2705, 1590, 2711,
     1590, 1591, 2729, 1588, 2716, 2718, 1591, 1591, 2730, 2717,
     1593, 2602, 2705, 1593, 1982, 2602, 2711, 1591, 2746, 1591,
     1906, 1593, 1590, 2602, 2711, 2718, 1593, 1593, 2602, 1906,
     1906, 1906, 1906, 1906, 1906, 2716, 1589, 1593, 2746, 1593,
     2717, 1591, 1592, 1592, 1592, 1592, 1592, 1592, 1592, 1592,
     1592, 1592, 1592, 1592, 1592, 1592, 1592, 1592, 1592, 1592,

     1592, 1592, 2547, 2721, 2547, 1593, 1594, 2547, 2719, 1594,
     1592, 1592, 1592, 1592, 1592, 1592, 2772, 1594, 1834, 1834,
     1834, 1834, 1594, 1594, 2449, 1595, 2719, 2449, 1595, 1592,
     1592, 1592, 1592, 1594, 2721, 1594, 1595, 2547, 1592, 2724,
     1596, 1595, 1595, 1596, 2449, 1834, 2449, 1834, 2773, 2449,
     2737, 1596, 1595, 2724, 1595, 1597, 1596, 1596, 1597, 1594,
     1592, 1592, 1592, 1592, 1592, 1834, 1597, 1596, 2737, 1596,
     1598, 1597, 1597, 1598, 1601, 2735, 2636, 1601, 2722, 2636,
     1595, 1598, 1597, 2728, 1597, 1601, 1598, 1598, 2636, 1834,
     1601, 1601, 2735, 2774, 2734, 1609, 1911, 1598, 1609, 1598,

     1911, 1601, 1911, 1601, 1615, 1596, 1609, 1615, 1911, 2722,
     1597, 1609, 1609, 1911, 2728, 1615, 2775, 2802, 2725, 2073,
     1615, 1615, 1609, 1618, 1609, 2734, 1618, 1621, 2598, 2598,
     1621, 1615, 2725, 1615, 1618, 1598, 2720, 2598, 1621, 1618,
     1618, 2736, 1911, 1621, 1621, 2073, 1620, 2073, 2720, 1620,
     1618, 2733, 1618, 2836, 1621, 2736, 1621, 1620, 2613, 2613,
     2741, 2917, 1620, 1620, 1912, 2073, 2733, 2749, 1912, 1615,
     1912, 2073, 2741, 1620, 2598, 1620, 1912, 2738, 1621, 2749,
     2919, 1912, 1618, 1619, 1619, 1619, 1619, 1619, 1619, 1619,
     1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619,

     1619, 1619, 1619, 1620, 2613, 2744, 1717, 1717, 2738, 1717,
     1912, 1619, 1619, 1619, 1619, 1619, 1619, 1717, 1622, 2740,
     2744, 1622, 1717, 1717, 2498, 1623, 2920, 2498, 1623, 1622,
     1619, 1619, 1619, 1619, 1622, 1622, 1623, 2615, 2615, 1619,
     1624, 1623, 1623, 1624, 2498, 1622, 2498, 1622, 2740, 2498,
     2921, 1624, 1623, 2748, 1623, 1625, 1624, 1624, 1625, 2922,
     2753, 1619, 1619, 1619, 1619, 1619, 1625, 1624, 2748, 1624,
     2747, 1625, 1625, 1622, 1626, 1983, 1983, 1626, 1627, 1983,
     2753, 1627, 1625, 2615, 1625, 1626, 2747, 1983, 2770, 1627,
     1626, 1626, 1983, 2750, 1627, 1627, 2923, 1628, 2770, 1623,

     1628, 1626, 1624, 1626, 2752, 1627, 1629, 1627, 1628, 1629,
     1625, 2616, 2616, 1628, 1628, 2924, 2752, 1629, 2750, 2925,
     2754, 1983, 1629, 1629, 1628, 2930, 1628, 1630, 2931, 2932,
     1630, 2754, 2941, 1629, 1631, 1629, 2702, 1631, 1630, 2702,
     2942, 2074, 1626, 1630, 1630, 1631, 1627, 1628, 1986, 1986,
     1631, 1631, 1986, 2927, 1630, 1632, 1630, 2616, 1632, 1633,
     1986, 1631, 1633, 1631, 2943, 1986, 1632, 2074, 2945, 2074,
     1633, 1632, 1632, 2927, 1634, 1633, 1633, 1634, 1629, 2927,
     2929, 2933, 1632, 2946, 1632, 1634, 1633, 2074, 1633, 2947,
     1634, 1634, 2757, 2074, 1986, 2757, 1631, 1630, 2702, 1635,

     2929, 1634, 1635, 1634, 2929, 2948, 1636, 2933, 2935, 1636,
     1635, 2928, 2950, 2027, 2027, 1635, 1635, 1636, 1633, 2757,
     2951, 2757, 1636, 1636, 1632, 2027, 1635, 2952, 1635, 1637,
     2027, 2928, 1637, 1636, 2935, 1636, 1638, 2928, 1634, 1638,
     1637, 2953, 2954, 2031, 2031, 1637, 1637, 1638, 2937, 2612,
     2612, 1639, 1638, 1638, 1639, 2031, 1637, 2955, 1637, 2027,
     2031, 2612, 1639, 1638, 1635, 1638, 2612, 1639, 1639, 2944,
     1640, 2956, 2944, 1640, 2937, 2957, 2958, 1636, 1639, 2959,
     1639, 1640, 2960, 2926, 2980, 1641, 1640, 1640, 1641, 2031,
     2981, 2982, 1638, 2983, 2940, 2612, 1641, 1640, 2940, 1640,

     1637, 1641, 1641, 2926, 1642, 1916, 2989, 1642, 2990, 1916,
     2274, 1916, 1641, 2274, 1641, 1642, 2992, 1916, 2801, 1639,
     1642, 1642, 1916, 2801, 2940, 1643, 2926, 2801, 1643, 2993,
     2801, 1642, 1644, 1642, 1640, 1644, 1643, 2274, 2994, 2274,
     1641, 1643, 1643, 1644, 2110, 2110, 2110, 2110, 1644, 1644,
     2995, 1916, 1643, 1645, 1643, 2110, 1645, 2996, 2997, 1644,
     1646, 1644, 2998, 1646, 1645, 2274, 2999, 3000, 3001, 1645,
     1645, 1646, 2991, 2110, 1642, 2991, 1646, 1646, 3002, 3003,
     1645, 3004, 1645, 1647, 1643, 3005, 1647, 1646, 2759, 1646,
     1775, 2759, 1648, 1775, 1647, 1648, 1643, 3006, 3007, 1647,

     1647, 1775, 1644, 1648, 2759, 2759, 1645, 1775, 1648, 1648,
     1647, 1649, 1647, 3008, 1649, 3009, 3010, 1775, 3011, 1648,
     3012, 1648, 1649, 3013, 2107, 2107, 1646, 1649, 1649, 2107,
     2107, 3014, 1650, 3015, 3016, 1650, 3017, 1775, 1649, 1651,
     1649, 3018, 1651, 1650, 2107, 1775, 3024, 1648, 1650, 1650,
     1651, 3026, 1647, 3027, 3029, 1651, 1651, 1648, 2873, 1650,
     3030, 1650, 1652, 2873, 3031, 1652, 1651, 2873, 1651, 1653,
     2873, 3032, 1653, 1652, 3020, 1649, 3020, 3034, 1652, 1652,
     1653, 2634, 2634, 2634, 2634, 1653, 1653, 1650, 3035, 1652,
     1654, 1652, 2107, 1654, 1651, 3036, 1653, 1655, 1653, 3037,

     1655, 1654, 3038, 3025, 2639, 3039, 1654, 1654, 1655, 2043,
     2043, 2043, 2043, 1655, 1655, 3025, 3020, 1654, 1656, 1654,
     2043, 1656, 1657, 3040, 1655, 1657, 1655, 1652, 1653, 1656,
     2639, 3041, 2639, 1657, 1656, 1656, 2043, 3042, 1657, 1657,
     3043, 1658, 3023, 3044, 1658, 1656, 3023, 1656, 3023, 1657,
     2639, 1657, 1658, 3045, 1654, 3046, 2639, 1658, 1658, 3047,
     1659, 2634, 3049, 1659, 3052, 3054, 3055, 1655, 1658, 3057,
     1658, 1659, 1656, 1657, 3059, 3052, 1659, 1659, 3071, 1667,
     1667, 1667, 1667, 1673, 1673, 3079, 1673, 1659, 3023, 1659,
     1667, 3061, 1658, 3061, 1673, 2635, 2635, 2635, 2635, 1673,

     1673, 3081, 1674, 1674, 3087, 1674, 1667, 3062, 1667, 3062,
     1673, 3088, 1673, 1674, 3089, 3090, 2592, 2592, 1674, 1674,
     2592, 3091, 1659, 3092, 1675, 1675, 1667, 1675, 2592, 1674,
     3093, 1674, 3094, 2592, 1673, 1675, 2751, 2751, 2751, 2751,
     1675, 1675, 3095, 1676, 1676, 3096, 1676, 1677, 1677, 3097,
     1677, 1675, 3098, 1675, 1676, 3103, 3107, 1674, 1677, 1676,
     1676, 3107, 2592, 1677, 1677, 3109, 2699, 2699, 2699, 2699,
     1676, 3109, 1676, 3128, 1677, 2635, 1677, 1678, 1678, 1917,
     1678, 1679, 1679, 1917, 1679, 1917, 3111, 3111, 1678, 3129,
     3112, 1917, 1679, 1678, 1678, 1675, 1917, 1679, 1679, 1841,

     1841, 1841, 1841, 3112, 1678, 2699, 1678, 3108, 1679, 3134,
     1679, 3117, 1676, 1684, 1684, 3110, 1684, 3108, 1677, 3117,
     1723, 1723, 3110, 1723, 1684, 1917, 1841, 3133, 1841, 1684,
     1684, 1723, 2323, 2323, 2323, 2323, 1723, 1723, 1679, 3133,
     1684, 3116, 1684, 2323, 3153, 3116, 1841, 1678, 1680, 1680,
     1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680,
     1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680, 1684, 3154,
     2435, 3113, 1681, 1681, 2435, 1681, 1680, 1680, 1680, 1680,
     1680, 1680, 2435, 1681, 3113, 3135, 3114, 2435, 1681, 1681,
     3135, 1682, 1682, 3114, 1682, 1680, 1680, 1680, 1680, 1681,

     2435, 1681, 1682, 3124, 2597, 2597, 3124, 1682, 1682, 2047,
     2047, 2047, 2047, 2597, 3118, 3118, 2597, 2640, 1682, 3143,
     1682, 2597, 1683, 1683, 3143, 1683, 1680, 1680, 1680, 1680,
     1680, 1685, 1685, 1683, 1685, 3165, 2047, 1681, 1683, 1683,
     3138, 3053, 1685, 2640, 3053, 2640, 3172, 1685, 1685, 1683,
     2597, 1683, 3138, 1682, 1686, 1686, 2047, 1686, 1685, 3053,
     1685, 1687, 1687, 2640, 1687, 1686, 3120, 3119, 3125, 2640,
     1686, 1686, 1687, 1683, 3119, 3125, 3120, 1687, 1687, 3122,
     3122, 1686, 3173, 1686, 1688, 1688, 1685, 1688, 1687, 2798,
     1687, 3123, 2798, 1689, 1689, 1688, 1689, 3174, 3140, 3123,

     1688, 1688, 3126, 3177, 1689, 2691, 3140, 1686, 2691, 1689,
     1689, 1688, 3126, 1688, 1690, 1690, 2798, 1690, 2798, 3145,
     1689, 3051, 1689, 1691, 1691, 1690, 1691, 3178, 3145, 1687,
     1690, 1690, 3051, 3051, 1691, 3136, 3139, 3136, 3051, 1691,
     1691, 1690, 2798, 1690, 1689, 3121, 1692, 1692, 3139, 1692,
     1691, 3146, 1691, 1688, 3121, 2691, 3121, 1692, 2798, 3146,
     2691, 1689, 1692, 1692, 2691, 3132, 3137, 1690, 1689, 3132,
     3179, 1693, 1693, 1692, 1693, 1692, 3137, 3142, 1694, 1694,
     3142, 1694, 1693, 1690, 1690, 1691, 3180, 1693, 1693, 1694,
     3073, 3073, 3073, 3073, 1694, 1694, 3181, 1692, 1693, 3150,

     1693, 1696, 1696, 3141, 1696, 1694, 3150, 1694, 1700, 1700,
     2436, 1700, 1696, 3151, 2436, 3141, 3182, 1696, 1696, 1700,
     3151, 3144, 2436, 3144, 1700, 1700, 1693, 2436, 1696, 3148,
     1696, 3147, 3147, 3183, 3148, 1700, 3149, 1700, 1701, 1701,
     2436, 1701, 1702, 1702, 3149, 1702, 3156, 3184, 3155, 1701,
     3159, 3156, 3159, 1702, 1701, 1701, 3155, 3185, 1702, 1702,
     1700, 1703, 1703, 3186, 1703, 1701, 3187, 1701, 3162, 1702,
     3073, 1702, 1703, 2621, 2621, 2621, 2621, 1703, 1703, 3157,
     3188, 3162, 1704, 1704, 2621, 1704, 3194, 3157, 1703, 1701,
     1703, 1705, 1705, 1704, 1705, 3169, 3169, 1702, 1704, 1704,

     3170, 3170, 1705, 2048, 2048, 2048, 2048, 1705, 1705, 1704,
     3196, 1704, 1706, 1706, 2048, 1706, 1707, 1707, 1705, 1707,
     1705, 3197, 3158, 1706, 1703, 3158, 3163, 1707, 1706, 1706,
     2048, 3219, 1707, 1707, 3163, 3160, 3220, 1708, 1708, 1706,
     1708, 1706, 3160, 1707, 1704, 1707, 1705, 3166, 1708, 3164,
     2048, 3223, 3171, 1708, 1708, 3166, 3164, 1710, 1710, 3171,
     1710, 3256, 3309, 3310, 1708, 2531, 1708, 1707, 1710, 2531,
     3311, 2531, 3158, 1710, 1710, 3313, 3314, 2531, 3315, 3320,
     3321, 1706, 2531, 3322, 1710, 3323, 1710, 3325, 1708, 1709,
     1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,

     1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 3326,
     3327, 2531, 1710, 1711, 1711, 3328, 1711, 1709, 1709, 1709,
     1709, 1709, 1709, 3329, 1711, 1832, 1832, 1832, 1832, 1711,
     1711, 3318, 1712, 1712, 3330, 1712, 1709, 1709, 1709, 1709,
     1711, 3324, 1711, 1712, 3324, 1709, 3331, 2412, 1712, 1712,
     2412, 3318, 1832, 3332, 1832, 3316, 3333, 3334, 2412, 1712,
     3317, 1712, 1713, 1713, 2412, 1713, 1711, 1709, 1709, 1709,
     1709, 1709, 1832, 1713, 2412, 3316, 1832, 3340, 1713, 1713,
     3317, 1714, 1714, 3316, 1714, 1715, 1715, 1712, 1715, 1713,
     3191, 1713, 1714, 3191, 2412, 3341, 1715, 1714, 1714, 3353,

     2412, 1715, 1715, 3317, 1716, 1716, 3354, 1716, 1714, 3355,
     1714, 3358, 1715, 3359, 1715, 1716, 3360, 3191, 3361, 3191,
     1716, 1716, 3319, 2112, 2112, 2112, 2112, 1713, 3362, 1718,
     1718, 1716, 1718, 1716, 2112, 3363, 1714, 3364, 1722, 1722,
     1718, 1722, 3319, 3365, 3218, 1718, 1718, 3218, 3366, 1722,
     1715, 3367, 2112, 3368, 1722, 1722, 1718, 3319, 1718, 1724,
     1724, 3369, 1724, 1728, 1728, 1722, 1728, 1722, 3370, 3371,
     1724, 3218, 3372, 3218, 1728, 1724, 1724, 2440, 3373, 1728,
     1728, 2440, 1729, 1729, 3374, 1729, 1724, 3375, 1724, 2440,
     1728, 3376, 1728, 1729, 2440, 2125, 2125, 3218, 1729, 1729,

     2125, 2125, 3377, 3378, 3379, 1731, 1731, 2440, 1731, 1729,
     3380, 1729, 3381, 3218, 3383, 2125, 1731, 3384, 3385, 2532,
     3386, 1731, 1731, 2532, 3387, 2532, 3388, 3389, 1728, 3390,
     3391, 2532, 1731, 3392, 1731, 3393, 2532, 2058, 2058, 2058,
     2058, 1729, 1730, 1730, 1730, 1730, 1730, 1730, 1730, 1730,
     1730, 1730, 1730, 1730, 1730, 1730, 1730, 1730, 1730, 1730,
     1730, 1730, 1731, 2125, 2058, 2532, 1732, 1732, 3394, 1732,
     1730, 1730, 1730, 1730, 1730, 1730, 3395, 1732, 1833, 1833,
     1833, 1833, 1732, 1732, 2058, 1733, 1733, 3396, 1733, 1730,
     1730, 1730, 1730, 1732, 3397, 1732, 1733, 3400, 1730, 3398,

     3335, 1733, 1733, 3335, 3420, 1833, 3409, 1833, 2622, 2622,
     2622, 2622, 1733, 3398, 1733, 1734, 1734, 1732, 1734, 2622,
     1730, 1730, 1730, 1730, 1730, 1833, 1734, 3335, 3421, 3422,
     3423, 1734, 1734, 1833, 1735, 1735, 3424, 1735, 1736, 1736,
     1733, 1736, 1734, 3425, 1734, 1735, 3426, 3427, 3428, 1736,
     1735, 1735, 3429, 3430, 1736, 1736, 3432, 1737, 1737, 3409,
     1737, 1735, 3446, 1735, 3448, 1736, 2080, 1736, 1737, 3448,
     2080, 3449, 2080, 1737, 1737, 2080, 2080, 2080, 2080, 2080,
     2080, 2080, 2080, 3450, 1737, 3434, 1737, 1738, 1738, 1734,
     1738, 1739, 1739, 1736, 1739, 3442, 1735, 3435, 1738, 3442,

     3434, 3452, 1739, 1738, 1738, 2939, 3439, 1739, 1739, 2939,
     1740, 1740, 3435, 1740, 1738, 3453, 1738, 2939, 1739, 3439,
     1739, 1740, 2939, 3436, 3453, 1737, 1740, 1740, 3438, 1741,
     1741, 3444, 1741, 1742, 1742, 2939, 1742, 1740, 3436, 1740,
     1741, 1739, 3444, 3438, 1742, 1741, 1741, 3440, 3440, 1742,
     1742, 3455, 3456, 3455, 2918, 1738, 1741, 2918, 1741, 3456,
     1742, 3451, 1742, 1743, 1743, 2918, 1743, 1744, 1744, 3465,
     1744, 2918, 3401, 3401, 1743, 3401, 3451, 3467, 1744, 1743,
     1743, 2918, 1740, 1744, 1744, 3460, 1745, 1745, 3468, 1745,
     1743, 3457, 1743, 3457, 1744, 1742, 1744, 1745, 3460, 1741,

     3443, 2918, 1745, 1745, 3443, 3474, 1746, 1746, 3445, 1746,
     3458, 3463, 3445, 1745, 3463, 1745, 2918, 1746, 2651, 2651,
     2651, 2651, 1746, 1746, 3481, 3458, 1744, 1747, 1747, 2651,
     1747, 3464, 1743, 1746, 3470, 1746, 1748, 1748, 1747, 1748,
     3473, 3475, 3469, 1747, 1747, 3470, 3484, 1748, 3475, 3473,
     1745, 3464, 1748, 1748, 1747, 3469, 1747, 1749, 1749, 3075,
     1749, 1750, 1750, 1748, 1750, 1748, 3463, 3476, 1749, 3478,
     3478, 1746, 1750, 1749, 1749, 3471, 3476, 1750, 1750, 3485,
     2332, 2332, 3486, 2332, 1749, 3075, 1749, 3075, 1750, 3471,
     1750, 2332, 1751, 1751, 3487, 1751, 2332, 2332, 1747, 1752,

     1752, 3483, 1752, 1751, 3483, 3075, 3483, 1748, 1751, 1751,
     1752, 3075, 3488, 1749, 3489, 1752, 1752, 3490, 3076, 1751,
     3491, 1751, 1753, 1753, 3492, 1753, 1752, 3493, 1752, 1750,
     3483, 1754, 1754, 1753, 1754, 3494, 3495, 3511, 1753, 1753,
     3512, 3472, 1754, 3472, 3076, 3472, 3076, 1754, 1754, 1753,
     3514, 1753, 1755, 1755, 1752, 1755, 1751, 3570, 1754, 3572,
     1754, 2535, 3575, 1755, 3076, 2535, 3576, 2535, 1755, 1755,
     3076, 1756, 1756, 2535, 1756, 3579, 3580, 3582, 2535, 1755,
     3583, 1755, 1756, 3459, 3459, 3459, 3459, 1756, 1756, 3578,
     1754, 3584, 1753, 3586, 1757, 1757, 3587, 1757, 1756, 3588,

     1756, 3595, 1754, 1758, 1758, 1757, 1758, 2535, 3596, 3578,
     1757, 1757, 3597, 3598, 1758, 3462, 3462, 3578, 3462, 1758,
     1758, 1757, 1755, 1757, 1756, 1759, 1759, 3599, 1759, 3600,
     1758, 3601, 1758, 3602, 1760, 1760, 1759, 1760, 3603, 3604,
     3605, 1759, 1759, 3606, 3607, 1760, 1837, 1837, 1837, 1837,
     1760, 1760, 1759, 3608, 1759, 3609, 2049, 2049, 2049, 2049,
     1757, 1760, 3610, 1760, 3611, 1761, 1761, 2049, 1761, 3612,
     3462, 3613, 1758, 1837, 3614, 1837, 1761, 3615, 3616, 3617,
     1759, 1761, 1761, 2049, 1762, 1762, 3618, 1762, 1763, 1763,
     1759, 1763, 1761, 1837, 1761, 1762, 3619, 3620, 1760, 1763,

     1762, 1762, 3621, 2049, 1763, 1763, 3589, 1764, 1764, 3589,
     1764, 1762, 3622, 1762, 1837, 1763, 3623, 1763, 1764, 3624,
     1761, 3625, 3626, 1764, 1764, 3633, 3639, 1765, 1765, 3640,
     1765, 3641, 3628, 3589, 1764, 3628, 1764, 3642, 1765, 1762,
     3643, 3644, 3645, 1765, 1765, 3646, 1766, 1766, 3647, 1766,
     3628, 3410, 3648, 1763, 1765, 3649, 1765, 1766, 2052, 2052,
     2052, 2052, 1766, 1766, 3658, 3656, 1764, 1767, 1767, 3654,
     1767, 1768, 1768, 1766, 1768, 1766, 3654, 3410, 1767, 3410,
     3656, 3659, 1768, 1767, 1767, 2052, 3650, 1768, 1768, 3627,
     3627, 1765, 3627, 3653, 1767, 3650, 1767, 3410, 1768, 3663,

     1768, 1769, 1769, 3410, 1769, 2052, 3667, 3653, 1770, 1770,
     3670, 1770, 1769, 3655, 3671, 3672, 1766, 1769, 1769, 1770,
     3680, 1767, 1768, 2052, 1770, 1770, 3655, 3657, 1769, 3657,
     1769, 1835, 1835, 1835, 1835, 1770, 3681, 1770, 2052, 1836,
     1836, 1836, 1836, 3682, 1838, 1838, 1838, 1838, 1839, 1839,
     1839, 1839, 1769, 3683, 1840, 1840, 1840, 1840, 1835, 3684,
     1835, 1843, 1843, 1843, 1843, 3685, 1836, 3693, 1836, 3686,
     1770, 1838, 3688, 1838, 3691, 1839, 3688, 1839, 1835, 3678,
     3678, 1840, 3686, 1840, 3691, 3696, 1836, 3697, 1843, 3687,
     1843, 1838, 3692, 1835, 1836, 1839, 1847, 1847, 1847, 1847,

     1839, 1840, 3689, 3687, 3698, 1840, 3689, 3692, 1843, 1848,
     1848, 1848, 1848, 1838, 3699, 1849, 1849, 1849, 1849, 1850,
     1850, 1850, 1850, 1847, 3700, 1847, 3701, 3702, 1851, 1851,
     1851, 1851, 1853, 1853, 1853, 1853, 1848, 3703, 1848, 3704,
     3712, 3713, 1849, 1847, 1849, 3719, 1850, 3721, 1850, 1852,
     1852, 1852, 1852, 1847, 3722, 1851, 1848, 1851, 3742, 1853,
     3752, 1853, 1849, 3753, 3755, 3756, 1850, 3759, 2646, 2646,
     1849, 1848, 3760, 2646, 2646, 1851, 1852, 3411, 1852, 1853,
     1854, 1854, 1854, 1854, 3761, 3762, 3763, 1850, 2646, 3022,
     3764, 1853, 1851, 3022, 3765, 3022, 1852, 1855, 1855, 1855,

     1855, 3022, 3766, 3411, 1852, 3411, 3022, 1854, 3767, 1854,
     3768, 1856, 1856, 1856, 1856, 3769, 1857, 1857, 1857, 1857,
     3770, 3772, 3773, 3411, 1855, 3774, 1855, 1854, 3775, 3411,
     2057, 2057, 2057, 2057, 3776, 3022, 2646, 3776, 1856, 1854,
     1856, 3777, 2057, 1857, 1855, 1857, 3784, 3342, 3342, 3342,
     3342, 1855, 3776, 2053, 2053, 2053, 2053, 2057, 1856, 3791,
     2056, 3792, 1856, 1857, 2053, 2053, 3793, 1857, 2053, 2056,
     2056, 2056, 2056, 2056, 2056, 2056, 2056, 2057, 3795, 3797,
     2053, 2053, 2053, 3802, 3803, 2086, 2086, 2086, 2086, 3807,
     3812, 3312, 3312, 3312, 3312, 2056, 2109, 2109, 2109, 2109,

     2053, 2053, 2054, 2054, 2054, 2054, 3816, 2109, 3634, 3634,
     3634, 3634, 2086, 2054, 2054, 3817, 3822, 2054, 3312, 2322,
     2322, 2322, 2322, 2109, 2056, 3823, 2069, 3342, 3819, 2054,
     2054, 2054, 2086, 2069, 3824, 2069, 2069, 2069, 2069, 2069,
     2069, 2069, 2069, 2109, 3819, 3716, 2322, 3825, 3716, 2054,
     2054, 2069, 2081, 2081, 2081, 2081, 3754, 2054, 2055, 2055,
     2055, 2055, 3413, 2081, 2081, 2086, 2322, 2081, 3312, 2055,
     2055, 2069, 3716, 2055, 3716, 2055, 3754, 3805, 3826, 2081,
     2081, 2081, 2523, 3754, 3827, 2055, 2055, 2055, 3413, 3828,
     3413, 2523, 2523, 2523, 2523, 2523, 2523, 3805, 3800, 2081,

     2081, 3787, 3787, 3787, 3787, 2055, 2055, 3829, 3413, 2082,
     2082, 2082, 2082, 3800, 3413, 2126, 2126, 2126, 2126, 3808,
     2082, 2082, 3801, 3796, 2082, 3796, 3801, 2055, 2059, 2059,
     2059, 2059, 2652, 2652, 2652, 2652, 2082, 2082, 3830, 3808,
     2059, 3810, 2126, 2652, 3810, 3832, 3833, 2059, 2059, 2059,
     2059, 2059, 2059, 2059, 2059, 2059, 2082, 2082, 2083, 2083,
     2083, 2083, 2126, 2666, 2666, 2666, 2666, 3836, 3834, 2083,
     2083, 3840, 3841, 2083, 2666, 2059, 3842, 3839, 2216, 3839,
     2126, 2216, 3834, 3843, 3844, 2083, 2083, 2083, 3836, 3848,
     2216, 3352, 3352, 3352, 3352, 2126, 3810, 2216, 2216, 2216,

     2216, 2216, 2216, 2216, 2216, 2083, 2083, 3849, 2059, 2061,
     2061, 2061, 2061, 3835, 3864, 3865, 2464, 2464, 2464, 2464,
     3866, 2061, 3867, 3573, 3573, 3573, 3573, 3835, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2118, 2118, 2118,
     2118, 3869, 3870, 2464, 3814, 2464, 3871, 3814, 2118, 2118,
     3573, 3872, 2118, 3873, 3874, 3814, 2061, 3875, 3876, 2119,
     2119, 2119, 2119, 2464, 2118, 2118, 2118, 3877, 3352, 3878,
     2119, 2119, 3879, 3814, 2119, 3880, 2467, 2467, 2467, 2467,
     2667, 2667, 2667, 2667, 2118, 2118, 2119, 2119, 3881, 2061,
     2066, 2667, 3882, 2066, 3891, 2469, 2469, 2469, 2469, 3883,

     3573, 3894, 2066, 2467, 3896, 2467, 2119, 2119, 3883, 2066,
     2066, 2066, 2066, 2066, 2066, 2066, 2066, 2066, 2141, 2141,
     2141, 2141, 2469, 2467, 2469, 2142, 2142, 2142, 2142, 2141,
     2141, 3900, 3905, 2141, 3895, 3909, 2142, 2142, 2218, 3910,
     2142, 2218, 2469, 3924, 3933, 2141, 2141, 2141, 2469, 3895,
     2218, 3911, 2142, 2142, 3898, 3934, 3935, 2218, 2218, 2218,
     2218, 2218, 2218, 2218, 2218, 2141, 2141, 3911, 3898, 3936,
     2066, 2070, 2142, 2142, 3694, 3937, 3938, 3694, 2070, 3694,
     2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 3939, 3941,
     2161, 2161, 2161, 2161, 3930, 3940, 2070, 2240, 3940, 3943,

     2240, 2161, 2161, 3694, 2214, 2161, 2070, 2214, 2240, 3945,
     3930, 3949, 3947, 2240, 2240, 2214, 2070, 2161, 2161, 2161,
     2214, 2214, 3953, 3954, 2240, 3942, 2240, 2468, 2468, 2468,
     2468, 2214, 3947, 2214, 3955, 2070, 2077, 2161, 2161, 3960,
     3942, 3975, 3944, 2077, 3950, 2077, 2077, 2077, 2077, 2077,
     2077, 2077, 2077, 3977, 2468, 3978, 2468, 3944, 3979, 2077,
     2077, 2077, 2077, 2240, 3950, 3980, 2077, 3785, 3785, 3785,
     3785, 3981, 3908, 2214, 2468, 3908, 3987, 2077, 2077, 2077,
     2077, 2077, 2077, 3908, 2986, 2986, 2986, 2986, 3988, 2468,
     3989, 3990, 2077, 2079, 2079, 2079, 2079, 2079, 2079, 2079,

     2079, 3908, 3082, 3082, 3082, 3082, 3995, 2079, 2079, 2079,
     2079, 3952, 2986, 3082, 2986, 3952, 3996, 2623, 2623, 2623,
     2623, 3999, 4002, 4021, 4022, 2079, 2079, 2079, 2079, 2079,
     2079, 2102, 2102, 2102, 2102, 4023, 4024, 4002, 2162, 2162,
     2162, 2162, 2102, 2102, 2623, 4025, 2102, 3785, 2102, 2162,
     2162, 3921, 2986, 2162, 3921, 4026, 4028, 4036, 2102, 2102,
     2102, 2986, 3921, 4037, 2623, 2162, 2162, 2644, 2644, 2644,
     2644, 2644, 2644, 2644, 2644, 4039, 4014, 4035, 2102, 2102,
     3083, 3083, 3083, 3083, 4035, 2162, 2162, 2473, 2473, 2473,
     2473, 3083, 4014, 2102, 2146, 2146, 2146, 2146, 2146, 2146,

     2146, 2146, 2146, 2146, 2146, 2146, 2146, 2146, 2146, 2146,
     2146, 2146, 2146, 2146, 2473, 4054, 2473, 4055, 2477, 2477,
     2477, 2477, 2146, 2146, 2146, 2146, 2146, 2146, 3084, 3084,
     3084, 3084, 4029, 4052, 2473, 2236, 4052, 4029, 2236, 3084,
     4057, 2146, 2146, 2146, 2146, 2477, 2236, 2477, 3068, 3068,
     4030, 2236, 2236, 3068, 3068, 4031, 4031, 2473, 3085, 3085,
     3085, 3085, 2236, 4030, 2236, 2477, 4061, 4062, 3068, 3085,
     4065, 2477, 2146, 2146, 2146, 2146, 2146, 2147, 2147, 2147,
     2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147,
     2147, 2147, 2147, 2147, 2147, 2147, 2147, 2236, 4066, 4067,

     3929, 2237, 4086, 3929, 2237, 2147, 2147, 2147, 2147, 2147,
     2147, 3929, 2237, 4071, 4068, 4087, 3068, 2237, 2237, 4038,
     2242, 4088, 4038, 2242, 2147, 2147, 2147, 2147, 2237, 4071,
     2237, 2242, 4089, 2643, 4068, 2643, 2242, 2242, 2643, 2643,
     2643, 2643, 2643, 2643, 2643, 2643, 4038, 2242, 4038, 2242,
     3897, 4090, 4091, 3897, 2237, 2147, 2147, 2147, 2147, 2147,
     2154, 2154, 2154, 2154, 4073, 2238, 4096, 3994, 2238, 4097,
     3994, 2154, 2154, 4104, 2241, 2154, 2238, 2241, 3994, 3897,
     4073, 2238, 2238, 4102, 2242, 2241, 4102, 2154, 2154, 2154,
     2241, 2241, 2238, 4105, 2238, 3099, 3099, 3099, 3099, 4027,

     4108, 2241, 4027, 2241, 4109, 3897, 3099, 2154, 2154, 2673,
     2673, 2673, 2673, 4115, 4093, 2154, 2182, 2182, 2182, 2182,
     2238, 2239, 4078, 4006, 2239, 4078, 4006, 2182, 2182, 4093,
     2245, 2182, 2239, 2245, 4006, 4116, 2673, 2239, 2239, 4129,
     4130, 2245, 2241, 2182, 2182, 2182, 2245, 2245, 2239, 4131,
     2239, 4078, 4027, 4132, 4134, 2255, 2673, 2245, 2255, 2245,
     4135, 4142, 2252, 2182, 2182, 2252, 2255, 4128, 4027, 2182,
     4128, 2255, 2255, 2252, 4092, 4143, 4092, 4051, 2252, 2252,
     4051, 4144, 2255, 4133, 2255, 2182, 2219, 4133, 4051, 2252,
     2239, 2252, 4145, 2219, 4150, 2219, 2219, 2219, 2219, 2219,

     2219, 2219, 2219, 4151, 4157, 4158, 4159, 4157, 4160, 2219,
     2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219,
     2219, 2219, 4162, 2252, 2255, 4163, 4168, 2219, 2219, 2219,
     2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219,
     2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219,
     2219, 2219, 2219, 2251, 2251, 2251, 2251, 2251, 2251, 2251,
     2251, 2251, 2251, 2251, 2251, 2251, 2251, 2251, 2251, 2251,
     2251, 2251, 2251, 3074, 3074, 3074, 3074, 3074, 3074, 3074,
     3074, 2251, 2251, 2251, 2251, 2251, 2251, 4084, 2253, 4169,
     4084, 2253, 4170, 4161, 4174, 2256, 4175, 4176, 2256, 2253,

     2251, 2251, 2251, 2251, 2253, 2253, 2256, 4161, 4177, 2251,
     2257, 2256, 2256, 2257, 4181, 2253, 4084, 2253, 4182, 4183,
     4184, 2257, 2256, 4177, 2256, 2258, 2257, 2257, 2258, 4185,
     4187, 2251, 2251, 2251, 2251, 2251, 2258, 2257, 4188, 2257,
     2259, 2258, 2258, 2259, 2260, 4189, 2253, 2260, 4190, 4191,
     4192, 2259, 2258, 2124, 2258, 2260, 2259, 2259, 2120, 2261,
     2260, 2260, 2261, 2262, 2108, 2257, 2262, 2259, 2256, 2259,
     2261, 2260, 2106, 2260, 2262, 2261, 2261, 2104, 4076, 2262,
     2262, 4076, 2263, 2100, 2258, 2263, 2261, 2099, 2261, 4076,
     2262, 2098, 2262, 2263, 4103, 2259, 2097, 4103, 2263, 2263,

     3786, 3786, 3786, 3786, 2096, 2264, 4103, 4138, 2264, 2263,
     4138, 2263, 2265, 2094, 2260, 2265, 2264, 2093, 2261, 4138,
     4271, 2264, 2264, 2265, 2092, 4271, 4271, 2266, 2265, 2265,
     2266, 4373, 2264, 2262, 2264, 2091, 4373, 4373, 2266, 2265,
     2090, 2265, 2088, 2266, 2266, 2087, 3100, 3100, 3100, 3100,
     2084, 4371, 2269, 2263, 2266, 2269, 2266, 3100, 2075, 4371,
     2062, 3253, 3253, 2269, 3253, 4371, 2051, 4371, 2269, 2269,
     2041, 2040, 3253, 4113, 2265, 2264, 4113, 3253, 3253, 2269,
     3786, 2269, 2039, 2032, 4113, 2474, 2474, 2474, 2474, 2029,
     2266, 2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267,

     2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267,
     2267, 2269, 2474, 4139, 2474, 4140, 4139, 2023, 4140, 2267,
     2267, 2267, 2267, 2267, 2267, 4139, 2270, 4140, 2020, 2270,
     2018, 2017, 2474, 2272, 2016, 2014, 2272, 2270, 2267, 2267,
     2267, 2267, 2270, 2270, 2272, 2012, 4374, 2474, 2008, 2272,
     2272, 4374, 4374, 2270, 2005, 2270, 3417, 3417, 3417, 3417,
     2272, 2003, 2272, 3984, 3984, 3984, 3984, 3417, 1991, 2267,
     2267, 2267, 2267, 2267, 2268, 2268, 2268, 2268, 2268, 2268,
     2268, 2268, 2268, 2268, 2268, 2268, 2268, 2268, 2268, 2268,
     2268, 2268, 2268, 2268, 2270, 2272, 1979, 3418, 3418, 3418,

     3418, 1977, 2268, 2268, 2268, 2268, 2268, 2268, 3418, 2271,
     1974, 1971, 2271, 3414, 1967, 1964, 2273, 3984, 1960, 2273,
     2271, 2268, 2268, 2268, 2268, 2271, 2271, 2273, 1954, 1951,
     1950, 2275, 2273, 2273, 2275, 1947, 2271, 1946, 2271, 3414,
     3984, 3414, 2275, 2273, 1945, 2273, 2276, 2275, 2275, 2276,
     1944, 1943, 2268, 2268, 2268, 2268, 2268, 2276, 2275, 3414,
     2275, 1942, 2276, 2276, 2271, 3414, 1941, 2277, 4118, 4147,
     2277, 4118, 4147, 2276, 2278, 2276, 1940, 2278, 2277, 4118,
     4147, 1939, 2275, 2277, 2277, 2278, 2273, 1938, 1937, 2279,
     2278, 2278, 2279, 4502, 2277, 1936, 2277, 1935, 4502, 4502,

     2279, 2278, 4502, 2278, 2280, 2279, 2279, 2280, 1933, 1932,
     2276, 2281, 1931, 1930, 2281, 2280, 2279, 1929, 2279, 1928,
     2280, 2280, 2281, 2985, 2985, 2985, 2985, 2281, 2281, 1927,
     1926, 2280, 2282, 2280, 1925, 2282, 1923, 2277, 2281, 2283,
     2281, 4171, 2283, 2282, 4171, 1921, 1905, 2278, 2282, 2282,
     2283, 2985, 4171, 2985, 2279, 2283, 2283, 1903, 1902, 2282,
     2284, 2282, 4166, 2284, 2285, 4166, 2283, 2285, 2283, 1901,
     1900, 2284, 2280, 1899, 4166, 2285, 2284, 2284, 1898, 2281,
     2285, 2285, 2985, 3636, 3636, 3636, 3636, 2284, 1897, 2284,
     4498, 2285, 2286, 2285, 3636, 2286, 2282, 4499, 4498, 2288,

     2985, 1896, 2288, 2286, 4498, 4499, 4498, 2283, 2286, 2286,
     2288, 4499, 2284, 4499, 2289, 2288, 2288, 2289, 1895, 2286,
     1894, 2286, 1893, 1892, 1891, 2289, 2288, 1890, 2288, 1889,
     2289, 2289, 1888, 2285, 1887, 1886, 1885, 2290, 1884, 1883,
     2290, 2289, 1882, 2289, 2291, 2286, 1881, 2291, 2290, 1880,
     1879, 1878, 2288, 2290, 2290, 2291, 3887, 3887, 3887, 3887,
     2291, 2291, 1877, 1876, 2290, 2289, 2290, 2292, 1875, 1874,
     2292, 2291, 1873, 2291, 2293, 1872, 1871, 2293, 2292, 4178,
     4178, 4178, 4178, 2292, 2292, 2293, 2988, 2988, 2988, 2988,
     2293, 2293, 1870, 1869, 2292, 2294, 2292, 1867, 2294, 1866,

     1865, 2293, 1864, 2293, 2295, 2290, 2294, 2295, 1863, 1862,
     2291, 2294, 2294, 1861, 2988, 2295, 2988, 1860, 2292, 1845,
     2295, 2295, 2294, 2296, 2294, 1844, 2296, 1826, 1824, 2293,
     1823, 2295, 1822, 2295, 2296, 1821, 3887, 3405, 3405, 2296,
     2296, 1820, 3405, 3405, 2297, 2988, 1819, 2297, 1818, 1817,
     2296, 1816, 2296, 2298, 2294, 2297, 2298, 3405, 1815, 2295,
     2297, 2297, 1814, 2988, 2298, 3637, 3637, 3637, 3637, 2298,
     2298, 2297, 2299, 2297, 1813, 2299, 3637, 1812, 1810, 1809,
     2298, 1808, 2298, 2299, 3888, 3888, 3888, 3888, 2299, 2299,
     1807, 2300, 2296, 1806, 2300, 2301, 1805, 1804, 2301, 2299,

     1803, 2299, 2300, 1802, 1801, 3405, 2301, 2300, 2300, 1790,
     1783, 2301, 2301, 1781, 2297, 1780, 2302, 1779, 2300, 2302,
     2300, 1778, 2301, 2303, 2301, 2298, 2303, 2302, 1777, 1776,
     1774, 2299, 2302, 2302, 2303, 3794, 3794, 3794, 3794, 2303,
     2303, 4611, 1772, 2302, 1771, 2302, 3794, 1726, 1720, 4611,
     2303, 2304, 2303, 1698, 2304, 4611, 1660, 4611, 2305, 2300,
     1614, 2305, 2304, 1613, 3888, 2301, 1611, 2304, 2304, 2305,
     1606, 2302, 1605, 2303, 2305, 2305, 1603, 1582, 2304, 2306,
     2304, 1581, 2306, 1579, 1553, 2305, 2307, 2305, 2303, 2307,
     2306, 4186, 4186, 4186, 4186, 2306, 2306, 2307, 1552, 1551,

     1550, 2308, 2307, 2307, 2308, 1549, 2306, 1548, 2306, 1546,
     2304, 1545, 2308, 2307, 1544, 2307, 1543, 2308, 2308, 1542,
     2309, 1541, 2305, 2309, 2311, 1540, 1532, 2311, 2308, 1530,
     2308, 2309, 2306, 1529, 1524, 2311, 2309, 2309, 1523, 2307,
     2311, 2311, 1483, 1476, 1472, 2312, 1460, 2309, 2312, 2309,
     4662, 2311, 2313, 2311, 1459, 2313, 2312, 1452, 4662, 2308,
     1448, 2312, 2312, 2313, 4662, 1444, 4662, 1439, 2313, 2313,
     1430, 1414, 2312, 2314, 2312, 2311, 2314, 2315, 1411, 2313,
     2315, 2313, 2309, 1410, 2314, 1409, 1408, 4663, 2315, 2314,
     2314, 1407, 1406, 2315, 2315, 4663, 2316, 1404, 1403, 2316,

     2314, 4663, 2314, 4663, 2315, 1402, 2315, 2316, 2987, 2987,
     2987, 2987, 2316, 2316, 1401, 1400, 1399, 2317, 2312, 1398,
     2317, 2313, 1391, 2316, 1380, 2316, 1376, 2314, 2317, 1368,
     1366, 1361, 2314, 2317, 2317, 1359, 2987, 2314, 2987, 2318,
     1345, 2315, 2318, 1343, 2317, 1341, 2317, 1339, 2319, 1335,
     2318, 2319, 1329, 2316, 1302, 2318, 2318, 1297, 1294, 2319,
     1293, 1288, 2987, 1284, 2319, 2319, 2318, 2320, 2318, 1283,
     2320, 1280, 1276, 1275, 2317, 2319, 2321, 2319, 2320, 2321,
     1273, 1272, 1270, 2320, 2320, 2987, 1269, 2321, 3892, 3892,
     3892, 3892, 2321, 2321, 2320, 1267, 2320, 2324, 2324, 3892,

     2324, 1266, 1265, 2321, 1264, 2321, 1263, 4691, 2324, 1262,
     2318, 1261, 1259, 2324, 2324, 4691, 2325, 2325, 2319, 2325,
     1258, 4691, 1257, 4691, 2324, 1256, 2324, 2325, 1255, 1254,
     4692, 2321, 2325, 2325, 1253, 2320, 2326, 2326, 4692, 2326,
     1252, 1251, 1250, 2325, 4692, 2325, 4692, 2326, 2648, 2648,
     2648, 2648, 2326, 2326, 1243, 2327, 2327, 1218, 2327, 2324,
     1213, 1211, 1210, 2326, 1209, 2326, 2327, 1208, 1207, 2325,
     1205, 2327, 2327, 1204, 1203, 2648, 2328, 2328, 1202, 2328,
     1201, 1199, 2327, 1198, 2327, 2329, 2329, 2328, 2329, 1197,
     1196, 2326, 2328, 2328, 1195, 2648, 2329, 3893, 3893, 3893,

     3893, 2329, 2329, 2328, 1194, 2328, 2330, 2330, 3893, 2330,
     2331, 2331, 2329, 2331, 2329, 1188, 1187, 2330, 1186, 1185,
     1184, 2331, 2330, 2330, 2327, 1182, 2331, 2331, 2648, 2333,
     2333, 1181, 2333, 2330, 1180, 2330, 1179, 2331, 2758, 2331,
     2333, 2758, 2328, 1178, 1176, 2333, 2333, 1175, 1174, 2758,
     1173, 1172, 1171, 2329, 2758, 2758, 2333, 1170, 2333, 1169,
     1168, 1165, 1164, 1163, 1162, 2758, 1161, 2758, 1160, 1159,
     2330, 2337, 2337, 2337, 2337, 2337, 2337, 2337, 2337, 2337,
     2337, 2337, 2337, 2337, 2337, 2337, 2337, 2337, 2337, 2337,
     2337, 1155, 1154, 1153, 1152, 2338, 2338, 1122, 2338, 2337,

     2337, 2337, 2337, 2337, 2337, 1121, 2338, 2470, 2470, 2470,
     2470, 2338, 2338, 1117, 2339, 2339, 1116, 2339, 2337, 2337,
     2337, 2337, 2338, 1115, 2338, 2339, 1114, 2337, 1113, 1112,
     2339, 2339, 1110, 1109, 2470, 1108, 2470, 3899, 3899, 3899,
     3899, 2339, 1107, 2339, 2341, 2341, 1106, 2341, 3899, 2337,
     2337, 2337, 2337, 2337, 2470, 2341, 2338, 1104, 1103, 1102,
     2341, 2341, 2470, 2342, 2342, 1101, 2342, 2343, 2343, 1100,
     2343, 2341, 2339, 2341, 2342, 1099, 1098, 1097, 2343, 2342,
     2342, 1096, 1095, 2343, 2343, 1094, 1070, 1067, 2344, 2344,
     2342, 2344, 2342, 1066, 2343, 1065, 2343, 1064, 1063, 2344,

     1062, 3668, 3668, 1057, 2344, 2344, 3668, 3668, 2345, 2345,
     1047, 2345,  963, 2341,  952, 2344,  946, 2344,  945, 2345,
      870, 3668, 2343, 2776, 2345, 2345, 2776, 2346, 2346,  868,
     2346,  866,  865,  863, 2776, 2345, 2342, 2345, 2346, 2776,
     2776,  862,  861, 2346, 2346,  848,  847, 2344, 2347, 2347,
     2776, 2347, 2776,  845, 2346,  832, 2346, 2348, 2348, 2347,
     2348,  766, 2776, 2345, 2347, 2347,  760,  754, 2348, 3668,
      752,  750,  749, 2348, 2348, 2347,  727, 2347,  723, 2349,
     2349,  712, 2349,  701, 2348,  699, 2348,  695, 2350, 2350,
     2349, 2350,  689,  685,  682, 2349, 2349, 2346,  679, 2350,

     3902, 3902, 3902, 3902, 2350, 2350, 2349, 2347, 2349, 2351,
     2351, 3902, 2351, 2352, 2352, 2350, 2352, 2350,  678,  667,
     2351,  658,  649,  639, 2352, 2351, 2351, 2348, 3308, 2352,
     2352, 3308,  631,  627,  626,  625, 2351,  611, 2351, 3308,
     2352,  609, 2352, 2355, 2355, 3308, 2355,  607,  599,  589,
     2349,  587,  585,  584, 2355, 3308,  583,  580, 2350, 2355,
     2355,  579, 3915, 3915, 3915, 3915, 4106, 4106, 4106, 4106,
     2355, 2351, 2355, 3915,  577, 3308, 2352, 2353, 2353, 2353,
     2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353,
     2353, 2353, 2353, 2353, 2353, 2353, 2353, 3308,  576,  573,

     3739, 3739, 2355, 3739,  572, 2353, 2353, 2353, 2353, 2353,
     2353, 3739, 2356, 2356,  571, 2356, 3739, 3739,  570, 2358,
     2358, 4106, 2358, 2356, 2353, 2353, 2353, 2353, 2356, 2356,
     2358, 3997, 3997, 3997, 3997, 2358, 2358,  561,  560, 2356,
      558, 2356, 3997, 4106,  547,  534, 2358,  528, 2358,  524,
      518, 3033, 3033, 3033, 3033, 2353, 2353, 2353, 2353, 2353,
     2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354,
     2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354,
     2356, 2358,  517, 3985, 3985, 3985, 3985,  516, 2354, 2354,
     2354, 2354, 2354, 2354, 3985, 2357, 2357,  515, 2357,  513,

      512,  511, 2359, 2359, 3033, 2359, 2357, 2354, 2354, 2354,
     2354, 2357, 2357, 2359,  509,  508, 3033,  507, 2359, 2359,
     3033,  505, 2357, 3033, 2357,  497,  496,  495, 3033, 2359,
      494, 2359, 2360, 2360,  492, 2360,  491,  490, 2354, 2354,
     2354, 2354, 2354, 2360, 3901, 3901, 3901, 3901, 2360, 2360,
     2357, 2361, 2361,  488, 2361, 3901,  487,  486,  484, 2360,
     3985, 2360, 2361,  483,  482,  481,  480, 2361, 2361,  468,
      466, 3901, 2359,  465, 2362, 2362,  464, 2362, 2361,  463,
     2361, 2363, 2363,  462, 2363, 2362,  461, 2360,  460,  430,
     2362, 2362, 2363,  427,  426,  425,  422, 2363, 2363,  421,

      420, 2362, 2361, 2362, 2364, 2364,  418, 2364, 2363,  417,
     2363,  416,  413, 2365, 2365, 2364, 2365,  412,  411,  410,
     2364, 2364,  382,  377, 2365,  376,  375,  374,  373, 2365,
     2365, 2364,  364, 2364,  360,  357, 2366, 2366, 2362, 2366,
     2365,  348, 2365, 2367, 2367,  346, 2367, 2366,  279,  278,
      273, 2363, 2366, 2366, 2367, 2647, 2647, 2647, 2647, 2367,
     2367,  243,  233, 2366, 2777, 2366, 2647, 2777, 2368, 2368,
     2367, 2368, 2367,  230,  218, 2777,  216, 2364, 2365, 2368,
     2777, 2777, 2647,  212, 2368, 2368,  199,  198,  189, 2369,
     2369, 2777, 2369, 2777,  185, 2368,  184, 2368, 2370, 2370,

     2369, 2370, 2647,  183, 2366, 2369, 2369,  182,  181, 2370,
      175, 2367,  170,  164, 2370, 2370, 2369,  158, 2369, 2371,
     2371,  157, 2371,  155,  143, 2370,  142, 2370,  139,  133,
     2371,  132, 2368,  131, 2777, 2371, 2371,  130, 2372, 2372,
      128, 2372, 2374, 2374,  125, 2374, 2371,  123, 2371, 2372,
     2370,  113,  112, 2374, 2372, 2372,  108, 2369, 2374, 2374,
      102,  101,   93, 2375, 2375, 2372, 2375, 2372,   91, 2374,
       83, 2374,   82,   75, 2375,    0,    0,    0,    0, 2375,
     2375,    0, 2376, 2376,    0, 2376, 2377, 2377, 2371, 2377,
     2375, 2372, 2375, 2376,    0, 2374,    0, 2377, 2376, 2376,

        0,    0, 2377, 2377,    0, 2378, 2378,    0, 2378, 2376,
        0, 2376,    0, 2377, 2375, 2377, 2378,    0,    0,    0,
        0, 2378, 2378,    0, 2379, 2379,    0, 2379, 2380, 2380,
        0, 2380, 2378,    0, 2378, 2379,    0,    0,    0, 2380,
     2379, 2379,    0,    0, 2380, 2380, 3788, 3788, 3788, 3788,
     2376, 2379, 2377, 2379,    0, 2380, 2378, 2380, 3788, 2381,
     2381, 3788, 2381,    0,    0,    0, 2382, 2382,    0, 2382,
     2381,    0,    0,    0, 3788, 2381, 2381, 2382,    0, 2379,
        0,    0, 2382, 2382,    0,    0, 2381, 2380, 2381, 2383,
     2383,    0, 2383, 2382, 3788, 2382, 2384, 2384,    0, 2384,

     2383, 4107, 4107, 4107, 4107, 2383, 2383, 2384, 3983, 3983,
     3983, 3983, 2384, 2384, 2381,    0, 2383,    0, 2383,    0,
        0, 2385, 2385, 2384, 2385, 2384,    0,    0, 2386, 2386,
        0, 2386, 2385,    0,    0, 2382,    0, 2385, 2385, 2386,
        0,    0,    0,    0, 2386, 2386, 3806, 3806, 2385,    0,
     2385, 3806, 3806,    0,    0, 2386, 4107, 2386,    0, 2383,
     2387, 2387,    0, 2387,    0,    0, 3806, 3983, 2384,    0,
        0, 2387, 3986, 3986, 3986, 3986, 2387, 2387, 4107,    0,
     2385, 2388, 2388,    0, 2388, 3983,    0, 2387,    0, 2387,
     2389, 2389, 2388, 2389,    0,    0, 2386, 2388, 2388,    0,

        0, 2389,    0,    0,    0,    0, 2389, 2389, 2388,    0,
     2388,    0, 2390, 2390, 3806, 2390,    0, 2389,    0, 2389,
        0, 2391, 2391, 2390, 2391,    0,    0,    0, 2390, 2390,
     2387, 3986, 2391,    0,    0,    0, 2388, 2391, 2391, 2390,
     2389, 2390,    0, 2392, 2392,    0, 2392,    0, 2391, 3986,
     2391,    0,    0,    0, 2392, 2389,    0,    0,    0, 2392,
     2392,    0, 2393, 2393,    0, 2393, 2394, 2394,    0, 2394,
     2392, 2390, 2392, 2393,    0,    0,    0, 2394, 2393, 2393,
        0,    0, 2394, 2394,    0, 2391,    0, 2395, 2395, 2393,
     2395, 2393,    0, 2394,    0, 2394, 2392,    0, 2395,    0,

        0,    0,    0, 2395, 2395,    0, 2396, 2396,    0, 2396,
     2397, 2397,    0, 2397, 2395, 2393, 2395, 2396,    0,    0,
        0, 2397, 2396, 2396, 2394, 2779, 2397, 2397, 2779, 2398,
     2398,    0, 2398, 2396,    0, 2396, 2779, 2397,    0, 2397,
     2398, 2779, 2779,    0,    0, 2398, 2398,    0,    0, 2395,
     2399, 2399, 2779, 2399, 2779,    0, 2398, 2396, 2398, 2400,
     2400, 2399, 2400,    0,    0,    0, 2399, 2399,    0,    0,
     2400, 3998, 3998, 3998, 3998, 2400, 2400, 2399,    0, 2399,
        0,    0, 3998, 2397, 2401, 2401, 2400, 2401, 2400,    0,
        0, 2402, 2402,    0, 2402, 2401, 2779,    0, 2398,    0,

     2401, 2401, 2402,    0, 2399,    0,    0, 2402, 2402, 2399,
        0, 2401,    0, 2401, 2399,    0, 2403, 2403, 2402, 2403,
     2402,    0,    0, 2400,    0,    0,    0, 2403,    0,    0,
        0,    0, 2403, 2403,    0, 2404, 2404,    0, 2404, 2405,
     2405, 2401, 2405, 2403,    0, 2403, 2404,    0, 2402,    0,
     2405, 2404, 2404,    0, 3569, 2405, 2405, 3569,    0,    0,
        0,    0, 2404,    0, 2404, 3569, 2405,    0, 2405, 2406,
     2406, 3569, 2406,    0,    0, 2475, 2475, 2475, 2475,    0,
     2406, 3569,    0,    0,    0, 2406, 2406, 2403, 3916, 3916,
     3916, 3916, 2780,    0,    0, 2780, 2406,    0, 2406, 3916,

        0, 3569, 2475, 2780, 2475, 2404,    0, 2405, 2780, 2780,
        0,    0, 4003, 4003, 4003, 4003,    0, 3916,    0, 2780,
     3569, 2780, 2475, 4003, 2406, 2471, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2475,    0, 2780,    0, 2476,
     2476, 2476, 2476, 2471, 2471, 2471, 2471, 2471, 2471,    0,
        0, 2478, 2478, 2478, 2478, 2479, 2479, 2479, 2479,    0,
        0,    0, 2471, 2471, 2471, 2471, 2476,    0, 2476,    0,
        0, 2471, 2480, 2480, 2480, 2480,    0,    0, 2478,    0,
     2478,    0, 2479,    0, 2479,    0, 2476, 2481, 2481, 2481,

     2481,    0,    0, 2471, 2471, 2471, 2471, 2471, 2478, 2480,
        0, 2480, 2479,    0,    0, 2476, 2482, 2482, 2482, 2482,
     2479,    0, 3838, 3838, 2481,    0, 2481, 3838, 3838, 2480,
        0, 2478, 2480, 2483, 2483, 2483, 2483, 2484, 2484, 2484,
     2484,    0, 3838, 2482, 2481, 2482,    0, 2627, 2627, 2627,
     2627,    0,    0,    0, 2784,    0,    0, 2784, 2627,    0,
     2483, 2481, 2483, 2482, 2484, 2784, 2484,    0,    0,    0,
     2784, 2784,    0, 2482, 2627,    0, 2627,    0, 2784,    0,
     2483, 2784,    0, 2784, 2484, 4004, 4004, 4004, 4004,    0,
     3838,    0,    0,    0, 2627,    0, 4004,    0,    0, 2625,

     2625, 2625, 2625, 2483,    0, 2484, 2546, 2546, 2546, 2546,
     2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546,
     2546, 2546, 2546, 2546, 2546, 2546, 2625,    0,    0,    0,
     2626, 2626, 2626, 2626, 2546, 2546, 2546, 2546, 2546, 2546,
        0,    0, 2961, 2961, 2961, 2961, 2625, 2628, 2628, 2628,
     2628,    0,    0, 2546, 2546, 2546, 2546, 2626, 2628,    0,
        0,    0, 2546,    0, 2625, 3105, 3105, 3105, 3105, 2961,
        0, 2961,    0,    0, 2628,    0, 2628, 2626,    0, 2625,
     2674, 2674, 2674, 2674, 2546, 2546, 2546, 2546, 2546, 2961,
        0, 2674, 3105,    0, 2628, 2626,    0, 3066, 3066, 3066,

     3066,    0,    0,    0,    0,    0,    0, 2674, 3066,    0,
     2626,    0, 3105, 2628, 2629, 2629, 2629, 2629,    0, 2679,
     2679, 2679, 2679,    0, 3066, 2629, 2629, 2674,    0, 2629,
     2679, 2679,    0,    0, 2679,    0,    0,    0,    0,    0,
        0, 2629, 2629, 2629, 3066,    0, 2679, 2679, 2679, 4008,
     4008, 4008, 4008, 3948, 3948,    0,    0,    0, 3948, 3948,
     4008, 2629, 2629,    0,    0,    0, 2679, 2679,    0, 3080,
     3080, 3080, 3080, 3948,    0,    0, 2680, 2680, 2680, 2680,
     3080,    0, 2629, 2630, 2630, 2630, 2630, 2680, 2680,    0,
     2781, 2680,    0, 2781, 2630, 2630, 3080,    0, 2630, 2630,

     2630, 2781,    0, 2680, 2680,    0, 2781, 2781,    0,    0,
     2630, 2630, 2630,    0,    0,    0, 3080, 2781,    0, 2781,
        0, 3948,    0, 2680, 2680, 4011, 4011, 4011, 4011,    0,
     2630, 2630, 2637, 2637, 2637, 2637, 4011,    0,    0,    0,
        0, 2781,    0,    0, 2637,    0,    0, 3338, 3338, 3338,
     3338, 2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637,
     2783,    0,    0, 2783, 2782,    0,    0, 2782,    0,    0,
        0, 2783,    0,    0, 3338, 2782, 2783, 2783,    0, 2637,
     2782, 2782,    0, 4060, 4060, 4060, 4060, 2783,    0, 2783,
        0, 2782, 2786, 2782, 3338, 2786,    0,    0,    0, 2964,

     2964, 2964, 2964, 2786,    0,    0,    0,    0, 2786, 2786,
        0, 2783, 2637, 2638,    0, 2782, 2638,    0,    0, 2786,
        0, 2786,    0,    0,    0, 2638, 2964,    0, 2964, 2782,
        0,    0, 2638, 2638, 2638, 2638, 2638, 2638, 2638, 2638,
     2638, 2785, 2786,    0, 2785, 4060, 2964,    0, 2787,    0,
        0, 2787, 2785,    0,    0,    0,    0, 2785, 2785, 2787,
     4060,    0, 2785, 2788, 2787, 2787, 2788,    0, 2785, 2964,
     2785,    0,    0,    0, 2788, 2787,    0, 2787,    0, 2788,
     2788,    0,    0,    0, 2789, 3863,    0, 2789, 3863,    0,
     2788,    0, 2788, 2638, 2645, 2789, 3863,    0,    0, 2787,

     2789, 2789, 3863, 2645, 2645, 2645, 2645, 2645, 2645, 2645,
     2645, 2789, 3863, 2789, 2790,    0,    0, 2790,    0,    0,
     2645,    0, 2645,    0,    0, 2790, 2966, 2966, 2966, 2966,
     2790, 2790, 3863, 2788, 4005, 4005, 4005, 4005, 3863, 2789,
     2645, 2790,    0, 2790,    0, 4005, 2645, 2669, 2669, 2669,
     2669,    0,    0, 2966, 2792, 2966,    0, 2792, 2669, 2669,
        0, 4005, 2669, 2669, 2669, 2792,    0,    0,    0,    0,
     2792, 2792,    0, 2966, 2669, 2669, 2669, 2966,    0,    0,
     2790, 2792,    0, 2792,    0,    0, 2669, 4058, 4058, 4058,
     4058,    0,    0,    0, 2669, 2669, 2686, 2686, 2686, 2686,

     2686, 2686, 2686, 2686, 2686, 2686, 2686, 2686, 2686, 2686,
     2686, 2686, 2686, 2686, 2686, 2686,    0,    0, 2792,    0,
     2793,    0,    0, 2793, 2686, 2686, 2686, 2686, 2686, 2686,
        0, 2793,    0,    0,    0,    0, 2793, 2793,    0, 2794,
        0, 4058, 2794, 2686, 2686, 2686, 2686, 2793,    0, 2793,
     2794, 4012, 4012, 4012, 4012, 2794, 2794,    0, 2970, 2970,
     2970, 2970, 4012,    0, 4058,    0, 2794,    0, 2794, 2967,
     2967, 2967, 2967,    0, 2686, 2686, 2686, 2686, 2686, 2698,
     2698, 2698, 2698,    0,    0, 2970, 2795, 2970,    0, 2795,
     2698, 2698,    0, 2967, 2698, 2793, 2967, 2795, 2967,    0,

        0, 2794, 2795, 2795,    0, 2970, 2698, 2698, 2698,    0,
        0,    0,    0, 2795,    0, 2795, 2967, 2796, 4001, 4001,
     2796,    0,    0, 4001, 4001,    0, 2698, 2698, 2796,    0,
        0,    0, 2698, 2796, 2796,    0,    0,    0, 4001,    0,
        0, 2795,    0,    0, 2796,    0, 2796,    0, 2698, 2745,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745,    0,
        0,    0, 2796, 2799,    0,    0, 2799, 2745, 2745, 2745,
     2745, 2745, 2745,    0, 2799,    0, 4001,    0,    0, 2799,
     2799,    0, 4033, 4033, 4033, 4033, 2745, 2745, 2745, 2745,

     2799,    0, 2799, 4033, 4056, 4056, 4056, 4056,    0, 4059,
     4059, 4059, 4059,    0,    0, 4056,    0,    0,    0, 2745,
     4059, 3982, 3982, 3982, 3982,    0, 2799, 2745, 2745, 2745,
     2745, 2745, 2778, 2778, 2778, 2778, 2778, 2778, 2778, 2778,
     2778, 2778, 2778, 2778, 2778, 2778, 2778, 2778, 2778, 2778,
     2778, 2778,    0,    0,    0,    0, 3889, 3889, 3889, 3889,
     2778, 2778, 2778, 2778, 2778, 2778,    0,    0, 3889,    0,
        0, 3889, 2800,    0, 3982, 2800,    0,    0,    0, 2778,
     2778, 2778, 2778, 2800, 3889,    0, 3982,    0, 2800, 2800,
     3982,    0,    0, 3982, 4069, 4069, 4069, 4069, 3982, 2800,

        0, 2800,    0,    0, 3889, 4069,    0,    0,    0,    0,
     2778, 2778, 2778, 2778, 2778, 2791, 2791, 2791, 2791, 2791,
     2791, 2791, 2791, 2791, 2791, 2791, 2791, 2791, 2791, 2791,
     2791, 2791, 2791, 2791, 2791,    0, 2800,    0, 4070, 4070,
     4070, 4070,    0, 2791, 2791, 2791, 2791, 2791, 2791, 4070,
        0,    0, 2963, 2963, 2963, 2963, 2797,    0,    0, 2797,
        0,    0, 2791, 2791, 2791, 2791, 2791, 2797,    0,    0,
        0, 2791, 2797, 2797,    0, 2791,    0,    0,    0, 2963,
        0, 2963,    0, 2797,    0, 2797,    0, 2803,    0,    0,
     2803, 2963,    0, 2791, 2791, 2791, 2791, 2791, 2803, 2963,

        0,    0, 2804, 2803, 2803, 2804, 2805,    0,    0, 2805,
        0,    0,    0, 2804, 2803, 2797, 2803, 2805, 2804, 2804,
        0, 2806, 2805, 2805, 2806, 2807,    0,    0, 2807, 2804,
        0, 2804, 2806, 2805,    0, 2805, 2807, 2806, 2806,    0,
     2803, 2807, 2807,    0, 2808,    0,    0, 2808, 2806,    0,
     2806,    0, 2807,    0, 2807, 2808, 2804,    0,    0, 2810,
     2808, 2808, 2810, 2809,    0, 2805, 2809,    0,    0,    0,
     2810, 2808,    0, 2808, 2809, 2810, 2810,    0, 2811, 2809,
     2809, 2811, 2812,    0, 2807, 2812, 2810,    0, 2810, 2811,
     2809, 2806, 2809, 2812, 2811, 2811,    0,    0, 2812, 2812,

        0, 4094, 4094, 4094, 4094, 2811,    0, 2811,    0, 2812,
     2813, 2812, 4094, 2813, 2808,    0,    0, 2814, 2809,    0,
     2814, 2813,    0, 2810,    0,    0, 2813, 2813, 2814, 3416,
     3416, 3416, 3416, 2814, 2814,    0,    0, 2813,    0, 2813,
     2811,    0, 2815,    0, 2814, 2815, 2814,    0, 2812,    0,
        0, 2816,    0, 2815, 2816,    0, 3416,    0, 2815, 2815,
        0,    0, 2816,    0,    0, 2813,    0, 2816, 2816, 2815,
        0, 2815, 2817,    0,    0, 2817, 3416,    0, 2816, 2818,
     2816,    0, 2818, 2817,    0,    0,    0, 2814, 2817, 2817,
     2818, 4095, 4095, 4095, 4095, 2818, 2818,    0,    0, 2817,

     2819, 2817, 4095, 2819,    0,    0, 2818, 2820, 2818, 3416,
     2820, 2819, 2815,    0,    0,    0, 2819, 2819, 2820,    0,
        0, 2816,    0, 2820, 2820,    0,    0, 2819,    0, 2819,
     2821, 2817,    0, 2821, 2820,    0, 2820, 2822,    0,    0,
     2822, 2821,    0,    0,    0,    0, 2821, 2821, 2822, 2818,
        0,    0,    0, 2822, 2822,    0,    0, 2821, 2823, 2821,
     2820, 2823, 2824,    0, 2822, 2824, 2822,    0,    0, 2823,
     2819,    0,    0, 2824, 2823, 2823,    0, 2825, 2824, 2824,
     2825,    0,    0, 2821,    0, 2823,    0, 2823, 2825, 2824,
        0, 2824, 2826, 2825, 2825, 2826,    0,    0,    0, 2827,

        0,    0, 2827, 2826, 2825,    0, 2825, 2822, 2826, 2826,
     2827,    0,    0, 2823,    0, 2827, 2827, 2824,    0, 2826,
     2828, 2826,    0, 2828,    0,    0, 2827,    0, 2827,    0,
        0, 2828,    0,    0,    0, 2829, 2828, 2828, 2829, 2968,
     2968, 2968, 2968,    0,    0, 2825, 2829, 2828,    0, 2828,
        0, 2829, 2829, 2827, 2830,    0, 2826, 2830, 2831,    0,
     2968, 2831, 2829,    0, 2829, 2830, 2968,    0, 2968, 2831,
     2830, 2830,    0,    0, 2831, 2831,    0, 2832,    0,    0,
     2832, 2830,    0, 2830,    0, 2831, 2968, 2831, 2832,    0,
     2828, 2829, 2833, 2832, 2832, 2833,    0,    0,    0, 4112,

     4112, 4112, 4112, 2833, 2832,    0, 2832, 2830, 2833, 2833,
     4112, 2834,    0,    0, 2834, 2831,    0,    0,    0, 2833,
        0, 2833, 2834,    0,    0,    0, 2835, 2834, 2834, 2835,
        0,    0,    0,    0,    0,    0,    0, 2835, 2834,    0,
     2834, 2838, 2835, 2835, 2838, 2848, 2848, 2832, 2848,    0,
     2833,    0, 2838, 2835,    0, 2835, 2848, 2838, 2838,    0,
        0, 2848, 2848,    0, 2840,    0,    0, 2840, 2838,    0,
     2838,    0, 2848,    0, 2848, 2840,    0, 2835,    0, 2834,
     2840, 2840,    0,    0, 2848,    0,    0,    0,    0,    0,
        0, 2840,    0, 2840,    0, 2838, 2839, 2839, 2839, 2839,

     2839, 2839, 2839, 2839, 2839, 2839, 2839, 2839, 2839, 2839,
     2839, 2839, 2839, 2839, 2839, 2839,    0,    0,    0, 4126,
     4126, 4126, 4126, 2840, 2839, 2839, 2839, 2839, 2839, 2839,
     4126, 2841,    0,    0, 2841,    0,    0,    0, 2842,    0,
        0, 2842, 2841, 2839, 2839, 2839, 2839, 2841, 2841, 2842,
        0,    0,    0, 2843, 2842, 2842, 2843,    0, 2841,    0,
     2841,    0,    0,    0, 2843, 2842, 2839, 2842, 2844, 2843,
     2843, 2844,    0,    0, 2839, 2839, 2839, 2839, 2839, 2844,
     2843,    0, 2843,    0, 2844, 2844, 2841,    0,    0,    0,
     2845,    0, 2842, 2845,    0, 2844,    0, 2844,    0, 2846,

        0, 2845, 2846,    0, 2843,    0, 2845, 2845,    0,    0,
     2846,    0,    0,    0,    0, 2846, 2846, 2845, 2847, 2845,
        0, 2847, 2849, 2849,    0, 2849, 2846,    0, 2846, 2847,
        0,    0, 2844, 2849, 2847, 2847,    0,    0, 2849, 2849,
        0, 2845,    0, 2851, 2851, 2847, 2851, 2847,    0, 2849,
        0, 2849,    0,    0, 2851,    0,    0,    0, 2846, 2851,
     2851,    0, 2852, 2852,    0, 2852,    0,    0, 2847,    0,
     2851,    0, 2851, 2852, 4149, 4149, 4149, 4149, 2852, 2852,
        0,    0,    0,    0,    0, 4149,    0,    0,    0, 2852,
        0, 2852, 2849, 2850, 2850, 2850, 2850, 2850, 2850, 2850,

     2850, 2850, 2850, 2850, 2850, 2850, 2850, 2850, 2850, 2850,
     2850, 2850, 2850,    0, 2851,    0,    0, 2852,    0,    0,
        0, 2850, 2850, 2850, 2850, 2850, 2850,    0, 2853, 2853,
        0, 2853,    0,    0,    0, 2854, 2854,    0, 2854, 2853,
     2850, 2850, 2850, 2850, 2853, 2853, 2854,    0,    0,    0,
     3974, 2854, 2854, 3974,    0, 2853,    0, 2853,    0,    0,
        0, 3974, 2854,    0, 2854, 2855, 2855, 3974, 2855,    0,
        0, 2850, 2850, 2850, 2850, 2850, 2855, 3974,    0, 2853,
        0, 2855, 2855,    0,    0,    0, 2854,    0, 2856, 2856,
        0, 2856, 2855,    0, 2855,    0,    0, 3974,    0, 2856,

     2854,    0,    0,    0, 2856, 2856,    0, 2857, 2857,    0,
     2857,    0, 2856,    0,    0, 2856, 2855, 2856, 2857,    0,
        0,    0,    0, 2857, 2857,    0, 2858, 2858, 2857, 2858,
     2859, 2859,    0, 2859, 2857,    0, 2857, 2858,    0,    0,
        0, 2859, 2858, 2858,    0,    0, 2859, 2859,    0,    0,
        0, 2860, 2860, 2858, 2860, 2858,    0, 2859,    0, 2859,
        0,    0, 2860,    0,    0,    0,    0, 2860, 2860,    0,
        0, 2861, 2861,    0, 2861,    0, 2858,    0, 2860,    0,
     2860, 2859, 2861, 4111, 4111, 4111, 4111, 2861, 2861,    0,
     2862, 2862,    0, 2862, 4111,    0,    0,    0, 2861,    0,

     2861, 2862,    0,    0,    0,    0, 2862, 2862, 2972, 2972,
     2972, 2972, 4111, 2864, 2864,    0, 2864, 2862,    0, 2862,
        0, 2860, 2865, 2865, 2864, 2865, 2861,    0,    0, 2864,
     2864,    0,    0, 2865,    0, 2972,    0, 2972, 2865, 2865,
     2864,    0, 2864, 4154, 4154, 4154, 4154,    0,    0, 2865,
        0, 2865,    0,    0, 4154, 2972, 2862, 2863, 2863, 2863,
     2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863,
     2863, 2863, 2863, 2863, 2863, 2863, 2863, 2864, 2972,    0,
        0,    0,    0,    0,    0, 2863, 2863, 2863, 2863, 2863,
     2863, 4032, 4032, 4032, 4032,    0,    0, 2865, 2866, 2866,

        0, 2866, 4032,    0, 2863, 2863, 2863, 2863, 2863, 2866,
        0,    0,    0, 2863, 2866, 2866,    0, 2863, 4032,    0,
     3406, 3406, 3406, 3406,    0, 2866,    0, 2866,    0, 2867,
     2867, 3406, 2867,    0,    0, 2863, 2863, 2863, 2863, 2863,
     2867,    0,    0,    0,    0, 2867, 2867, 3406, 2868, 2868,
        0, 2868, 2869, 2869,    0, 2869, 2867,    0, 2867, 2868,
     2866,    0,    0, 2869, 2868, 2868,    0, 3406, 2869, 2869,
        0, 2870, 2870,    0, 2870, 2868,    0, 2868,    0, 2869,
        0, 2869, 2870,    0, 2867,    0,    0, 2870, 2870,    0,
     2871, 2871,    0, 2871, 2971, 2971, 2971, 2971, 2870,    0,

     2870, 2871,    0, 2868,    0,    0, 2871, 2871,    0, 2872,
     2872, 2869, 2872,    0,    0,    0,    0, 2871,    0, 2871,
     2872, 2971,    0, 2971, 2870, 2872, 2872,    0, 2874, 2874,
        0, 2874, 2977, 2977, 2977, 2977, 2872,    0, 2872, 2874,
     2870, 2971,    0, 2871, 2874, 2874,    0, 2875, 2875, 2971,
     2875, 2876, 2876,    0, 2876, 2874,    0, 2874, 2875, 2977,
        0, 2977, 2876, 2875, 2875,    0,    0, 2876, 2876,    0,
        0,    0,    0, 2872, 2875,    0, 2875,    0, 2876, 2977,
     2876, 2874, 2877, 2877,    0, 2877, 2878, 2878,    0, 2878,
        0,    0,    0, 2877,    0,    0, 2977, 2878, 2877, 2877,

        0, 2875, 2878, 2878,    0, 2879, 2879,    0, 2879, 2877,
     2876, 2877,    0, 2878,    0, 2878, 2879,    0,    0,    0,
        0, 2879, 2879,    0, 2880, 2880,    0, 2880, 4119, 4119,
     4119, 4119, 2879,    0, 2879, 2880,    0,    0,    0, 4119,
     2880, 2880,    0, 2881, 2881, 2878, 2881, 2882, 2882,    0,
     2882, 2880, 2877, 2880, 2881,    0,    0, 4119, 2882, 2881,
     2881,    0,    0, 2882, 2882,    0, 2883, 2883,    0, 2883,
     2881,    0, 2881,    0, 2882, 2879, 2882, 2883,    0, 2880,
        0,    0, 2883, 2883,    0, 2884, 2884,    0, 2884, 2885,
     2885,    0, 2885, 2883,    0, 2883, 2884,    0,    0,    0,

     2885, 2884, 2884,    0,    0, 2885, 2885, 2881,    0, 2882,
     2886, 2886, 2884, 2886, 2884,    0, 2885,    0, 2885, 2887,
     2887, 2886, 2887,    0,    0,    0, 2886, 2886,    0,    0,
     2887,    0, 2883,    0,    0, 2887, 2887, 2886,    0, 2886,
     2884, 2888, 2888,    0, 2888,    0, 2887,    0, 2887,    0,
     2889, 2889, 2888, 2889,    0,    0,    0, 2888, 2888, 2885,
        0, 2889,    0,    0,    0,    0, 2889, 2889, 2888,    0,
     2888,    0,    0,    0,    0, 2890, 2890, 2889, 2890, 2889,
     2886,    0, 2891, 2891,    0, 2891, 2890,    0,    0, 2887,
        0, 2890, 2890, 2891,    0,    0,    0,    0, 2891, 2891,

     2888,    0, 2890,    0, 2890, 2892, 2892,    0, 2892, 2891,
        0, 2891, 2893, 2893,    0, 2893, 2892,    0,    0,    0,
     2889, 2892, 2892, 2893, 4125, 4125, 4125, 4125, 2893, 2893,
        0,    0, 2892, 3751, 2892, 2891, 3751, 2894, 2894, 2893,
     2894, 2893,    0,    0, 3751, 2890, 2895, 2895, 2894, 2895,
     3751, 4125,    0, 2894, 2894,    0,    0, 2895, 2892,    0,
     3751,    0, 2895, 2895, 2894,    0, 2894, 2896, 2896,    0,
     2896, 4125,    0, 2895,    0, 2895,    0,    0, 2896,    0,
     3751,    0, 2893, 2896, 2896,    0, 2897, 2897, 3751, 2897,
        0,    0, 2894,    0, 2896,    0, 2896, 2897,    0,    0,

        0, 2895, 2897, 2897,    0, 2898, 2898,    0, 2898, 2899,
     2899,    0, 2899, 2897,    0, 2897, 2898,    0,    0,    0,
     2899, 2898, 2898,    0,    0, 2899, 2899,    0, 2900, 2900,
        0, 2900, 2898,    0, 2898, 2896, 2899,    0, 2899, 2900,
        0,    0,    0,    0, 2900, 2900,    0,    0,    0,    0,
     2897, 2901, 2901,    0, 2901, 2900,    0, 2900,    0, 2898,
     2902, 2902, 2901, 2902,    0,    0,    0, 2901, 2901,    0,
        0, 2902,    0,    0,    0,    0, 2902, 2902, 2901, 2899,
     2901,    0, 2903, 2903, 2900, 2903,    0, 2902,    0, 2902,
        0, 2904, 2904, 2903, 2904,    0,    0,    0, 2903, 2903,

        0,    0, 2904,    0, 2901,    0,    0, 2904, 2904, 2903,
        0, 2903, 2905, 2905,    0, 2905,    0, 2902, 2904,    0,
     2904, 2906, 2906, 2905, 2906,    0,    0,    0, 2905, 2905,
        0,    0, 2906,    0,    0,    0,    0, 2906, 2906, 2905,
        0, 2905, 2907, 2907,    0, 2907,    0,    0, 2906, 2904,
     2906,    0, 2903, 2907, 4053, 4053, 4053, 4053, 2907, 2907,
        0,    0, 2909, 2909,    0, 2909,    0,    0,    0, 2907,
        0, 2907, 2906, 2909,    0,    0,    0,    0, 2909, 2909,
     2905,    0, 4053,    0, 4053,    0,    0,    0,    0, 2909,
        0, 2909,    0,    0,    0,    0, 2907, 2908, 2908, 2908,

     2908, 2908, 2908, 2908, 2908, 2908, 2908, 2908, 2908, 2908,
     2908, 2908, 2908, 2908, 2908, 2908, 2908,    0,    0,    0,
        0, 2909,    0,    0, 4053, 2908, 2908, 2908, 2908, 2908,
     2908, 4053, 2910, 2910,    0, 2910,    0,    0,    0, 2911,
     2911,    0, 2911, 2910, 2908, 2908, 2908, 2908, 2910, 2910,
     2911,    0,    0,    0,    0, 2911, 2911,    0,    0, 2910,
        0, 2910,    0,    0,    0,    0, 2911, 2908, 2911, 2912,
     2912,    0, 2912,    0,    0, 2908, 2908, 2908, 2908, 2908,
     2912,    0,    0,    0,    0, 2912, 2912, 2910, 2913, 2913,
        0, 2913,    0, 2911,    0,    0, 2912,    0, 2912, 2913,

        0,    0,    0,    0, 2913, 2913,    0, 2914, 2914,    0,
     2914, 2915, 2915,    0, 2915, 2913,    0, 2913, 2914,    0,
     2912,    0, 2915, 2914, 2914,    0, 3189, 2915, 2915, 3189,
     2916, 2916,    0, 2916, 2914,    0, 2914, 3189, 2915,    0,
     2915, 2916, 3189, 3189,    0,    0, 2916, 2916,    0,    0,
        0,    0, 2913, 3189,    0, 3189,    0, 2916, 2914, 2916,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     2915,    0,    0,    0, 2969, 2969, 2969, 2969, 3189,    0,
     2916, 2965, 2965, 2965, 2965, 2965, 2965, 2965, 2965, 2965,
     2965, 2965, 2965, 2965, 2965, 2965, 2965, 2965, 2965, 2965,

     2965, 2969,    0, 2969,    0, 2973, 2973, 2973, 2973, 2965,
     2965, 2965, 2965, 2965, 2965,    0,    0, 2974, 2974, 2974,
     2974, 2969,    0,    0, 2969,    0,    0,    0, 2965, 2965,
     2965, 2965, 2973,    0, 2973,    0,    0,    0, 2975, 2975,
     2975, 2975,    0,    0, 2974,    0, 2974, 2976, 2976, 2976,
     2976,    0, 2973, 2978, 2978, 2978, 2978,    0,    0, 2965,
     2965, 2965, 2965, 2965, 2974, 2975,    0, 2975,    0,    0,
        0, 2974,    0,    0, 2976, 2973, 2976,    0,    0,    0,
     2978,    0, 2978,    0,    0, 2975, 2979, 2979, 2979, 2979,
     2984, 2984, 2984, 2984, 2976, 3063, 3063, 3063, 3063,    0,

     2978,    0,    0,    0, 2976,    0, 3063,    0, 2975,    0,
        0,    0, 2978, 2979,    0, 2979,    0,    0, 2984,    0,
     2984,    0, 3063, 3192, 3063,    0, 3192, 4124, 4124, 4124,
     4124,    0,    0, 2979, 3192,    0, 2979,    0, 4124, 3192,
     3192,    0, 3063, 2984,    0,    0,    0,    0,    0,    0,
     3192,    0, 3192,    0,    0, 2984, 4124,    0,    0, 2984,
     2984,    0, 2984,    0,    0,    0,    0, 2984, 3028, 3028,
     3028, 3028, 3028, 3028, 3028, 3028, 3028, 3028, 3028, 3028,
     3028, 3028, 3028, 3028, 3028, 3028, 3028, 3028,    0,    0,
        0,    0, 3064, 3064, 3064, 3064, 3028, 3028, 3028, 3028,

     3028, 3028,    0, 3064,    0,    0,    0,    0,    0, 3065,
     3065, 3065, 3065,    0,    0, 3028, 3028, 3028, 3028, 3064,
     3065, 3064,    0,    0, 3067, 3067, 3067, 3067,    0,    0,
     3069, 3069, 3069, 3069,    0, 3067, 3065,    0, 3065, 3064,
        0, 3069,    0,    0,    0,    0, 3028, 3028, 3028, 3028,
     3028, 3067,    0, 3067,    0,    0, 3065, 3069, 3064, 3069,
        0,    0,    0, 3104, 3104, 3104, 3104,    0,    0,    0,
        0, 3067,    0,    0, 3104, 3104,    0, 3069, 3104,    0,
     3336, 3336, 3336, 3336,    0, 3069, 3070, 3070, 3070, 3070,
     3104, 3104, 3104, 3115, 3115, 3115, 3115, 3070, 3070,    0,

        0, 3070,    0,    0, 3115, 3115,    0, 3336, 3115, 3336,
     3104, 3104,    0, 3070, 3070, 3070,    0,    0,    0,    0,
     3115, 3115, 3115,    0,    0,    0,    0, 3336, 3200,    0,
        0, 3200, 3336, 3070, 3070,    0,    0, 3070, 3077, 3200,
     3115, 3115,    0,    0, 3200, 3200,    0, 3077, 3077, 3077,
     3077, 3077, 3077, 3077, 3077, 3200,    0, 3200,    0,    0,
     3199,    0,    0, 3199, 3077,    0, 3077, 3130, 3130, 3130,
     3130, 3199,    0,    0,    0,    0, 3199, 3199, 3130, 3130,
        0, 3200, 3130,    0, 3077,    0,    0, 3199,    0, 3199,
     3077, 3078,    0,    0, 3130, 3130, 3130,    0,    0,    0,

     3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078,    0, 4146,
     4146, 4146, 4146,    0, 3130, 3130,    0, 3078,    0, 3078,
     4146, 3131, 3131, 3131, 3131,    0,    0,    0, 3199,    0,
        0,    0, 3131, 3131,    0,    0, 3131, 3078, 4146, 3168,
     3168, 3168, 3168, 3078, 3102, 3102, 3102, 3102, 3131, 3131,
     3168, 3168,    0,    0, 3168, 3102, 3102,    0,    0, 3102,
        0, 3102,    0,    0,    0,    0, 3168, 3168, 3131, 3131,
        0, 3102, 3102, 3102,    0,    0,    0, 3198,    0,    0,
     3198,    0,    0,    0,    0,    0, 3168, 3168, 3198,    0,
        0, 3102, 3102, 3198, 3198,    0, 3102, 3106, 3106, 3106,

     3106,    0, 3201, 3168, 3198, 3201, 3198,    0, 3106, 3106,
        0,    0, 3106, 3201, 3106,    0,    0,    0, 3201, 3201,
        0,    0,    0,    0, 3106, 3106, 3106,    0,    0, 3201,
     3202, 3201,    0, 3202,    0,    0,    0,    0,    0, 3203,
     3198, 3202, 3203,    0, 3106, 3106, 3202, 3202,    0,    0,
     3203,    0,    0,    0,    0, 3203, 3203, 3202,    0, 3202,
     3106, 3127, 3127, 3127, 3127,    0, 3203, 3204, 3203,    0,
     3204, 3201, 3127, 3127,    0,    0, 3127,    0, 3204,    0,
        0,    0,    0, 3204, 3204,    0, 3202,    0, 3127, 3127,
     3127,    0,    0,    0, 3204, 3206, 3204,    0, 3206, 3208,

        0,    0, 3208, 3203,    0,    0, 3206,    0, 3127, 3127,
     3208, 3206, 3206,    0, 3127, 3208, 3208, 3204,    0,    0,
        0,    0, 3206,    0, 3206,    0, 3208,    0, 3208,    0,
     3127, 3152, 3152, 3152, 3152, 3152, 3152, 3152, 3152, 3152,
     3152, 3152, 3152, 3152, 3152, 3152, 3152, 3152, 3152, 3152,
     3152,    0,    0,    0,    0, 3205,    0,    0, 3205, 3152,
     3152, 3152, 3152, 3152, 3152, 3206, 3205,    0,    0,    0,
     3208, 3205, 3205,    0, 3207,    0,    0, 3207, 3152, 3152,
     3152, 3152, 3205,    0, 3205, 3207,    0,    0,    0,    0,
     3207, 3207,    0, 3809, 3809, 3809, 3809,    0,    0,    0,

        0, 3207,    0, 3207, 3809, 3205,    0,    0,    0, 3152,
     3152, 3152, 3152, 3152, 3167, 3167, 3167, 3167,    0, 3209,
     3809,    0, 3209,    0,    0, 3167, 3167,    0, 3210, 3167,
     3209, 3210,    0, 3207,    0, 3209, 3209,    0,    0, 3210,
     3809, 3167, 3167, 3167, 3210, 3210, 3209, 3211, 3209,    0,
     3211,    0,    0,    0,    0, 3210, 3212, 3210, 3211, 3212,
        0, 3167, 3167, 3211, 3211,    0,    0, 3212,    0,    0,
        0,    0, 3212, 3212, 3211,    0, 3211, 3213, 3167,    0,
     3213, 3209,    0, 3212,    0, 3212, 3214,    0, 3213, 3214,
        0,    0,    0, 3213, 3213,    0,    0, 3214, 3210,    0,

     3211,    0, 3214, 3214, 3213, 3215, 3213,    0, 3215, 3216,
        0,    0, 3216, 3214,    0, 3214, 3215,    0,    0,    0,
     3216, 3215, 3215,    0,    0, 3216, 3216,    0, 3212,    0,
     3212,    0, 3215,    0, 3215,    0, 3216, 3217, 3216,    0,
     3217, 3213, 4155, 4155, 4155, 4155,    0,    0, 3217, 4153,
     4153, 4153, 4153, 3217, 3217,    0, 3221, 3214,    0, 3221,
     4153,    0,    0,    0, 3217, 3222, 3217, 3221, 3222, 4155,
        0, 3215, 3221, 3221,    0,    0, 3222,    0, 4153, 3216,
        0, 3222, 3222, 3221, 3224, 3221,    0, 3224,    0, 4155,
     3217,    0, 3222, 3225, 3222, 3224, 3225,    0,    0,    0,

     3224, 3224,    0,    0, 3225, 3669, 3669, 3669, 3669, 3225,
     3225, 3224,    0, 3224, 3226, 3221,    0, 3226, 3227,    0,
     3225, 3227, 3225,    0,    0, 3226,    0,    0,    0, 3227,
     3226, 3226, 3669, 3228, 3227, 3227, 3228,    0,    0,    0,
     3222, 3226, 3224, 3226, 3228, 3227,    0, 3227, 3229, 3228,
     3228, 3229, 3669,    0,    0,    0,    0,    0, 3225, 3229,
     3228,    0, 3228, 3230, 3229, 3229, 3230, 3226,    0, 3227,
     3669,    0,    0,    0, 3230, 3229,    0, 3229, 3231, 3230,
     3230, 3231,    0,    0,    0, 3669,    0,    0, 3228, 3231,
     3230,    0, 3230, 3232, 3231, 3231, 3232, 3233,    0, 3229,

     3233,    0,    0,    0, 3232, 3231,    0, 3231, 3233, 3232,
     3232,    0,    0, 3233, 3233,    0, 3234,    0,    0, 3234,
     3232,    0, 3232,    0, 3233, 3235, 3233, 3234, 3235, 3230,
        0,    0, 3234, 3234,    0,    0, 3235, 4156, 4156, 4156,
     4156, 3235, 3235, 3234, 3236, 3234, 3231, 3236, 4156,    0,
        0, 3233, 3235,    0, 3235, 3236,    0,    0, 3232,    0,
     3236, 3236,    0,    0,    0, 3237, 4156,    0, 3237,    0,
        0, 3236, 3238, 3236,    0, 3238, 3237,    0,    0,    0,
     3235, 3237, 3237, 3238, 3234,    0,    0,    0, 3238, 3238,
        0,    0, 3237,    0, 3237, 3239,    0,    0, 3239, 3238,

        0, 3238, 3337, 3337, 3337, 3337, 3239,    0,    0,    0,
     3241, 3239, 3239, 3241, 3236,    0,    0,    0,    0,    0,
     3237, 3241, 3239,    0, 3239,    0, 3241, 3241,    0, 3337,
        0, 3337,    0,    0,    0,    0,    0, 3241,    0, 3241,
     3238,    0,    0,    0, 3339, 3339, 3339, 3339,    0, 3337,
     3239, 3240, 3240, 3240, 3240, 3240, 3240, 3240, 3240, 3240,
     3240, 3240, 3240, 3240, 3240, 3240, 3240, 3240, 3240, 3240,
     3240, 3339,    0, 3339,    0, 3241,    0,    0,    0, 3240,
     3240, 3240, 3240, 3240, 3240,    0, 4173, 4173, 4173, 4173,
        0, 3339, 3242,    0,    0, 3242,    0, 4173, 3240, 3240,

     3240, 3240, 3240, 3242,    0,    0,    0, 3243, 3242, 3242,
     3243, 3244,    0,    0, 3244, 4173,    0,    0, 3243, 3242,
        0, 3242, 3244, 3243, 3243,    0,    0, 3244, 3244, 3240,
     3240, 3240, 3240, 3240, 3243,    0, 3243,    0, 3244,    0,
     3244,    0, 3245,    0,    0, 3245, 3347, 3347, 3347, 3347,
        0,    0,    0, 3245,    0,    0,    0, 3243, 3245, 3245,
        0, 3246, 3242,    0, 3246, 3247, 3244,    0, 3247, 3245,
        0, 3245, 3246, 3347,    0, 3347, 3247, 3246, 3246,    0,
     3248, 3247, 3247, 3248, 3249,    0,    0, 3249, 3246,    0,
     3246, 3248, 3247, 3347, 3247, 3249, 3248, 3248, 3245, 3250,

     3249, 3249, 3250, 3343, 3343, 3343, 3343, 3248,    0, 3248,
     3250, 3249,    0, 3249,    0, 3250, 3250,    0, 3251, 3251,
     3247, 3251, 3252, 3252, 3246, 3252, 3250,    0, 3250, 3251,
     3343,    0, 3343, 3252, 3251, 3251,    0,    0, 3252, 3252,
        0,    0, 3248,    0,    0, 3251, 3249, 3251,    0, 3252,
     3343, 3252,    0,    0,    0, 3254, 3254,    0, 3254,    0,
        0,    0, 3258, 3258,    0, 3258, 3254, 3343,    0, 3250,
     3251, 3254, 3254, 3258,    0,    0,    0,    0, 3258, 3258,
        0,    0, 3254,    0, 3254, 3259, 3259,    0, 3259, 3258,
        0, 3258, 3260, 3260,    0, 3260, 3259,    0,    0,    0,

        0, 3259, 3259, 3260,    0,    0,    0,    0, 3260, 3260,
        0,    0, 3259,    0, 3259, 3261, 3261,    0, 3261, 3260,
        0, 3260,    0,    0,    0, 3258, 3261,    0,    0,    0,
        0, 3261, 3261,    0,    0, 3262, 3262,    0, 3262,    0,
        0,    0, 3261,    0, 3261, 3260, 3262,    0,    0,    0,
        0, 3262, 3262, 3259, 3263, 3263,    0, 3263, 3264, 3264,
        0, 3264, 3262,    0, 3262, 3263,    0,    0,    0, 3264,
     3263, 3263,    0,    0, 3264, 3264,    0, 3265, 3265,    0,
     3265, 3263,    0, 3263, 3261, 3264,    0, 3264, 3265,    0,
        0, 3262,    0, 3265, 3265,    0, 3266, 3266,    0, 3266,

        0,    0,    0,    0, 3265,    0, 3265, 3266, 3264,    0,
        0,    0, 3266, 3266,    0,    0,    0,    0, 3263, 3267,
     3267,    0, 3267, 3266,    0, 3266,    0, 3265, 3268, 3268,
     3267, 3268,    0,    0,    0, 3267, 3267,    0,    0, 3268,
        0,    0,    0,    0, 3268, 3268, 3267,    0, 3267,    0,
        0,    0,    0, 3269, 3269, 3268, 3269, 3268,    0,    0,
     3270, 3270,    0, 3270, 3269,    0, 3266,    0,    0, 3269,
     3269, 3270,    0,    0,    0,    0, 3270, 3270, 3267,    0,
     3269,    0, 3269,    0,    0, 3271, 3271, 3270, 3271, 3270,
        0,    0, 3272, 3272,    0, 3272, 3271,    0,    0, 3268,

        0, 3271, 3271, 3272,    0,    0,    0,    0, 3272, 3272,
        0,    0, 3271,    0, 3271, 3269,    0, 3273, 3273, 3272,
     3273, 3272,    0,    0, 3274, 3274,    0, 3274, 3273,    0,
     3270,    0,    0, 3273, 3273, 3274,    0,    0, 3271,    0,
     3274, 3274,    0,    0, 3273,    0, 3273, 3903, 3903, 3903,
     3903, 3274,    0, 3274,    0,    0, 3275, 3275, 3903, 3275,
     3276, 3276,    0, 3276, 3272,    0, 3272, 3275,    0,    0,
        0, 3276, 3275, 3275, 3903,    0, 3276, 3276,    0,    0,
        0, 3273,    0, 3275,    0, 3275,    0, 3276,    0, 3276,
     3277, 3277,    0, 3277, 3903, 3274,    0, 3278, 3278,    0,

     3278, 3277,    0,    0,    0,    0, 3277, 3277, 3278,    0,
        0,    0,    0, 3278, 3278,    0,    0, 3277,    0, 3277,
     3279, 3279, 3275, 3279, 3278,    0, 3278,    0,    0,    0,
     3276, 3279,    0,    0,    0,    0, 3279, 3279,    0,    0,
        0, 3280, 3280, 3277, 3280, 3281, 3281, 3279, 3281, 3279,
     3278,    0, 3280,    0,    0,    0, 3281, 3280, 3280,    0,
     3503, 3281, 3281, 3503, 3282, 3282, 3278, 3282, 3280,    0,
     3280, 3503, 3281,    0, 3281, 3282, 3503, 3503,    0, 3279,
     3282, 3282,    0, 3283, 3283,    0, 3283, 3503,    0, 3503,
        0, 3282,    0, 3282, 3283, 3927, 3927, 3927, 3927, 3283,

     3283,    0,    0, 3281, 3284, 3284, 3927, 3284, 3285, 3285,
     3283, 3285, 3283,    0, 3503, 3284, 3280,    0,    0, 3285,
     3284, 3284, 3927, 3496, 3285, 3285, 3496, 3286, 3286, 3282,
     3286, 3284,    0, 3284, 3496, 3285, 3283, 3285, 3286, 3496,
     3496,    0, 3927, 3286, 3286,    0,    0,    0, 3287, 3287,
     3496, 3287, 3496,    0, 3286, 3284, 3286, 3288, 3288, 3287,
     3288,    0,    0, 3285, 3287, 3287,    0,    0, 3288,    0,
        0,    0,    0, 3288, 3288, 3287,    0, 3287, 3286, 3289,
     3289,    0, 3289, 3496, 3288,    0, 3288,    0, 3290, 3290,
     3289, 3290,    0,    0,    0, 3289, 3289,    0,    0, 3290,

        0,    0,    0,    0, 3290, 3290, 3289,    0, 3289,    0,
     3291, 3291,    0, 3291, 3287, 3290,    0, 3290,    0, 3292,
     3292, 3291, 3292,    0,    0, 3288, 3291, 3291,    0,    0,
     3292,    0,    0,    0,    0, 3292, 3292, 3291,    0, 3291,
     3293, 3293, 3290, 3293, 3289,    0, 3292,    0, 3292,    0,
        0, 3293,    0,    0,    0,    0, 3293, 3293,    0, 3294,
     3294,    0, 3294,    0,    0,    0,    0, 3293,    0, 3293,
     3294,    0,    0,    0, 3292, 3294, 3294,    0, 3291, 3295,
     3295,    0, 3295,    0,    0,    0, 3294,    0, 3294,    0,
     3295,    0,    0,    0,    0, 3295, 3295,    0,    0,    0,

     3296, 3296,    0, 3296,    0,    0, 3295,    0, 3295,    0,
     3293, 3296,    0,    0, 3294,    0, 3296, 3296,    0,    0,
        0, 3299, 3299,    0, 3299, 3298, 3298, 3296, 3298, 3296,
        0,    0, 3299,    0,    0,    0, 3298, 3299, 3299,    0,
        0, 3298, 3298,    0,    0,    0,    0, 3295, 3299,    0,
     3299,    0, 3298,    0, 3298, 3296, 3297, 3297, 3297, 3297,
     3297, 3297, 3297, 3297, 3297, 3297, 3297, 3297, 3297, 3297,
     3297, 3297, 3297, 3297, 3297, 3297,    0,    0,    0,    0,
        0,    0,    0,    0, 3297, 3297, 3297, 3297, 3297, 3297,
     3298, 3299,    0,    0,    0,    0,    0, 3300, 3300,    0,

     3300,    0,    0, 3297, 3297, 3297, 3297, 3297, 3300,    0,
        0,    0,    0, 3300, 3300,    0, 3301, 3301,    0, 3301,
        0,    0,    0,    0, 3300,    0, 3300, 3301,    0,    0,
        0,    0, 3301, 3301, 3297, 3297, 3297, 3297, 3297, 3302,
     3302,    0, 3302, 3301,    0, 3301,    0, 3300, 3303, 3303,
     3302, 3303,    0,    0,    0, 3302, 3302,    0,    0, 3303,
        0,    0,    0,    0, 3303, 3303, 3302,    0, 3302, 3304,
     3304, 3301, 3304, 3305, 3305, 3303, 3305, 3303,    0,    0,
     3304,    0,    0,    0, 3305, 3304, 3304,    0,    0, 3305,
     3305,    0,    0,    0,    0, 3302, 3304,    0, 3304,    0,

     3305,    0, 3305, 3306, 3306,    0, 3306, 3344, 3344, 3344,
     3344, 3303, 3307, 3307, 3306, 3307,    0,    0,    0, 3306,
     3306,    0,    0, 3307, 3304,    0,    0,    0, 3307, 3307,
     3306,    0, 3306,    0, 3344, 3305, 3344,    0,    0, 3307,
        0, 3307, 3345, 3345, 3345, 3345, 3346, 3346, 3346, 3346,
     3348, 3348, 3348, 3348, 3344,    0,    0, 3344, 3349, 3349,
     3349, 3349,    0,    0,    0, 3306,    0, 3498,    0, 3345,
     3498, 3345,    0, 3346,    0, 3346,    0, 3348, 3498, 3348,
        0,    0, 3307, 3498, 3498, 3349,    0, 3349,    0, 3345,
        0,    0, 3345, 3346, 3498,    0, 3498, 3348, 3350, 3350,

     3350, 3350,    0,    0,    0, 3349, 3351, 3351, 3351, 3351,
        0,    0,    0, 3349,    0,    0, 3346,    0, 3348, 3356,
     3356, 3356, 3356,    0,    0, 3350,    0, 3350, 3402, 3402,
     3402, 3402,    0, 3351,    0, 3351,    0, 3498,    0, 3402,
     3403, 3403, 3403, 3403,    0, 3350,    0, 3356,    0, 3356,
        0, 3403,    0, 3351,    0, 3402,    0, 3402,    0,    0,
     3350,    0,    0, 3404, 3404, 3404, 3404, 3403,    0, 3403,
        0,    0, 3356,    0, 3404, 3402, 3351,    0,    0,    0,
     3590, 3590, 3590, 3590, 3356,    0,    0, 3403, 3356, 3356,
     3404, 3356, 3404,    0,    0,    0, 3356, 3407, 3407, 3407,

     3407, 3437, 3437, 3437, 3437,    0,    0, 3590, 3407, 3590,
     3404,    0, 3437, 3437,    0,    0, 3437,    0, 3404,    0,
        0,    0,    0,    0, 3407,    0, 3407, 3590, 3437, 3437,
     3437,    0,    0,    0,    0, 3480, 3480, 3480, 3480,    0,
     3590,    0,    0,    0, 3407,    0, 3480, 3480, 3437, 3437,
     3480,    0,    0,    0,    0,    0,    0,    0, 3593, 3593,
     3593, 3593, 3480, 3480,    0, 3407, 3408, 3408, 3408, 3408,
        0,    0,    0, 3497,    0,    0, 3497, 3408, 3408,    0,
        0, 3408, 3480, 3480, 3497, 3593,    0, 3593,    0, 3497,
     3497,    0,    0, 3408, 3408, 3408,    0,    0,    0, 3480,

     3497,    0, 3497,    0, 3499, 3593,    0, 3499, 3951, 3951,
     3951, 3951, 3593, 3408, 3408, 3499,    0,    0,    0, 3951,
     3499, 3499,    0, 4010, 4010, 4010, 4010,    0, 3497,    0,
        0, 3499,    0, 3499, 4010, 3951, 3408, 3431, 3431, 3431,
     3431,    0, 3500,    0,    0, 3500,    0,    0, 3431, 3431,
     4010,    0, 3431, 3500, 3431, 3951,    0,    0, 3500, 3500,
     3591, 3591, 3591, 3591, 3431, 3431, 3431,    0,    0, 3500,
     4010, 3500,    0,    0, 3499,    0,    0, 3501,    0,    0,
     3501,    0,    0,    0, 3431, 3431,    0, 3591, 3501, 3591,
        0,    0,    0, 3501, 3501,    0,    0, 3431, 3433, 3433,

     3433, 3433,    0,    0, 3501,    0, 3501, 3591,    0, 3433,
     3433,    0, 3500, 3433,    0, 3433,    0,    0,    0,    0,
        0, 3502,    0,    0, 3502, 3433, 3433, 3433,    0,    0,
     3591,    0, 3502,    0,    0,    0,    0, 3502, 3502,    0,
        0,    0,    0,    0,    0, 3433, 3433, 3501, 3502,    0,
     3502,    0,    0, 3433, 3441, 3441, 3441, 3441, 3441, 3441,
     3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441,
     3441, 3441, 3441, 3441,    0,    0,    0,    0, 3890, 3890,
     3890, 3890, 3441, 3441, 3441, 3441, 3441, 3441,    0, 3502,
     3890,    0,    0, 3890, 3506,    0,    0, 3506,    0,    0,

        0, 3441, 3441, 3441, 3441, 3506, 3890,    0,    0,    0,
     3506, 3506,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 3506,    0, 3506,    0,    0, 3890,    0,    0,    0,
        0,    0, 3441, 3441, 3441, 3441, 3441, 3454, 3454, 3454,
     3454, 3454, 3454, 3454, 3454, 3454, 3454, 3454, 3454, 3454,
     3454, 3454, 3454, 3454, 3454, 3454, 3454,    0,    0,    0,
     3506,    0,    0,    0,    0, 3454, 3454, 3454, 3454, 3454,
     3454,    0,    0,    0,    0,    0,    0,    0, 3504,    0,
        0, 3504,    0,    0, 3454, 3454, 3454, 3454, 3454, 3504,
        0,    0,    0,    0, 3504, 3504,    0, 3507,    0,    0,

     3507,    0,    0,    0,    0, 3504,    0, 3504, 3507,    0,
        0,    0,    0, 3507, 3507, 3454, 3454, 3454, 3454, 3454,
     3466, 3466, 3466, 3466, 3507, 3505, 3507,    0, 3505, 3504,
        0, 3466, 3466,    0, 3508, 3466, 3505, 3508,    0,    0,
        0, 3505, 3505,    0,    0, 3508,    0, 3466, 3466, 3466,
     3508, 3508, 3505,    0, 3505, 3509, 3507,    0, 3509,    0,
        0, 3508,    0, 3508,    0,    0, 3509, 3466, 3466,    0,
     3515, 3509, 3509, 3515, 3510, 3466, 3505, 3510,    0, 3466,
        0, 3515, 3509,    0, 3509, 3510, 3515, 3515, 3466, 3508,
     3510, 3510, 3466, 3479, 3479, 3479, 3479, 3515,    0, 3515,

        0, 3510,    0, 3510, 3479, 3479,    0,    0, 3479,    0,
     3509,    0,    0,    0,    0, 3513,    0,    0, 3513,    0,
     3479, 3479, 3479,    0, 3510,    0, 3513, 3868, 3868, 3868,
     3868, 3513, 3513,    0, 3515, 3516,    0,    0, 3516,    0,
     3479, 3479, 3513,    0, 3513,    0, 3516,    0,    0,    0,
     3517, 3516, 3516, 3517, 3868,    0, 3868, 3479,    0,    0,
        0, 3517, 3516,    0, 3516, 3518, 3517, 3517, 3518,    0,
        0,    0,    0,    0, 3868,    0, 3518, 3517,    0, 3517,
     3868, 3518, 3518,    0,    0, 3513,    0,    0, 3520,    0,
        0, 3520, 3518,    0, 3518, 3523,    0, 3516, 3523, 3520,

        0,    0,    0, 3517, 3520, 3520, 3523,    0,    0,    0,
        0, 3523, 3523,    0,    0, 3520,    0, 3520,    0,    0,
        0,    0, 3523,    0, 3523,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 3518, 3519, 3519, 3519, 3519,
     3519, 3519, 3519, 3519, 3519, 3519, 3519, 3519, 3519, 3519,
     3519, 3519, 3519, 3519, 3519, 3519, 3520,    0,    0,    0,
        0,    0,    0, 3523, 3519, 3519, 3519, 3519, 3519, 3519,
        0, 3521,    0,    0, 3521,    0,    0,    0, 3522,    0,
        0, 3522, 3521, 3519, 3519, 3519, 3519, 3521, 3521, 3522,
        0,    0,    0, 3524, 3522, 3522, 3524,    0, 3521,    0,

     3521,    0,    0,    0, 3524, 3522,    0, 3522, 3525, 3524,
     3524, 3525,    0,    0, 3519, 3519, 3519, 3519, 3519, 3525,
     3524,    0, 3524,    0, 3525, 3525, 3521, 3526,    0,    0,
     3526, 3527,    0, 3522, 3527, 3525,    0, 3525, 3526,    0,
        0,    0, 3527, 3526, 3526,    0, 3528, 3527, 3527, 3528,
        0,    0,    0,    0, 3526,    0, 3526, 3528, 3527, 3524,
     3527,    0, 3528, 3528,    0, 3529,    0,    0, 3529,    0,
        0,    0,    0, 3528,    0, 3528, 3529, 3525, 3526,    0,
     3526, 3529, 3529,    0,    0,    0, 3530,    0,    0, 3530,
        0,    0, 3529, 3531, 3529, 3527, 3531, 3530,    0,    0,

        0, 3528, 3530, 3530, 3531,    0,    0,    0, 3532, 3531,
     3531, 3532,    0, 3530,    0, 3530,    0,    0,    0, 3532,
     3531,    0, 3531,    0, 3532, 3532,    0, 3529, 3533,    0,
        0, 3533,    0,    0,    0, 3532,    0, 3532,    0, 3533,
        0,    0,    0,    0, 3533, 3533,    0,    0, 3531,    0,
     3530,    0,    0, 3534, 3534, 3533, 3534, 3533,    0,    0,
     3535, 3535, 3532, 3535, 3534,    0,    0,    0,    0, 3534,
     3534, 3535,    0,    0,    0,    0, 3535, 3535,    0,    0,
     3534,    0, 3534, 3533,    0, 3536, 3536, 3535, 3536, 3535,
        0,    0, 3537, 3537,    0, 3537, 3536,    0,    0,    0,

        0, 3536, 3536, 3537,    0,    0,    0,    0, 3537, 3537,
        0,    0, 3536, 3534, 3536, 3535,    0, 3538, 3538, 3537,
     3538, 3537,    0,    0, 3539, 3539,    0, 3539, 3538,    0,
        0,    0,    0, 3538, 3538, 3539,    0,    0,    0,    0,
     3539, 3539,    0,    0, 3538,    0, 3538, 3540, 3540,    0,
     3540, 3539,    0, 3539,    0, 3536, 3541, 3541, 3540, 3541,
        0,    0, 3537, 3540, 3540,    0,    0, 3541,    0,    0,
        0,    0, 3541, 3541, 3540, 3711, 3540,    0, 3711, 3542,
     3542,    0, 3542, 3541,    0, 3541, 3711, 3538,    0,    0,
     3542, 3711, 3711,    0, 3539, 3542, 3542,    0,    0,    0,

     3543, 3543, 3711, 3543, 3711,    0, 3542,    0, 3542,    0,
     3541, 3543,    0,    0,    0, 3540, 3543, 3543,    0,    0,
     3544, 3544,    0, 3544,    0,    0,    0, 3543, 3711, 3543,
     3542, 3544,    0,    0,    0,    0, 3544, 3544,    0, 3545,
     3545,    0, 3545, 3629, 3629, 3629, 3629, 3544,    0, 3544,
     3545, 3543,    0,    0, 3629, 3545, 3545,    0, 3546, 3546,
        0, 3546, 3547, 3547,    0, 3547, 3545,    0, 3545, 3546,
     3629,    0, 3629, 3547, 3546, 3546,    0,    0, 3547, 3547,
        0,    0,    0,    0,    0, 3546, 3544, 3546,    0, 3547,
     3629, 3547, 3548, 3548,    0, 3548,    0,    0, 3545, 3549,

     3549,    0, 3549, 3548,    0,    0,    0,    0, 3548, 3548,
     3549, 3629,    0, 3546,    0, 3549, 3549, 3547,    0, 3548,
        0, 3548, 3550, 3550,    0, 3550, 3549,    0, 3549, 3551,
     3551,    0, 3551, 3550,    0,    0,    0,    0, 3550, 3550,
     3551,    0, 3548,    0,    0, 3551, 3551,    0,    0, 3550,
        0, 3550,    0,    0, 3552, 3552, 3551, 3552, 3551,    0,
        0, 3553, 3553,    0, 3553, 3552,    0,    0,    0, 3549,
     3552, 3552, 3553,    0,    0,    0,    0, 3553, 3553,    0,
        0, 3552,    0, 3552, 3555, 3555, 3550, 3555, 3553,    0,
     3553, 3551,    0, 3559, 3559, 3555, 3559,    0,    0,    0,

     3555, 3555,    0,    0, 3559,    0,    0, 3552,    0, 3559,
     3559, 3555,    0, 3555,    0,    0,    0,    0,    0,    0,
     3559,    0, 3559,    0,    0,    0,    0,    0,    0,    0,
        0, 3553, 3554, 3554, 3554, 3554, 3554, 3554, 3554, 3554,
     3554, 3554, 3554, 3554, 3554, 3554, 3554, 3554, 3554, 3554,
     3554, 3554, 3555,    0,    0,    0,    0,    0,    0, 3559,
     3554, 3554, 3554, 3554, 3554, 3554,    0, 3556, 3556,    0,
     3556,    0,    0,    0, 3557, 3557,    0, 3557, 3556, 3554,
     3554, 3554, 3554, 3556, 3556, 3557,    0,    0,    0,    0,
     3557, 3557,    0,    0, 3556,    0, 3556,    0,    0,    0,

        0, 3557,    0, 3557, 3558, 3558,    0, 3558,    0,    0,
     3554, 3554, 3554, 3554, 3554, 3558,    0,    0,    0,    0,
     3558, 3558, 3556, 3560, 3560,    0, 3560, 3561, 3561, 3557,
     3561, 3558,    0, 3558, 3560,    0,    0,    0, 3561, 3560,
     3560,    0,    0, 3561, 3561,    0, 3562, 3562,    0, 3562,
     3560,    0, 3560,    0, 3561,    0, 3561, 3562,    0,    0,
        0,    0, 3562, 3562,    0,    0, 3563, 3563,    0, 3563,
        0,    0, 3558, 3562,    0, 3562,    0, 3563, 3561,    0,
     3561,    0, 3563, 3563,    0, 3564, 3564,    0, 3564,    0,
        0,    0, 3560, 3563,    0, 3563, 3564, 4034, 4034, 4034,

     4034, 3564, 3564,    0,    0,    0, 3565, 3565, 4034, 3565,
     3562,    0, 3564,    0, 3564,    0,    0, 3565,    0,    0,
        0, 3563, 3565, 3565, 4034, 3566, 3566,    0, 3566, 3567,
     3567,    0, 3567, 3565,    0, 3565, 3566,    0,    0,    0,
     3567, 3566, 3566,    0, 4034, 3567, 3567, 3564, 3568, 3568,
        0, 3568, 3566,    0, 3566,    0, 3567,    0, 3567, 3568,
     3592, 3592, 3592, 3592, 3568, 3568, 3594, 3594, 3594, 3594,
     3565, 3630, 3630, 3630, 3630, 3568,    0, 3568,    0,    0,
     3566,    0, 3630, 3567,    0, 3706,    0, 3592, 3706, 3592,
        0,    0,    0, 3594,    0, 3594, 3706,    0, 3630,    0,

     3630, 3706, 3706, 3568,    0,    0,    0, 3592, 3632, 3632,
     3632, 3632, 3706, 3594, 3706,    0,    0,    0, 3630,    0,
     3632, 3594, 3630, 3632,    0,    0,    0,    0,    0,    0,
     3592, 3631, 3631, 3631, 3631, 3632, 3632, 3635, 3635, 3635,
     3635,    0, 3631, 3631,    0,    0, 3631,    0, 3635, 3706,
        0,    0,    0,    0,    0, 3632, 3632,    0, 3631, 3631,
     3631,    0,    0,    0, 3635,    0, 3635,    0,    0,    0,
     3651, 3651, 3651, 3651,    0,    0,    0,    0, 3631, 3631,
        0, 3651, 3651,    0, 3635, 3651,    0, 3758, 3758, 3758,
     3758,    0, 3652, 3652, 3652, 3652, 3631, 3651, 3651, 3651,

        0,    0,    0, 3652, 3652,    0,    0, 3652,    0,    0,
        0,    0,    0,    0, 3758,    0, 3758, 3651, 3651, 3652,
     3652, 3661, 3661, 3661, 3661,    0, 3662, 3662, 3662, 3662,
        0,    0, 3661, 3661, 3758,    0, 3661, 3662, 3662, 3652,
     3652, 3662, 3758,    0,    0,    0,    0,    0, 3661, 3661,
     3661,    0,    0, 3662, 3662, 3673, 3673, 3673, 3673,    0,
     3717,    0,    0, 3717,    0,    0, 3673, 3673, 3661, 3661,
     3673, 3717,    0, 3662, 3662,    0, 3717, 3717,    0,    0,
        0,    0, 3673, 3673, 3673,    0,    0, 3717,    0, 3717,
        0,    0,    0,    0,    0,    0,    0, 3976, 3976, 3976,

     3976,    0, 3673, 3673, 3674, 3674, 3674, 3674, 3674, 3674,
     3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674,
     3674, 3674, 3674, 3674, 3976,    0, 3976,    0, 3675, 3675,
     3675, 3675, 3674, 3674, 3674, 3674, 3674, 3674,    0, 3675,
     3675,    0,    0, 3675, 3976,    0,    0,    0,    0,    0,
        0, 3674, 3674, 3674, 3674, 3675, 3675, 3675,    0,    0,
     3674,    0, 3676, 3676, 3676, 3676,    0, 3976,    0, 3778,
     3778, 3778, 3778, 3676, 3676, 3675, 3675, 3676,    0,    0,
     3778,    0, 3674, 3674, 3674, 3674, 3674,    0, 3705, 3676,
     3676, 3705,    0,    0,    0,    0, 3778,    0, 3778, 3705,

        0,    0,    0,    0, 3705, 3705,    0,    0,    0, 3676,
     3676, 3677, 3677, 3677, 3677, 3705, 3778, 3705, 3707,    0,
     3778, 3707, 3677, 3677,    0,    0, 3677,    0,    0, 3707,
        0,    0,    0, 3709, 3707, 3707, 3709,    0, 3677, 3677,
     3677,    0,    0, 3705, 3709, 3707,    0, 3707,    0, 3709,
     3709,    0, 3708,    0,    0, 3708,    0,    0, 3677, 3677,
     3709,    0, 3709, 3708, 3677,    0,    0,    0, 3708, 3708,
     3677,    0,    0,    0,    0, 3677,    0,    0,    0, 3708,
     3677, 3708, 3677, 3679, 3679, 3679, 3679, 3707,    0, 3789,
     3789, 3789, 3789,    0, 3679, 3679,    0,    0, 3679,    0,

     3789, 3709,    0,    0,    0,    0, 3710,    0,    0, 3710,
     3679, 3679, 3679,    0, 3708,    0, 3789, 3710, 3789,    0,
        0,    0, 3710, 3710,    0,    0,    0,    0,    0,    0,
     3679, 3679,    0, 3710,    0, 3710, 3789,    0, 3679,    0,
        0,    0, 3679,    0,    0,    0,    0,    0,    0,    0,
        0, 3679,    0,    0,    0, 3679, 3690, 3690, 3690, 3690,
     3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690,
     3690, 3690, 3690, 3690, 3690, 3690, 3710,    0,    0,    0,
        0,    0,    0,    0, 3690, 3690, 3690, 3690, 3690, 3690,
        0,    0,    0,    0,    0,    0,    0, 3714,    0,    0,

     3714,    0,    0, 3690, 3690, 3690, 3690, 3690, 3714,    0,
        0,    0, 3723, 3714, 3714, 3723, 3724,    0,    0, 3724,
        0,    0,    0, 3723, 3714,    0, 3714, 3724, 3723, 3723,
        0,    0, 3724, 3724, 3690, 3690, 3690, 3690, 3690, 3723,
        0, 3723,    0, 3724, 3725, 3724,    0, 3725, 3726,    0,
        0, 3726, 3714,    0,    0, 3725,    0,    0,    0, 3726,
     3725, 3725,    0,    0, 3726, 3726, 3723,    0,    0, 3727,
        0, 3725, 3727, 3725,    0, 3726, 3728, 3726,    0, 3728,
     3727,    0,    0,    0, 3724, 3727, 3727, 3728,    0,    0,
        0, 3729, 3728, 3728, 3729,    0, 3727,    0, 3727, 3726,

        0,    0, 3729, 3728,    0, 3728,    0, 3729, 3729,    0,
        0,    0,    0, 3725,    0,    0, 3730, 3730, 3729, 3730,
     3729,    0,    0, 3731, 3731,    0, 3731, 3730, 3727,    0,
        0,    0, 3730, 3730, 3731,    0,    0,    0,    0, 3731,
     3731, 3728,    0, 3730,    0, 3730, 3732, 3732,    0, 3732,
     3731,    0, 3731,    0,    0,    0,    0, 3732,    0,    0,
        0, 3729, 3732, 3732,    0, 3733, 3733,    0, 3733, 3734,
     3734, 3730, 3734, 3732,    0, 3732, 3733,    0,    0,    0,
     3734, 3733, 3733,    0,    0, 3734, 3734, 3731,    0,    0,
     3735, 3735, 3733, 3735, 3733,    0, 3734,    0, 3734,    0,

        0, 3735,    0,    0,    0,    0, 3735, 3735,    0, 3736,
     3736,    0, 3736, 3737, 3737, 3732, 3737, 3735,    0, 3735,
     3736,    0,    0,    0, 3737, 3736, 3736, 3733, 3845, 3737,
     3737, 3845, 3738, 3738,    0, 3738, 3736, 3734, 3736, 3845,
     3737,    0, 3737, 3738, 3845, 3845,    0,    0, 3738, 3738,
        0,    0,    0, 3740, 3740, 3845, 3740, 3845,    0, 3738,
     3735, 3738, 3736,    0, 3740,    0,    0,    0, 3737, 3740,
     3740,    0, 3744, 3744,    0, 3744, 3745, 3745,    0, 3745,
     3740, 3845, 3740, 3744,    0,    0,    0, 3745, 3744, 3744,
        0,    0, 3745, 3745,    0, 3746, 3746,    0, 3746, 3744,

        0, 3744,    0, 3745,    0, 3745, 3746,    0,    0,    0,
        0, 3746, 3746,    0, 3747, 3747,    0, 3747, 3748, 3748,
        0, 3748, 3746,    0, 3746, 3747, 3744,    0,    0, 3748,
     3747, 3747,    0,    0, 3748, 3748,    0,    0,    0, 3749,
     3749, 3747, 3749, 3747, 3745, 3748,    0, 3748,    0,    0,
     3749, 3779, 3779, 3779, 3779, 3749, 3749,    0, 3750, 3750,
        0, 3750, 3779,    0, 3746, 3747, 3749,    0, 3749, 3750,
     3790, 3790, 3790, 3790, 3750, 3750,    0, 3748, 3779,    0,
     3779, 3790,    0,    0,    0, 3750,    0, 3750, 3781, 3781,
     3781, 3781,    0,    0,    0,    0,    0, 3790, 3779, 3790,

     3781,    0,    0, 3781, 3749,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 3781, 3781, 3790,    0,    0,
        0, 3779, 3782, 3782, 3782, 3782,    0,    0, 3750, 3780,
     3780, 3780, 3780,    0, 3782, 3781, 3781, 3782,    0,    0,
     3780, 3780,    0,    0, 3780,    0,    0,    0,    0, 3782,
     3782, 3798, 3798, 3798, 3798,    0, 3780, 3780, 3780,    0,
        0,    0, 3798, 3798,    0,    0, 3798,    0,    0, 3782,
     3782,    0,    0,    0,    0,    0, 3780, 3780, 3798, 3798,
     3798, 3799, 3799, 3799, 3799,    0,    0,    0,    0,    0,
        0,    0, 3799, 3799,    0,    0, 3799, 3780, 3798, 3798,

        0,    0,    0, 3804, 3804, 3804, 3804,    0, 3799, 3799,
     3811, 3811, 3811, 3811, 3804, 3804,    0,    0, 3804,    0,
        0, 3811, 3811,    0,    0, 3811,    0,    0, 3799, 3799,
     3804, 3804, 3804, 3813, 3813, 3813, 3813, 3811, 3811, 3811,
        0,    0,    0,    0, 3813, 3813,    0,    0, 3813,    0,
     3804, 3804,    0,    0,    0,    0,    0, 3811, 3811,    0,
     3813, 3813, 3813,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     3813, 3813, 3815, 3815,    0, 3815, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815,

     3815, 3815,    0,    0,    0,    0, 3837, 3837, 3837, 3837,
     3815, 3815, 3815, 3815, 3815, 3815,    0, 3837, 3837,    0,
        0, 3837,    0,    0,    0,    0,    0,    0,    0, 3815,
     3815, 3815, 3815, 3837, 3837, 3837,    0,    0, 3815,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 3837, 3837,    0,    0,    0,    0,    0,
     3815, 3815, 3815, 3815, 3815, 3818, 3818,    0, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818,    0,    0,    0,    0,    0,
        0,    0,    0, 3818, 3818, 3818, 3818, 3818, 3818, 3818,

     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3820, 3820,
        0, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,

     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821,    0,    0,    0,    0,    0,    0,    0,    0, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,

     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3846,    0,    0, 3846, 3847,    0,
        0, 3847,    0,    0,    0, 3846,    0,    0,    0, 3847,
     3846, 3846,    0, 3850, 3847, 3847, 3850, 3851,    0,    0,
     3851, 3846,    0, 3846, 3850, 3847,    0, 3847, 3851, 3850,
     3850,    0,    0, 3851, 3851,    0, 3852,    0,    0, 3852,
     3850,    0, 3850,    0, 3851, 3853, 3851, 3852, 3853, 3847,
        0,    0, 3852, 3852,    0,    0, 3853,    0,    0,    0,
        0, 3853, 3853, 3852, 3846, 3852, 3854,    0, 3850, 3854,
        0,    0, 3853,    0, 3853,    0,    0, 3854,    0,    0,

        0,    0, 3854, 3854,    0,    0, 3851, 3855, 3855,    0,
     3855, 3856, 3856, 3854, 3856, 3854,    0,    0, 3855,    0,
        0,    0, 3856, 3855, 3855, 3852,    0, 3856, 3856,    0,
        0,    0, 3857, 3857, 3855, 3857, 3855,    0, 3856, 3854,
     3856, 3853,    0, 3857,    0,    0,    0,    0, 3857, 3857,
        0, 3858, 3858,    0, 3858, 3859, 3859,    0, 3859, 3857,
     3855, 3857, 3858,    0,    0,    0, 3859, 3858, 3858,    0,
        0, 3859, 3859,    0, 3860, 3860,    0, 3860, 3858,    0,
     3858, 3856, 3859, 3857, 3859, 3860,    0,    0,    0,    0,
     3860, 3860,    0, 3861, 3861,    0, 3861,    0,    0,    0,

        0, 3860,    0, 3860, 3861,    0, 3858,    0,    0, 3861,
     3861,    0, 3862, 3862,    0, 3862,    0,    0,    0,    0,
     3861,    0, 3861, 3862, 3859,    0,    0,    0, 3862, 3862,
        0, 3884, 3884, 3884, 3884, 3885, 3885, 3885, 3885, 3862,
        0, 3862, 3884, 3860,    0,    0, 3885,    0,    0,    0,
     3957,    0,    0, 3957,    0,    0,    0,    0, 3884,    0,
     3884, 3957, 3885,    0, 3885, 3862, 3957, 3957,    0, 3861,
     3967, 3967,    0, 3967,    0,    0,    0, 3957, 3884, 3957,
        0, 3967, 3885,    0,    0,    0, 3967, 3967,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 3967,    0, 3967,

     3885, 3884, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3904, 3904, 3904, 3904,    0,
        0,    0, 3907, 3907, 3907, 3907, 3904, 3904,    0, 3965,

     3904,    0, 3965, 3907, 3907,    0,    0, 3907,    0,    0,
     3965,    0, 3904, 3904, 3904, 3965, 3965,    0,    0, 3907,
     3907, 3907,    0,    0,    0,    0, 3965,    0, 3965,    0,
        0,    0, 3904, 3904,    0,    0,    0,    0, 3904, 3907,
     3907,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     3965,    0,    0,    0, 3904, 3912, 3912,    0, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,

     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3917, 3917,
        0, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917,
     3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917,    0,    0,
        0,    0, 3946, 3946, 3946, 3946, 3917, 3917, 3917, 3917,
     3917, 3917,    0, 3946, 3946,    0,    0, 3946,    0,    0,
        0,    0,    0,    0,    0, 3917, 3917, 3917, 3917, 3946,
     3946, 3946,    0,    0, 3917,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0, 3946,
     3946,    0,    0,    0,    0,    0, 3917, 3917, 3917, 3917,
     3917, 3919, 3919,    0, 3919, 3919, 3919, 3919, 3919, 3919,
     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,
     3919,    0,    0,    0,    0,    0,    0,    0,    0, 3919,
     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,
     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,
     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,
     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,
     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,

     3919, 3919, 3919, 3919, 3920, 3920,    0, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,

     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3926, 3926,    0, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,

     3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931,    0,    0,    0,    0,    0,    0,    0,
        0, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,

     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932,    0,    0,    0,    0,
        0,    0,    0,    0, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,

     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3956,
        0,    0, 3956, 3958,    0,    0, 3958,    0,    0,    0,
     3956,    0,    0,    0, 3958, 3956, 3956,    0, 3961, 3958,
     3958, 3961, 3962,    0,    0, 3962, 3956,    0, 3956, 3961,
     3958,    0, 3958, 3962, 3961, 3961,    0, 3963, 3962, 3962,
     3963, 3964,    0,    0, 3964, 3961,    0, 3961, 3963, 3962,
        0, 3962, 3964, 3963, 3963,    0,    0, 3964, 3964,    0,
        0,    0, 3966, 3966, 3963, 3966, 3963,    0, 3964, 3956,
     3964,    0, 3958, 3966,    0,    0,    0, 3962, 3966, 3966,

        0, 3968, 3968,    0, 3968,    0,    0,    0, 3961, 3966,
        0, 3966, 3968,    0,    0,    0, 3964, 3968, 3968,    0,
     3969, 3969,    0, 3969,    0,    0,    0, 3963, 3968,    0,
     3968, 3969,    0,    0,    0,    0, 3969, 3969,    0, 3970,
     3970,    0, 3970,    0,    0,    0,    0, 3969,    0, 3969,
     3970,    0, 3966,    0,    0, 3970, 3970,    0, 3971, 3971,
        0, 3971, 3972, 3972,    0, 3972, 3970,    0, 3970, 3971,
     3968,    0,    0, 3972, 3971, 3971,    0,    0, 3972, 3972,
        0, 3973, 3973,    0, 3973, 3971,    0, 3971,    0, 3972,
     3969, 3972, 3973,    0, 3970,    0,    0, 3973, 3973,    0,

     3991, 3991, 3991, 3991, 3992, 3992, 3992, 3992, 3973,    0,
     3973, 3991,    0,    0,    0, 3992,    0, 3972,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 3991, 3971, 3991,
        0, 3992, 3973, 3992, 3993, 3993, 3993, 3993,    0,    0,
        0, 4000, 4000, 4000, 4000, 3993, 3993, 3991,    0, 3993,
        0, 3992, 4000, 4000,    0,    0, 4000,    0,    0,    0,
        0, 3993, 3993, 3993,    0, 3991,    0,    0, 4000, 4000,
     4000,    0, 3992,    0,    0,    0,    0,    0,    0,    0,
        0, 3993, 3993,    0,    0,    0,    0,    0, 4000, 4000,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,

     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4009, 4009, 4009, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015,    0,    0,    0,    0,    0,    0,    0,

        0, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4016, 4016, 4016, 4016,
     4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016,
     4016, 4016, 4016, 4016, 4016, 4016,    0,    0,    0,    0,
        0,    0,    0,    0, 4016, 4016, 4016, 4016, 4016, 4016,
     4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016,

     4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016,
     4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016,
     4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016,
     4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,

     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,
     4018, 4018,    0,    0,    0,    0,    0,    0,    0,    0,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,

     4018, 4018, 4018, 4018, 4018, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019,    0,    0,    0,    0,    0,
        0,    0,    0, 4019, 4019, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,

     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4040,    0,    0, 4040, 4041,    0,    0, 4041,    0,
        0,    0, 4040,    0,    0,    0, 4041, 4040, 4040,    0,
     4042, 4041, 4041, 4042, 4043,    0,    0, 4043, 4040,    0,

     4040, 4042, 4041,    0, 4041, 4043, 4042, 4042,    0,    0,
     4043, 4043,    0, 4044,    0,    0, 4044, 4042,    0, 4042,
        0, 4043,    0, 4043, 4044, 4041,    0,    0,    0, 4044,
     4044,    0,    0, 4045, 4045,    0, 4045,    0,    0,    0,
     4044, 4040, 4044,    0, 4045,    0,    0,    0, 4043, 4045,
     4045,    0, 4046, 4046,    0, 4046, 4047, 4047, 4042, 4047,
     4045,    0, 4045, 4046,    0,    0,    0, 4047, 4046, 4046,
        0,    0, 4047, 4047,    0, 4044,    0,    0,    0, 4046,
        0, 4046,    0, 4047,    0, 4047, 4048, 4048,    0, 4048,
        0,    0,    0,    0,    0,    0,    0, 4048,    0,    0,

        0,    0, 4048, 4048,    0,    0, 4047, 4049, 4049,    0,
     4049,    0,    0, 4048,    0, 4048, 4050, 4050, 4049, 4050,
        0,    0, 4046, 4049, 4049,    0,    0, 4050, 4063, 4063,
     4063, 4063, 4050, 4050, 4049, 4098, 4049,    0, 4098, 4063,
        0,    0,    0, 4050,    0, 4050, 4098, 4077, 4077, 4077,
     4077, 4098, 4098,    0, 4048, 4063,    0, 4063, 4077,    0,
        0, 4049, 4098,    0, 4098,    0, 4100, 4100,    0, 4100,
        0,    0,    0,    0, 4077, 4063, 4077, 4100, 4050,    0,
        0,    0, 4100, 4100,    0,    0,    0,    0, 4098,    0,
        0,    0,    0, 4100, 4077, 4100, 4063, 4064, 4064, 4064,

     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064,    0,    0, 4100,
        0, 4083, 4083, 4083, 4083, 4064, 4064, 4064, 4064, 4064,
     4064,    0,    0, 4083,    0,    0, 4083,    0,    0,    0,
        0,    0,    0,    0, 4064, 4064, 4064, 4064, 4083, 4083,
     4083,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4083, 4083,
        0,    0,    0,    0,    0, 4064, 4064, 4064, 4064, 4064,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,

        0,    0,    0,    0,    0,    0,    0,    0, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4080, 4080,    0, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,

     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,

     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4099,
        0,    0, 4099, 4101, 4101,    0, 4101,    0,    0,    0,
     4099,    0,    0,    0, 4101, 4099, 4099,    0,    0, 4101,
     4101,    0,    0,    0,    0,    0, 4099,    0, 4099,    0,
     4101,    0, 4101,    0,    0,    0,    0,    0,    0, 4164,
        0,    0, 4164, 4136,    0,    0, 4136,    0,    0,    0,
     4164,    0,    0,    0, 4136, 4164, 4164,    0,    0, 4136,
     4136,    0,    0,    0,    0,    0, 4164,    0, 4164, 4099,

     4136,    0, 4136, 4101, 4110, 4110, 4110, 4110, 4110, 4110,
     4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110,
     4110, 4110, 4110, 4110, 4136,    0,    0,    0, 4137, 4137,
        0, 4137, 4110, 4110, 4110, 4110, 4110, 4110, 4164, 4137,
        0,    0,    0,    0, 4137, 4137,    0,    0,    0,    0,
        0, 4110, 4110, 4110, 4110, 4137,    0, 4137,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 4137,
        0,    0, 4110, 4110, 4110, 4110, 4110, 4114, 4114,    0,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,

     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4117, 4117,    0, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
        0,    0,    0,    0,    0,    0,    0,    0, 4117, 4117,

     4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4120, 4120,    0, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,

     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4123, 4123,    0, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,

     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4152,
     4152,    0, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,

     4152, 4152, 4165, 4165,    0, 4165, 4179,    0,    0, 4179,
        0,    0,    0, 4165,    0,    0,    0, 4179, 4165, 4165,
        0,    0, 4179, 4179,    0, 4180, 4180,    0, 4180, 4165,
        0, 4165,    0, 4179,    0, 4179, 4180,    0,    0,    0,
        0, 4180, 4180,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4180,    0, 4180,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4165,    0,    0,    0,    0, 4179,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4180, 4195, 4195, 4195, 4195,

     4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195,
     4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195,
     4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4196,
     4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196,
     4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196,
     4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196,
     4196, 4196, 4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197,
     4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197,
     4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197,
     4197, 4197, 4197, 4197, 4197, 4198, 4198, 4198, 4198, 4198,

     4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198,
     4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198,
     4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4199, 4199,
     4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199,
     4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199,
     4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199,
     4199, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200,
     4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200,
     4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200,
     4200, 4200, 4200, 4200, 4201, 4201, 4201, 4201, 4201, 4201,

     4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201,
     4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201,
     4201, 4201, 4201, 4201, 4201, 4201, 4201, 4202, 4202, 4202,
     4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,
     4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,
     4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,
     4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203,
     4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203,
     4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203, 4203,
     4203, 4203, 4203, 4204, 4204, 4204, 4204, 4204, 4204, 4204,

     4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204,
     4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204,
     4204, 4204, 4204, 4204, 4204, 4204, 4205, 4205, 4205, 4205,
     4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205,
     4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205,
     4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205, 4206,
     4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206,
     4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206,
     4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206,
     4206, 4206, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207,

     4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207,
     4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207,
     4207, 4207, 4207, 4207, 4207, 4208, 4208, 4208, 4208, 4208,
     4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208,
     4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208,
     4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4209, 4209,
        0,    0, 4209,    0, 4209, 4209, 4209, 4209, 4209, 4209,
     4209, 4209, 4209, 4209, 4209, 4209, 4209, 4209, 4209, 4209,
     4209, 4209, 4209, 4209,    0, 4209, 4209, 4209, 4209, 4209,
     4209, 4210, 4210,    0, 4210, 4210, 4210, 4210, 4210, 4210,

     4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210,
     4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210,
     4210, 4210, 4210, 4210, 4211, 4211,    0,    0, 4211, 4211,
     4211,    0, 4211, 4211, 4211, 4211, 4211, 4211, 4211, 4211,
     4211, 4211, 4211, 4211, 4211, 4211, 4211, 4211, 4211, 4211,
        0, 4211, 4211, 4211, 4211, 4211, 4211, 4212, 4212,    0,
     4212, 4212,    0, 4212, 4212, 4212, 4212, 4212, 4212, 4212,
     4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212,
     4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212,
     4213, 4213,    0, 4213, 4213,    0, 4213, 4213, 4213, 4213,

     4213, 4213, 4213, 4213,    0, 4213, 4213, 4213, 4213, 4213,
     4213, 4213, 4213, 4213, 4213, 4213,    0, 4213, 4213, 4213,
     4213, 4213, 4213, 4214, 4214, 4214, 4214, 4214, 4214, 4214,
     4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214,
     4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214,
     4214, 4214, 4214, 4214, 4214, 4214, 4215, 4215,    0, 4215,
     4215, 4215, 4215, 4215, 4215, 4215,    0, 4215, 4215, 4215,
     4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215,
     4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4216,
     4216,    0, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216,

     4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216,
     4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216,
     4216, 4216, 4217, 4217,    0,    0, 4217, 4217, 4217, 4217,
     4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217,
     4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217,
     4217, 4217, 4217, 4217, 4217, 4218, 4218,    0, 4218, 4218,
     4218, 4218, 4218, 4218, 4218,    0, 4218, 4218, 4218, 4218,
     4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218,
     4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218, 4219, 4219,
     4219, 4219,    0, 4219,    0, 4219, 4219,    0, 4219,    0,

     4219,    0, 4219, 4219, 4219, 4219,    0, 4219, 4219, 4219,
     4219, 4219,    0, 4219, 4219, 4219,    0,    0,    0, 4219,
     4220, 4220,    0, 4220, 4220, 4220, 4220, 4220, 4220, 4220,
     4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220,
     4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220,
     4220, 4220, 4220, 4221, 4221, 4221, 4221,    0, 4221,    0,
     4221, 4221,    0,    0,    0,    0,    0,    0, 4221,    0,
        0,    0, 4221, 4221, 4221, 4221, 4221,    0, 4221,    0,
     4221,    0,    0, 4221, 4221, 4222, 4222, 4222, 4222,    0,
     4222,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0, 4222, 4222, 4222, 4222, 4222,    0,
        0,    0, 4222,    0,    0,    0, 4222, 4223,    0,    0,
     4223,    0, 4223,    0, 4223,    0,    0,    0, 4223, 4223,
        0, 4223, 4223,    0, 4223,    0, 4223, 4223, 4223, 4223,
     4223,    0,    0,    0, 4223,    0,    0,    0, 4223, 4224,
     4224, 4224, 4224,    0, 4224,    0, 4224,    0,    0,    0,
        0,    0,    0, 4224, 4224,    0, 4224,    0, 4224, 4224,
     4224, 4224, 4224,    0, 4224,    0, 4224,    0,    0,    0,
     4224, 4225, 4225, 4225, 4225,    0, 4225,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 4225,    0,    0,    0,

     4225, 4225, 4225, 4225, 4225,    0, 4225,    0, 4225,    0,
        0, 4225, 4225, 4226, 4226, 4226, 4226,    0, 4226,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4226, 4226, 4226, 4226, 4226,    0,    0,    0,
     4226,    0,    0,    0, 4226, 4227, 4227,    0, 4227,    0,
     4227,    0, 4227,    0,    0,    0, 4227, 4227,    0, 4227,
     4227,    0, 4227,    0, 4227, 4227, 4227, 4227, 4227,    0,
        0,    0, 4227,    0,    0,    0, 4227, 4228,    0,    0,
     4228,    0, 4228,    0,    0,    0,    0,    0,    0,    0,
        0, 4228,    0,    0,    0,    0, 4228, 4228, 4228, 4228,

     4228,    0,    0,    0, 4228, 4228,    0,    0, 4228, 4229,
        0,    0, 4229,    0, 4229,    0, 4229,    0,    0,    0,
        0, 4229,    0, 4229, 4229,    0,    0,    0, 4229, 4229,
     4229, 4229, 4229,    0, 4229,    0, 4229,    0,    0,    0,
     4229, 4230,    0,    0,    0,    0,    0,    0, 4230,    0,
     4230,    0,    0,    0,    0, 4230, 4230, 4230, 4230, 4230,
        0,    0,    0, 4230,    0,    0,    0, 4230, 4231,    0,
        0,    0,    0,    0,    0,    0,    0, 4231,    0,    0,
        0,    0, 4231, 4231, 4231, 4231, 4231,    0,    0,    0,
     4231,    0,    0,    0, 4231, 4232,    0,    0,    0,    0,

        0,    0,    0,    0, 4232, 4232,    0,    0,    0, 4232,
     4232, 4232, 4232, 4232,    0, 4232,    0, 4232,    0,    0,
        0, 4232, 4233,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 4233, 4233, 4233, 4233,
     4233,    0,    0,    0, 4233,    0,    0,    0, 4233, 4234,
     4234,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4234, 4234, 4234, 4234, 4234,    0,
        0,    0, 4234,    0,    0,    0, 4234, 4235, 4235,    0,
     4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235,
     4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235,

     4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235,
     4236, 4236, 4236, 4236,    0, 4236,    0,    0,    0,    0,
        0,    0,    0,    0, 4236, 4236,    0, 4236,    0, 4236,
     4236, 4236, 4236, 4236,    0, 4236,    0, 4236,    0,    0,
        0, 4236, 4237, 4237, 4237, 4237,    0, 4237,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4237, 4237, 4237, 4237, 4237,    0,    0,    0, 4237,
        0,    0,    0, 4237, 4238,    0,    0,    0,    0,    0,
        0,    0,    0, 4238,    0,    0,    0,    0, 4238, 4238,
     4238, 4238, 4238,    0,    0,    0, 4238,    0,    0,    0,

     4238, 4239,    0,    0,    0,    0,    0,    0,    0,    0,
     4239,    0,    0,    0,    0, 4239, 4239, 4239, 4239, 4239,
        0,    0,    0, 4239,    0,    0,    0, 4239, 4240,    0,
        0, 4240,    0, 4240,    0,    0,    0,    0,    0,    0,
        0,    0, 4240, 4240,    0,    0,    0, 4240, 4240, 4240,
     4240, 4240,    0,    0,    0, 4240,    0,    0,    0, 4240,
     4241,    0,    0,    0,    0,    0,    0,    0,    0, 4241,
        0,    0,    0,    0, 4241, 4241, 4241, 4241, 4241,    0,
        0,    0, 4241,    0,    0,    0, 4241, 4242,    0,    0,
        0,    0,    0,    0,    0,    0, 4242,    0,    0,    0,

        0, 4242, 4242, 4242, 4242, 4242,    0,    0,    0, 4242,
        0,    0,    0, 4242, 4243, 4243,    0, 4243,    0, 4243,
     4243,    0, 4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243,
     4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243,
     4243, 4243, 4243, 4243, 4243, 4243, 4243, 4244, 4244, 4244,
     4244,    0, 4244,    0,    0,    0,    0,    0,    0,    0,
        0, 4244, 4244,    0,    0,    0, 4244, 4244, 4244, 4244,
     4244,    0,    0, 4244, 4244,    0,    0,    0, 4244, 4245,
     4245,    0, 4245, 4245,    0,    0, 4245, 4245, 4245, 4245,
     4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245,

     4245, 4245, 4245, 4245, 4245,    0, 4245, 4245, 4245, 4245,
     4245, 4245, 4246,    0,    0,    0,    0,    0,    0,    0,
        0, 4246,    0,    0,    0,    0, 4246, 4246, 4246, 4246,
     4246,    0,    0,    0, 4246,    0,    0,    0, 4246, 4247,
     4247,    0, 4247, 4247,    0, 4247, 4247, 4247, 4247, 4247,
     4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247,
     4247, 4247, 4247, 4247, 4247,    0, 4247, 4247, 4247, 4247,
     4247, 4247, 4248, 4248,    0, 4248, 4248, 4248, 4248, 4248,
     4248, 4248, 4248, 4248, 4248, 4248, 4248, 4248, 4248, 4248,
     4248, 4248, 4248, 4248, 4248, 4248, 4248, 4248, 4248, 4248,

     4248, 4248, 4248, 4248, 4248, 4249, 4249,    0, 4249, 4249,
     4249, 4249, 4249, 4249, 4249,    0, 4249, 4249, 4249, 4249,
     4249, 4249, 4249, 4249, 4249, 4249, 4249, 4249, 4249, 4249,
     4249, 4249, 4249, 4249, 4249, 4249, 4249, 4249, 4250,    0,
        0,    0,    0,    0,    0,    0,    0, 4250,    0,    0,
        0,    0, 4250, 4250, 4250, 4250, 4250,    0,    0,    0,
     4250,    0,    0,    0, 4250, 4251,    0,    0,    0,    0,
        0,    0,    0,    0, 4251, 4251,    0,    0,    0, 4251,
     4251, 4251, 4251, 4251,    0,    0,    0, 4251,    0,    0,
        0, 4251, 4252,    0,    0,    0,    0,    0,    0, 4252,

        0, 4252, 4252,    0,    0,    0, 4252, 4252, 4252, 4252,
     4252,    0,    0,    0, 4252,    0,    0,    0, 4252, 4253,
     4253,    0, 4253, 4253, 4253, 4253, 4253, 4253,    0, 4253,
     4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253,
     4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253,
     4253, 4253, 4254,    0, 4254, 4254,    0, 4254, 4254, 4254,
        0,    0, 4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254,
     4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254,    0, 4254,
     4254, 4254, 4254, 4254, 4254, 4255, 4255,    0,    0, 4255,
        0, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255,

     4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255,
     4255,    0, 4255, 4255, 4255, 4255, 4255, 4255, 4256, 4256,
        0,    0, 4256, 4256, 4256,    0, 4256, 4256, 4256, 4256,
     4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256,
     4256, 4256, 4256, 4256,    0, 4256, 4256, 4256, 4256, 4256,
     4256, 4257, 4257,    0, 4257, 4257,    0, 4257, 4257, 4257,
     4257, 4257, 4257, 4257, 4257, 4257, 4257, 4257, 4257, 4257,
     4257, 4257, 4257, 4257, 4257, 4257, 4257, 4257, 4257, 4257,
     4257, 4257, 4257, 4257, 4258, 4258,    0, 4258, 4258,    0,
     4258, 4258, 4258, 4258, 4258, 4258, 4258, 4258,    0, 4258,

     4258, 4258, 4258, 4258, 4258, 4258, 4258, 4258, 4258, 4258,
        0, 4258, 4258, 4258, 4258, 4258, 4258, 4259, 4259, 4259,
     4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259,
     4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259,
     4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259,
     4260, 4260,    0, 4260, 4260, 4260, 4260, 4260, 4260, 4260,
        0, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260,
     4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260,
     4260, 4260, 4260, 4261, 4261,    0, 4261, 4261, 4261, 4261,
     4261, 4261, 4261,    0, 4261, 4261, 4261, 4261, 4261, 4261,

     4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261,
     4261, 4261, 4261, 4261, 4261, 4261, 4262, 4262,    0,    0,
     4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262,
     4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262,
     4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4263,
     4263,    0, 4263, 4263, 4263, 4263, 4263, 4263, 4263,    0,
     4263, 4263, 4263, 4263, 4263, 4263, 4263, 4263, 4263, 4263,
     4263, 4263, 4263, 4263, 4263, 4263, 4263, 4263, 4263, 4263,
     4263, 4263, 4264, 4264, 4264, 4264,    0, 4264,    0, 4264,
     4264,    0, 4264,    0, 4264,    0, 4264, 4264, 4264, 4264,

        0, 4264, 4264, 4264, 4264, 4264,    0, 4264, 4264, 4264,
        0,    0,    0, 4264, 4265,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4265, 4265,
     4265, 4265, 4265,    0,    0,    0, 4265,    0,    0,    0,
     4265, 4266, 4266,    0, 4266, 4266,    0, 4266, 4266, 4266,
     4266, 4266, 4266, 4266, 4266,    0, 4266, 4266, 4266, 4266,
     4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266,
        0, 4266, 4266, 4266, 4267, 4267, 4267, 4267,    0, 4267,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 4267,
        0,    0,    0, 4267, 4267, 4267, 4267, 4267,    0, 4267,

        0, 4267,    0,    0, 4267, 4267, 4268, 4268,    0, 4268,
     4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268,
     4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268,
     4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4269,
        0,    0, 4269,    0, 4269,    0,    0,    0, 4269,    0,
        0,    0,    0,    0, 4269,    0,    0,    0, 4269, 4269,
     4269, 4269, 4269,    0,    0,    0, 4269,    0,    0, 4269,
     4269, 4270,    0,    0,    0,    0,    0, 4270,    0, 4270,
        0,    0,    0,    0, 4270, 4270, 4270, 4270, 4270, 4272,
     4272, 4272, 4272,    0, 4272,    0,    0,    0,    0,    0,

        0,    0,    0,    0, 4272,    0,    0,    0, 4272, 4272,
     4272, 4272, 4272,    0, 4272,    0, 4272,    0,    0, 4272,
     4272, 4273,    0, 4273, 4273,    0, 4273, 4273, 4273, 4273,
        0, 4273, 4273, 4273, 4273, 4273, 4273, 4273, 4273, 4273,
     4273, 4273, 4273, 4273, 4273, 4273, 4273,    0, 4273, 4273,
     4273, 4273, 4273, 4273, 4274, 4274, 4274, 4274,    0, 4274,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 4274,
        0,    0,    0, 4274, 4274, 4274, 4274, 4274,    0, 4274,
        0, 4274,    0,    0, 4274, 4274, 4275, 4275, 4275, 4275,
        0, 4275,    0, 4275,    0,    0,    0,    0,    0,    0,

     4275, 4275,    0, 4275,    0, 4275, 4275, 4275, 4275, 4275,
        0, 4275,    0, 4275,    0,    0,    0, 4275, 4276, 4276,
     4276, 4276,    0, 4276,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 4276, 4276, 4276,
     4276, 4276,    0,    0,    0, 4276,    0,    0,    0, 4276,
     4277, 4277, 4277, 4277,    0, 4277,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 4277,
     4277, 4277, 4277, 4277,    0,    0,    0, 4277,    0,    0,
        0, 4277, 4278, 4278, 4278, 4278,    0, 4278,    0, 4278,
     4278,    0, 4278,    0,    0,    0, 4278, 4278, 4278, 4278,

        0, 4278, 4278, 4278, 4278, 4278,    0,    0, 4278, 4278,
        0,    0,    0, 4278, 4279,    0,    0, 4279,    0, 4279,
        0, 4279,    0,    0,    0, 4279, 4279,    0, 4279, 4279,
        0, 4279,    0, 4279, 4279, 4279, 4279, 4279,    0,    0,
        0, 4279,    0,    0,    0, 4279, 4280, 4280,    0, 4280,
     4280, 4280, 4280, 4280,    0,    0, 4280, 4280, 4280, 4280,
     4280, 4280, 4280, 4280,    0, 4280, 4280, 4280, 4280, 4280,
     4280,    0, 4280,    0, 4280,    0,    0, 4280, 4280, 4281,
        0,    0, 4281,    0, 4281,    0,    0,    0, 4281,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4281, 4281,

     4281, 4281, 4281,    0,    0,    0, 4281,    0,    0,    0,
     4281, 4282,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4282, 4282, 4282, 4282, 4282,
        0,    0,    0, 4282,    0,    0,    0, 4282, 4283, 4283,
     4283, 4283,    0, 4283,    0, 4283,    0,    0,    0,    0,
        0,    0, 4283, 4283,    0, 4283,    0, 4283, 4283, 4283,
     4283, 4283,    0, 4283,    0, 4283,    0,    0,    0, 4283,
     4284, 4284,    0, 4284, 4284,    0, 4284, 4284,    0,    0,
     4284, 4284, 4284, 4284,    0, 4284, 4284, 4284, 4284, 4284,
     4284, 4284, 4284, 4284, 4284, 4284, 4284, 4284, 4284,    0,

        0, 4284, 4284, 4285, 4285, 4285, 4285,    0, 4285,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4285,    0,
        0,    0, 4285, 4285, 4285, 4285, 4285,    0, 4285,    0,
     4285,    0,    0, 4285, 4285, 4286, 4286, 4286, 4286,    0,
     4286,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     4286,    0,    0,    0, 4286, 4286, 4286, 4286, 4286,    0,
     4286,    0, 4286,    0,    0, 4286, 4286, 4287, 4287, 4287,
     4287,    0, 4287,    0, 4287,    0,    0,    0,    0,    0,
        0, 4287, 4287,    0, 4287,    0, 4287, 4287, 4287, 4287,
     4287,    0, 4287,    0, 4287,    0,    0,    0, 4287, 4288,

     4288, 4288, 4288,    0, 4288,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4288, 4288,
     4288, 4288, 4288,    0,    0,    0, 4288,    0,    0,    0,
     4288, 4289, 4289, 4289, 4289,    0, 4289,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     4289, 4289, 4289, 4289, 4289,    0,    0,    0, 4289,    0,
        0,    0, 4289, 4290, 4290, 4290, 4290,    0, 4290,    0,
     4290,    0,    0,    0,    0,    0,    0, 4290,    0,    0,
        0,    0, 4290, 4290, 4290, 4290, 4290,    0,    0,    0,
     4290,    0,    0,    0, 4290, 4291, 4291,    0, 4291,    0,

     4291,    0, 4291,    0,    0,    0, 4291, 4291,    0, 4291,
     4291,    0, 4291,    0, 4291, 4291, 4291, 4291, 4291,    0,
        0,    0, 4291,    0,    0,    0, 4291, 4292,    0,    0,
     4292,    0, 4292,    0,    0,    0,    0,    0,    0,    0,
        0, 4292,    0,    0,    0,    0, 4292, 4292, 4292, 4292,
     4292,    0,    0,    0, 4292, 4292,    0,    0, 4292, 4293,
        0,    0, 4293,    0, 4293,    0, 4293,    0,    0,    0,
        0, 4293,    0, 4293, 4293,    0,    0,    0, 4293, 4293,
     4293, 4293, 4293,    0, 4293,    0, 4293,    0,    0,    0,
     4293, 4294,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0, 4294, 4294, 4294, 4294, 4294,
        0,    0,    0, 4294,    0,    0,    0, 4294, 4295,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4295, 4295, 4295, 4295, 4295,    0,    0,    0,
     4295,    0,    0,    0, 4295, 4296,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 4296,
     4296, 4296, 4296, 4296,    0,    0,    0, 4296,    0,    0,
        0, 4296, 4297,    0,    0,    0,    0,    0,    0, 4297,
        0, 4297,    0,    0,    0,    0, 4297, 4297, 4297, 4297,
     4297,    0,    0,    0, 4297,    0,    0,    0, 4297, 4298,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 4298, 4298, 4298, 4298, 4298,    0,    0,
        0, 4298,    0,    0,    0, 4298, 4299,    0,    0,    0,
        0,    0,    0,    0,    0, 4299,    0,    0,    0,    0,
     4299, 4299, 4299, 4299, 4299,    0,    0,    0, 4299,    0,
        0,    0, 4299, 4300,    0,    0,    0,    0,    0,    0,
        0,    0, 4300, 4300,    0,    0,    0, 4300, 4300, 4300,
     4300, 4300,    0, 4300,    0, 4300,    0,    0,    0, 4300,
     4301,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4301, 4301, 4301, 4301, 4301,    0,

        0,    0, 4301,    0,    0,    0, 4301, 4302,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4302, 4302, 4302, 4302, 4302,    0,    0,    0, 4302,
        0,    0,    0, 4302, 4303,    0,    0,    0,    0,    0,
        0,    0,    0, 4303,    0,    0,    0,    0, 4303, 4303,
     4303, 4303, 4303,    0,    0,    0, 4303,    0,    0,    0,
     4303, 4304, 4304,    0, 4304, 4304, 4304, 4304, 4304, 4304,
     4304, 4304, 4304, 4304, 4304, 4304, 4304, 4304, 4304, 4304,
     4304, 4304, 4304, 4304, 4304, 4304, 4304, 4304, 4304, 4304,
     4304, 4304, 4304, 4304, 4305, 4305, 4305, 4305,    0, 4305,

        0,    0,    0,    0,    0,    0,    0,    0, 4305, 4305,
        0, 4305,    0, 4305, 4305, 4305, 4305, 4305,    0, 4305,
        0, 4305,    0,    0,    0, 4305, 4306, 4306,    0, 4306,
     4306,    0, 4306, 4306,    0, 4306, 4306, 4306,    0,    0,
        0, 4306, 4306, 4306, 4306, 4306, 4306, 4306, 4306, 4306,
     4306, 4306, 4306, 4306, 4306,    0, 4306, 4306, 4306, 4307,
     4307, 4307, 4307,    0, 4307,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4307, 4307,
     4307, 4307, 4307,    0,    0,    0, 4307,    0,    0, 4307,
     4307, 4308, 4308, 4308, 4308,    0, 4308,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     4308, 4308, 4308, 4308, 4308,    0,    0,    0, 4308,    0,
        0,    0, 4308, 4309,    0,    0, 4309,    0, 4309,    0,
        0,    0,    0,    0,    0,    0,    0, 4309,    0,    0,
     4309,    0, 4309, 4309, 4309, 4309, 4309,    0,    0,    0,
     4309,    0,    0,    0, 4309, 4310,    0,    0,    0,    0,
        0,    0,    0,    0, 4310,    0,    0,    0,    0, 4310,
     4310, 4310, 4310, 4310,    0,    0,    0, 4310,    0,    0,
        0, 4310, 4311,    0,    0,    0,    0,    0,    0,    0,
        0, 4311,    0,    0,    0,    0, 4311, 4311, 4311, 4311,

     4311,    0,    0,    0, 4311,    0,    0,    0, 4311, 4312,
        0,    0, 4312,    0, 4312,    0,    0,    0,    0,    0,
        0,    0,    0, 4312, 4312,    0,    0,    0, 4312, 4312,
     4312, 4312, 4312,    0,    0,    0, 4312,    0,    0,    0,
     4312, 4313,    0,    0,    0,    0,    0,    0,    0,    0,
     4313,    0,    0,    0,    0, 4313, 4313, 4313, 4313, 4313,
        0,    0,    0, 4313,    0,    0,    0, 4313, 4314,    0,
        0,    0,    0,    0,    0,    0,    0, 4314,    0,    0,
        0,    0, 4314, 4314, 4314, 4314, 4314,    0,    0,    0,
     4314,    0,    0,    0, 4314, 4315, 4315,    0, 4315,    0,

     4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315,
     4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315,
     4315,    0, 4315, 4315, 4315, 4315, 4315, 4315, 4316, 4316,
        0, 4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316,
     4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316,
     4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316, 4316,
     4316, 4317, 4317,    0, 4317, 4317, 4317, 4317, 4317, 4317,
     4317, 4317, 4317, 4317, 4317, 4317, 4317, 4317, 4317, 4317,
     4317, 4317, 4317, 4317, 4317, 4317, 4317, 4317, 4317, 4317,
     4317, 4317, 4317, 4317, 4318, 4318, 4318, 4318,    0, 4318,

        0,    0,    0,    0,    0,    0,    0,    0, 4318, 4318,
        0,    0,    0, 4318, 4318, 4318, 4318, 4318,    0,    0,
     4318, 4318,    0,    0,    0, 4318, 4319, 4319,    0, 4319,
     4319,    0,    0, 4319, 4319, 4319, 4319, 4319, 4319, 4319,
     4319, 4319, 4319, 4319, 4319, 4319, 4319, 4319, 4319, 4319,
     4319, 4319,    0, 4319, 4319, 4319, 4319, 4319, 4319, 4320,
        0,    0,    0,    0,    0,    0,    0,    0, 4320,    0,
        0,    0,    0, 4320, 4320, 4320, 4320, 4320,    0,    0,
        0, 4320,    0,    0,    0, 4320, 4321, 4321,    0, 4321,
     4321,    0, 4321, 4321, 4321, 4321, 4321, 4321, 4321, 4321,

     4321, 4321, 4321, 4321, 4321, 4321, 4321, 4321, 4321, 4321,
     4321, 4321,    0, 4321, 4321, 4321, 4321, 4321, 4321, 4322,
     4322,    0, 4322, 4322, 4322, 4322, 4322, 4322, 4322,    0,
     4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322,
     4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322,
     4322, 4322, 4323,    0,    0,    0,    0,    0,    0,    0,
        0, 4323,    0,    0,    0,    0, 4323, 4323, 4323, 4323,
     4323,    0,    0,    0, 4323,    0,    0,    0, 4323, 4324,
        0,    0,    0,    0,    0,    0,    0,    0, 4324, 4324,
        0,    0,    0, 4324, 4324, 4324, 4324, 4324,    0,    0,

        0, 4324,    0,    0,    0, 4324, 4325,    0,    0,    0,
        0,    0,    0, 4325,    0, 4325, 4325,    0,    0,    0,
     4325, 4325, 4325, 4325, 4325,    0,    0,    0, 4325,    0,
        0,    0, 4325, 4326,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 4326, 4326, 4326,
     4326, 4326,    0,    0,    0, 4326,    0,    0,    0, 4326,
     4327, 4327,    0, 4327, 4327, 4327, 4327, 4327, 4327,    0,
     4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327,
     4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327,
     4327, 4327, 4327, 4328,    0, 4328, 4328,    0, 4328, 4328,

     4328,    0,    0, 4328, 4328, 4328, 4328, 4328, 4328, 4328,
     4328, 4328, 4328, 4328, 4328, 4328, 4328, 4328, 4328,    0,
     4328, 4328, 4328, 4328, 4328, 4328, 4329, 4329, 4329, 4329,
     4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329,
        0, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329,
     4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4330,
     4330,    0, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330,
     4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330,
     4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330,
     4330, 4330, 4331, 4331, 4331, 4331, 4331, 4331, 4331, 4331,

     4331, 4331, 4331, 4331, 4331, 4331,    0, 4331, 4331, 4331,
     4331, 4331, 4331, 4331, 4331, 4331, 4331, 4331, 4331, 4331,
     4331, 4331, 4331, 4331, 4331, 4332, 4332,    0, 4332, 4332,
     4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332,
     4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332,
     4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4333, 4333,
     4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333,
     4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333,
     4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333,
     4333, 4334, 4334,    0, 4334, 4334, 4334, 4334, 4334, 4334,

     4334, 4334, 4334, 4334, 4334, 4334, 4334, 4334, 4334, 4334,
     4334, 4334, 4334, 4334, 4334, 4334, 4334, 4334, 4334, 4334,
     4334, 4334, 4334, 4334, 4335, 4335,    0,    0, 4335,    0,
     4335, 4335, 4335, 4335, 4335, 4335, 4335, 4335, 4335, 4335,
     4335, 4335, 4335, 4335, 4335, 4335, 4335, 4335, 4335, 4335,
        0, 4335, 4335, 4335, 4335, 4335, 4335, 4336, 4336, 4336,
     4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336,
     4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336,
     4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336,
     4337, 4337,    0, 4337, 4337, 4337, 4337, 4337, 4337, 4337,

     4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337,
     4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337,
     4337, 4337, 4337, 4338, 4338, 4338, 4338, 4338, 4338, 4338,
     4338, 4338, 4338, 4338, 4338, 4338, 4338, 4338, 4338, 4338,
     4338, 4338, 4338, 4338, 4338, 4338, 4338, 4338, 4338, 4338,
     4338, 4338, 4338, 4338, 4338, 4338, 4339, 4339,    0, 4339,
     4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339,
     4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339,
     4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4340,
     4340,    0,    0, 4340, 4340, 4340,    0, 4340, 4340, 4340,

     4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340,
     4340, 4340, 4340, 4340, 4340,    0, 4340, 4340, 4340, 4340,
     4340, 4340, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341,
     4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341,
     4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341,
     4341, 4341, 4341, 4341, 4341, 4342, 4342,    0, 4342, 4342,
     4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342,
     4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342,
     4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342, 4343, 4343,
     4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343,

     4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343,
     4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343,
     4343, 4344, 4344,    0, 4344, 4344, 4344, 4344, 4344, 4344,
     4344, 4344, 4344, 4344, 4344, 4344, 4344, 4344, 4344, 4344,
     4344, 4344, 4344, 4344, 4344, 4344, 4344, 4344, 4344, 4344,
     4344, 4344, 4344, 4344, 4345, 4345,    0, 4345, 4345,    0,
     4345, 4345, 4345, 4345, 4345, 4345, 4345, 4345, 4345, 4345,
     4345, 4345, 4345, 4345, 4345, 4345, 4345, 4345, 4345, 4345,
     4345, 4345, 4345, 4345, 4345, 4345, 4345, 4346, 4346, 4346,
     4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346,

     4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346,
     4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346, 4346,
     4347, 4347,    0, 4347, 4347, 4347, 4347, 4347, 4347, 4347,
     4347, 4347, 4347, 4347, 4347, 4347, 4347, 4347, 4347, 4347,
     4347, 4347, 4347, 4347, 4347, 4347, 4347, 4347, 4347, 4347,
     4347, 4347, 4347, 4348, 4348,    0, 4348, 4348, 4348, 4348,
     4348, 4348, 4348, 4348, 4348, 4348, 4348, 4348, 4348, 4348,
     4348, 4348, 4348, 4348, 4348, 4348, 4348, 4348, 4348, 4348,
     4348, 4348, 4348, 4348, 4348, 4348, 4349, 4349,    0, 4349,
     4349, 4349, 4349, 4349, 4349, 4349,    0, 4349, 4349, 4349,

     4349, 4349, 4349, 4349, 4349, 4349, 4349, 4349, 4349, 4349,
     4349, 4349, 4349, 4349, 4349, 4349, 4349, 4349, 4349, 4350,
     4350,    0, 4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350,
     4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350,
     4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350,
     4350, 4350, 4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351,
     4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351,
     4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351,
     4351, 4351, 4351, 4351, 4351, 4352, 4352,    0, 4352, 4352,
     4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352,

     4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352,
     4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352, 4353, 4353,
        0,    0, 4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353,
     4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353,
     4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353,
     4353, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354,
     4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354,
     4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354,
     4354, 4354, 4354, 4354, 4355, 4355,    0, 4355, 4355, 4355,
     4355, 4355, 4355, 4355, 4355, 4355, 4355, 4355, 4355, 4355,

     4355, 4355, 4355, 4355, 4355, 4355, 4355, 4355, 4355, 4355,
     4355, 4355, 4355, 4355, 4355, 4355, 4355, 4356, 4356,    0,
     4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356,
     4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356,
     4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356, 4356,
     4357, 4357,    0, 4357, 4357, 4357, 4357, 4357, 4357, 4357,
        0, 4357, 4357, 4357, 4357, 4357, 4357, 4357, 4357, 4357,
     4357, 4357, 4357, 4357, 4357, 4357, 4357, 4357, 4357, 4357,
     4357, 4357, 4357, 4358, 4358,    0, 4358, 4358, 4358, 4358,
     4358, 4358, 4358, 4358, 4358, 4358, 4358, 4358, 4358, 4358,

     4358, 4358, 4358, 4358, 4358, 4358, 4358, 4358, 4358, 4358,
     4358, 4358, 4358, 4358, 4358, 4358, 4359, 4359,    0, 4359,
     4359,    0, 4359, 4359, 4359, 4359, 4359, 4359,    0,    0,
        0, 4359, 4359, 4359, 4359, 4359, 4359, 4359, 4359, 4359,
     4359, 4359, 4359, 4359, 4359,    0, 4359, 4359, 4359, 4360,
     4360, 4360, 4360,    0, 4360,    0,    0,    0,    0,    0,
        0, 4360,    0, 4360,    0,    0,    0,    0, 4360, 4360,
     4360, 4360, 4360,    0,    0,    0, 4360,    0,    0,    0,
     4360, 4361, 4361,    0, 4361, 4361,    0, 4361, 4361, 4361,
     4361, 4361, 4361, 4361, 4361,    0, 4361, 4361, 4361, 4361,

     4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361,
        0, 4361, 4361, 4361, 4362, 4362,    0, 4362, 4362,    0,
     4362, 4362, 4362, 4362, 4362, 4362,    0,    0,    0, 4362,
     4362, 4362, 4362, 4362, 4362, 4362, 4362, 4362, 4362, 4362,
     4362, 4362, 4362,    0, 4362, 4362, 4362, 4363, 4363,    0,
     4363, 4363,    0, 4363, 4363,    0,    0, 4363, 4363, 4363,
     4363,    0, 4363, 4363, 4363, 4363, 4363, 4363, 4363, 4363,
     4363, 4363, 4363, 4363, 4363, 4363,    0,    0, 4363, 4363,
     4364, 4364, 4364, 4364,    0, 4364,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4364,    0,    0,    0, 4364,

     4364, 4364, 4364, 4364,    0, 4364,    0, 4364,    0,    0,
     4364, 4364, 4365, 4365, 4365, 4365,    0, 4365,    0, 4365,
     4365,    0, 4365,    0,    0,    0, 4365, 4365, 4365, 4365,
        0, 4365, 4365, 4365, 4365, 4365,    0, 4365, 4365, 4365,
        0,    0,    0, 4365, 4366, 4366, 4366, 4366,    0, 4366,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 4366, 4366, 4366, 4366, 4366,    0,    0,
        0, 4366,    0,    0,    0, 4366, 4367, 4367, 4367, 4367,
        0, 4367,    0, 4367, 4367,    0, 4367,    0, 4367,    0,
     4367, 4367, 4367, 4367,    0, 4367, 4367, 4367, 4367, 4367,

        0, 4367, 4367, 4367,    0,    0,    0, 4367, 4368,    0,
        0, 4368,    0, 4368,    0,    0,    0, 4368,    0,    0,
        0,    0,    0, 4368,    0,    0,    0, 4368, 4368, 4368,
     4368, 4368,    0,    0,    0, 4368,    0,    0, 4368, 4368,
     4369, 4369, 4369, 4369,    0, 4369,    0,    0, 4369,    0,
        0,    0,    0,    0, 4369, 4369,    0,    0,    0, 4369,
     4369, 4369, 4369, 4369,    0, 4369,    0, 4369,    0,    0,
     4369, 4369, 4370, 4370, 4370, 4370,    0, 4370,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4370, 4370, 4370, 4370, 4370,    0,    0,    0, 4370,

        0,    0,    0, 4370, 4372,    0,    0,    0,    0,    0,
        0,    0, 4372,    0,    0,    0,    0, 4372, 4372, 4372,
     4372, 4372, 4375, 4375, 4375, 4375,    0, 4375,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 4375,    0,    0,
        0, 4375, 4375, 4375, 4375, 4375,    0, 4375,    0, 4375,
        0,    0, 4375, 4375, 4376, 4376, 4376, 4376,    0, 4376,
        0, 4376, 4376,    0, 4376,    0,    0,    0, 4376, 4376,
     4376, 4376,    0, 4376, 4376, 4376, 4376, 4376,    0, 4376,
     4376, 4376,    0,    0,    0, 4376, 4377,    0, 4377, 4377,
        0, 4377, 4377, 4377, 4377,    0, 4377, 4377, 4377, 4377,

     4377, 4377, 4377, 4377, 4377, 4377, 4377, 4377, 4377, 4377,
     4377, 4377,    0, 4377, 4377, 4377, 4377, 4377, 4377, 4378,
     4378, 4378, 4378,    0, 4378,    0, 4378,    0,    0,    0,
        0,    0,    0, 4378, 4378,    0, 4378,    0, 4378, 4378,
     4378, 4378, 4378,    0, 4378,    0, 4378,    0,    0,    0,
     4378, 4379, 4379,    0, 4379, 4379,    0, 4379, 4379, 4379,
     4379, 4379, 4379, 4379, 4379,    0, 4379, 4379, 4379, 4379,
     4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379,
        0, 4379, 4379, 4379, 4380, 4380, 4380, 4380,    0, 4380,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0, 4380, 4380, 4380, 4380, 4380,    0,    0,
        0, 4380,    0,    0,    0, 4380, 4381, 4381, 4381, 4381,
        0, 4381,    0, 4381,    0,    0,    0,    0,    0,    0,
     4381,    0,    0, 4381,    0, 4381, 4381, 4381, 4381, 4381,
        0,    0,    0, 4381,    0,    0,    0, 4381, 4382,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4382, 4382, 4382, 4382, 4382,    0,    0,    0,
     4382,    0,    0,    0, 4382, 4383, 4383,    0, 4383, 4383,
        0, 4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383,    0,
     4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383,

     4383, 4383, 4383, 4383,    0, 4383, 4383, 4383, 4384, 4384,
     4384, 4384,    0, 4384,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 4384,    0,    0,    0, 4384, 4384, 4384,
     4384, 4384,    0, 4384,    0, 4384,    0,    0, 4384, 4384,
     4385, 4385, 4385, 4385,    0, 4385,    0, 4385, 4385,    0,
     4385,    0,    0,    0, 4385, 4385, 4385, 4385,    0, 4385,
     4385, 4385, 4385, 4385,    0,    0, 4385, 4385,    0,    0,
        0, 4385, 4386,    0,    0, 4386,    0, 4386,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4386, 4386, 4386, 4386, 4386,    0,    0,    0, 4386,

        0,    0,    0, 4386, 4387, 4387,    0, 4387, 4387, 4387,
     4387, 4387,    0,    0, 4387, 4387, 4387, 4387, 4387, 4387,
     4387, 4387,    0, 4387, 4387, 4387, 4387, 4387, 4387,    0,
     4387,    0, 4387,    0,    0, 4387, 4387, 4388,    0,    0,
     4388,    0, 4388,    0, 4388,    0,    0,    0, 4388, 4388,
        0, 4388, 4388,    0, 4388,    0, 4388, 4388, 4388, 4388,
     4388,    0,    0,    0, 4388,    0,    0,    0, 4388, 4389,
        0,    0, 4389,    0, 4389,    0,    0,    0, 4389,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4389, 4389,
     4389, 4389, 4389,    0,    0,    0, 4389,    0,    0,    0,

     4389, 4390,    0,    0, 4390,    0, 4390,    0,    0, 4390,
        0,    0,    0,    0,    0, 4390,    0,    0,    0,    0,
     4390, 4390, 4390, 4390, 4390,    0,    0,    0, 4390,    0,
        0,    0, 4390, 4391,    0,    0, 4391,    0, 4391,    0,
        0,    0,    0,    0,    0,    0,    0, 4391, 4391,    0,
     4391,    0, 4391, 4391, 4391, 4391, 4391,    0,    0,    0,
     4391,    0,    0,    0, 4391, 4392, 4392,    0, 4392, 4392,
        0, 4392, 4392,    0,    0, 4392, 4392, 4392, 4392,    0,
     4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392,
     4392, 4392, 4392, 4392,    0,    0, 4392, 4392, 4393, 4393,

     4393, 4393,    0, 4393,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 4393,    0,    0,    0, 4393, 4393, 4393,
     4393, 4393,    0, 4393,    0, 4393,    0,    0, 4393, 4393,
     4394, 4394, 4394, 4394,    0, 4394,    0, 4394,    0,    0,
        0,    0,    0,    0, 4394, 4394,    0, 4394,    0, 4394,
     4394, 4394, 4394, 4394,    0, 4394,    0, 4394,    0,    0,
        0, 4394, 4395, 4395, 4395, 4395,    0, 4395,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4395, 4395, 4395, 4395, 4395,    0,    0,    0, 4395,
        0,    0,    0, 4395, 4396, 4396, 4396, 4396,    0, 4396,

        0, 4396,    0,    0,    0,    0,    0,    0, 4396, 4396,
        0, 4396,    0, 4396, 4396, 4396, 4396, 4396,    0, 4396,
        0, 4396,    0,    0,    0, 4396, 4397, 4397, 4397, 4397,
        0, 4397,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4397, 4397, 4397, 4397, 4397,
        0,    0,    0, 4397,    0,    0,    0, 4397, 4398, 4398,
     4398, 4398,    0, 4398,    0, 4398,    0,    0,    0,    0,
        0,    0, 4398,    0,    0,    0,    0, 4398, 4398, 4398,
     4398, 4398,    0,    0,    0, 4398,    0,    0,    0, 4398,
     4399, 4399, 4399, 4399,    0, 4399,    0, 4399,    0,    0,

        0,    0,    0,    0, 4399,    0,    0,    0,    0, 4399,
     4399, 4399, 4399, 4399,    0,    0,    0, 4399,    0,    0,
        0, 4399, 4400, 4400,    0, 4400,    0, 4400,    0, 4400,
        0,    0,    0, 4400, 4400,    0, 4400, 4400,    0, 4400,
        0, 4400, 4400, 4400, 4400, 4400,    0,    0,    0, 4400,
        0,    0,    0, 4400, 4401,    0,    0, 4401,    0,    0,
        0,    0,    0, 4401,    0,    0,    0,    0, 4401, 4401,
     4401, 4401, 4401,    0,    0,    0, 4401,    0,    0,    0,
     4401, 4402,    0,    0,    0,    0,    0,    0, 4402,    0,
     4402,    0,    0,    0,    0, 4402, 4402, 4402, 4402, 4402,

        0,    0,    0, 4402,    0,    0,    0, 4402, 4403,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4403, 4403, 4403, 4403, 4403,    0,    0,    0,
     4403,    0,    0,    0, 4403, 4404,    0,    0,    0,    0,
        0,    0,    0,    0, 4404,    0,    0,    0,    0, 4404,
     4404, 4404, 4404, 4404,    0, 4404,    0, 4404,    0,    0,
        0, 4404, 4405,    0,    0, 4405,    0, 4405,    0, 4405,
        0,    0,    0,    0, 4405,    0, 4405, 4405,    0,    0,
        0, 4405, 4405, 4405, 4405, 4405,    0, 4405,    0, 4405,
        0,    0,    0, 4405, 4406,    0,    0,    0,    0,    0,

        0, 4406,    0, 4406,    0,    0,    0,    0, 4406, 4406,
     4406, 4406, 4406,    0,    0,    0, 4406,    0,    0,    0,
     4406, 4407,    0,    0,    0,    0,    0,    0,    0,    0,
     4407,    0,    0,    0,    0, 4407, 4407, 4407, 4407, 4407,
        0,    0,    0, 4407,    0,    0,    0, 4407, 4408,    0,
        0,    0,    0,    0,    0,    0,    0, 4408, 4408,    0,
        0,    0, 4408, 4408, 4408, 4408, 4408,    0, 4408,    0,
     4408,    0,    0,    0, 4408, 4409,    0,    0,    0,    0,
        0,    0,    0,    0, 4409,    0,    0,    0,    0, 4409,
     4409, 4409, 4409, 4409,    0,    0,    0, 4409,    0,    0,

        0, 4409, 4410, 4410, 4410, 4410, 4410, 4410, 4410, 4410,
     4410, 4410, 4410, 4410, 4410, 4410, 4410, 4410, 4410, 4410,
     4410, 4410, 4410, 4410, 4410, 4410, 4410, 4410, 4410, 4410,
     4410, 4410, 4410, 4410, 4410, 4411, 4411,    0, 4411, 4411,
     4411, 4411, 4411, 4411, 4411, 4411, 4411, 4411, 4411, 4411,
     4411, 4411, 4411, 4411, 4411, 4411, 4411, 4411, 4411, 4411,
     4411, 4411, 4411, 4411, 4411, 4411, 4411, 4411, 4412, 4412,
        0, 4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412,
     4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412,
     4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412, 4412,

     4412, 4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413,
     4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413,
     4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413, 4413,
     4413, 4413, 4413, 4413, 4414, 4414,    0, 4414, 4414, 4414,
     4414, 4414, 4414, 4414, 4414, 4414, 4414, 4414, 4414, 4414,
     4414, 4414, 4414, 4414, 4414, 4414, 4414, 4414, 4414, 4414,
     4414, 4414, 4414, 4414, 4414, 4414, 4414, 4415, 4415, 4415,
     4415,    0, 4415,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 4415, 4415, 4415, 4415,
     4415,    0,    0,    0, 4415,    0,    0, 4415, 4415, 4416,

     4416,    0, 4416, 4416,    0, 4416, 4416,    0, 4416, 4416,
     4416,    0,    0,    0, 4416, 4416, 4416, 4416, 4416, 4416,
     4416, 4416, 4416, 4416, 4416, 4416, 4416, 4416,    0, 4416,
     4416, 4416, 4417, 4417, 4417, 4417,    0, 4417,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4417, 4417, 4417, 4417, 4417,    0,    0,    0, 4417,
        0,    0, 4417, 4417, 4418, 4418, 4418, 4418,    0, 4418,
        0,    0,    0,    0,    0,    0,    0,    0, 4418, 4418,
        0, 4418,    0, 4418, 4418, 4418, 4418, 4418,    0, 4418,
        0, 4418,    0,    0,    0, 4418, 4419, 4419, 4419, 4419,

        0, 4419,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4419, 4419, 4419, 4419, 4419,
        0,    0,    0, 4419,    0,    0,    0, 4419, 4420, 4420,
     4420, 4420,    0, 4420,    0,    0,    0,    0,    0,    0,
        0,    0, 4420, 4420,    0, 4420,    0, 4420, 4420, 4420,
     4420, 4420,    0, 4420,    0, 4420,    0,    0,    0, 4420,
     4421,    0,    0, 4421,    0, 4421,    0,    0,    0,    0,
        0,    0,    0,    0, 4421,    0,    0, 4421,    0, 4421,
     4421, 4421, 4421, 4421,    0,    0,    0, 4421,    0,    0,
        0, 4421, 4422,    0,    0,    0,    0,    0,    0,    0,

        0, 4422,    0,    0,    0,    0, 4422, 4422, 4422, 4422,
     4422,    0,    0,    0, 4422,    0,    0,    0, 4422, 4423,
        0,    0,    0,    0,    0,    0,    0,    0, 4423,    0,
        0,    0,    0, 4423, 4423, 4423, 4423, 4423,    0,    0,
        0, 4423,    0,    0,    0, 4423, 4424,    0,    0,    0,
        0,    0,    0,    0,    0, 4424,    0,    0,    0,    0,
     4424, 4424, 4424, 4424, 4424,    0,    0,    0, 4424,    0,
        0,    0, 4424, 4425, 4425,    0, 4425,    0, 4425, 4425,
     4425, 4425, 4425, 4425, 4425, 4425, 4425, 4425, 4425, 4425,
     4425, 4425, 4425, 4425, 4425, 4425, 4425, 4425, 4425,    0,

     4425, 4425, 4425, 4425, 4425, 4425, 4426, 4426,    0, 4426,
     4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426,
     4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426,
     4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426, 4426, 4427,
     4427,    0, 4427, 4427, 4427, 4427, 4427, 4427, 4427, 4427,
     4427, 4427, 4427, 4427, 4427, 4427, 4427, 4427, 4427, 4427,
     4427, 4427, 4427, 4427, 4427, 4427, 4427, 4427, 4427, 4427,
     4427, 4427, 4428, 4428,    0, 4428, 4428, 4428, 4428, 4428,
     4428, 4428, 4428, 4428, 4428, 4428, 4428, 4428, 4428, 4428,
     4428, 4428, 4428, 4428, 4428, 4428, 4428, 4428, 4428, 4428,

     4428, 4428, 4428, 4428, 4428, 4429, 4429, 4429, 4429, 4429,
     4429, 4429, 4429, 4429, 4429, 4429, 4429, 4429, 4429, 4429,
     4429, 4429, 4429, 4429, 4429, 4429, 4429, 4429, 4429, 4429,
     4429, 4429, 4429, 4429, 4429, 4429, 4429, 4429, 4430, 4430,
        0, 4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430,
     4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430,
     4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430, 4430,
     4430, 4431, 4431,    0, 4431, 4431,    0,    0, 4431, 4431,
     4431, 4431, 4431, 4431, 4431, 4431, 4431, 4431, 4431, 4431,
     4431, 4431, 4431, 4431, 4431, 4431, 4431,    0, 4431, 4431,

     4431, 4431, 4431, 4431, 4432, 4432, 4432, 4432, 4432, 4432,
     4432, 4432, 4432, 4432, 4432, 4432, 4432, 4432, 4432, 4432,
     4432, 4432, 4432, 4432, 4432, 4432, 4432, 4432, 4432, 4432,
     4432, 4432, 4432, 4432, 4432, 4432, 4432, 4433, 4433,    0,
     4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433,
     4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433,
     4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433, 4433,
     4434, 4434,    0, 4434, 4434, 4434, 4434, 4434, 4434, 4434,
     4434, 4434, 4434, 4434, 4434, 4434, 4434, 4434, 4434, 4434,
     4434, 4434, 4434, 4434, 4434, 4434, 4434, 4434, 4434, 4434,

     4434, 4434, 4434, 4435, 4435,    0, 4435, 4435, 4435, 4435,
     4435, 4435, 4435,    0, 4435, 4435, 4435, 4435, 4435, 4435,
     4435, 4435, 4435, 4435, 4435, 4435, 4435, 4435, 4435, 4435,
     4435, 4435, 4435, 4435, 4435, 4435, 4436, 4436,    0, 4436,
     4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436,
     4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436,
     4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436, 4436, 4437,
        0,    0,    0,    0,    0,    0,    0,    0, 4437,    0,
        0,    0,    0, 4437, 4437, 4437, 4437, 4437,    0,    0,
        0, 4437,    0,    0,    0, 4437, 4438,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     4438, 4438, 4438, 4438, 4438,    0,    0,    0, 4438,    0,
        0,    0, 4438, 4439,    0,    0,    0,    0,    0,    0,
     4439,    0, 4439, 4439,    0,    0,    0, 4439, 4439, 4439,
     4439, 4439,    0,    0,    0, 4439,    0,    0,    0, 4439,
     4440,    0, 4440, 4440,    0, 4440, 4440, 4440,    0,    0,
     4440, 4440, 4440, 4440, 4440, 4440, 4440, 4440, 4440, 4440,
     4440, 4440, 4440, 4440, 4440, 4440,    0, 4440, 4440, 4440,
     4440, 4440, 4440, 4441, 4441, 4441, 4441, 4441, 4441, 4441,
     4441, 4441, 4441, 4441, 4441, 4441, 4441, 4441, 4441, 4441,

     4441, 4441, 4441, 4441, 4441, 4441, 4441, 4441, 4441, 4441,
     4441, 4441, 4441, 4441, 4441, 4441, 4442, 4442,    0, 4442,
     4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442,
     4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442,
     4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442, 4442, 4443,
     4443,    0, 4443, 4443, 4443, 4443, 4443, 4443,    0, 4443,
     4443, 4443, 4443, 4443, 4443, 4443, 4443, 4443, 4443, 4443,
     4443, 4443, 4443, 4443, 4443, 4443, 4443, 4443, 4443, 4443,
     4443, 4443, 4444, 4444, 4444, 4444, 4444, 4444, 4444, 4444,
     4444, 4444, 4444, 4444, 4444, 4444, 4444, 4444, 4444, 4444,

     4444, 4444, 4444, 4444, 4444, 4444, 4444, 4444, 4444, 4444,
     4444, 4444, 4444, 4444, 4444, 4445, 4445,    0, 4445, 4445,
     4445, 4445, 4445, 4445, 4445, 4445, 4445, 4445, 4445, 4445,
     4445, 4445, 4445, 4445, 4445, 4445, 4445, 4445, 4445, 4445,
     4445, 4445, 4445, 4445, 4445, 4445, 4445, 4445, 4446, 4446,
     4446, 4446, 4446, 4446, 4446, 4446, 4446, 4446,    0, 4446,
     4446, 4446,    0, 4446, 4446, 4446, 4446, 4446, 4446, 4446,
     4446, 4446, 4446, 4446, 4446, 4446, 4446, 4446, 4446, 4446,
     4446, 4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447,
     4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447,

     4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447, 4447,
     4447, 4447, 4447, 4447, 4448, 4448,    0, 4448, 4448, 4448,
     4448, 4448, 4448, 4448, 4448, 4448, 4448, 4448, 4448, 4448,
     4448, 4448, 4448, 4448, 4448, 4448, 4448, 4448, 4448, 4448,
     4448, 4448, 4448, 4448, 4448, 4448, 4448, 4449, 4449, 4449,
     4449, 4449, 4449, 4449, 4449, 4449, 4449,    0, 4449, 4449,
     4449,    0, 4449, 4449, 4449, 4449, 4449, 4449, 4449, 4449,
     4449, 4449, 4449, 4449, 4449, 4449, 4449, 4449, 4449, 4449,
     4450, 4450,    0, 4450, 4450, 4450, 4450, 4450, 4450, 4450,
     4450, 4450, 4450, 4450, 4450, 4450, 4450, 4450, 4450, 4450,

     4450, 4450, 4450, 4450, 4450, 4450, 4450, 4450, 4450, 4450,
     4450, 4450, 4450, 4451, 4451, 4451, 4451, 4451, 4451, 4451,
     4451, 4451, 4451, 4451, 4451, 4451, 4451,    0, 4451, 4451,
     4451, 4451, 4451, 4451, 4451, 4451, 4451, 4451, 4451, 4451,
     4451, 4451, 4451, 4451, 4451, 4451, 4452, 4452,    0, 4452,
     4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452,
     4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452,
     4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452, 4452, 4453,
     4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453,
     4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453,

     4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453, 4453,
     4453, 4453, 4454, 4454,    0,    0, 4454,    0, 4454, 4454,
     4454, 4454, 4454, 4454, 4454, 4454, 4454, 4454, 4454, 4454,
     4454, 4454, 4454, 4454, 4454, 4454, 4454, 4454,    0, 4454,
     4454, 4454, 4454, 4454, 4454, 4455, 4455,    0, 4455, 4455,
     4455, 4455, 4455, 4455, 4455, 4455, 4455, 4455, 4455, 4455,
     4455, 4455, 4455, 4455, 4455, 4455, 4455, 4455, 4455, 4455,
     4455, 4455, 4455, 4455, 4455, 4455, 4455, 4455, 4456, 4456,
     4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456,
     4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456,

     4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456, 4456,
     4456, 4457, 4457,    0, 4457, 4457, 4457, 4457, 4457, 4457,
     4457, 4457, 4457, 4457, 4457, 4457, 4457, 4457, 4457, 4457,
     4457, 4457, 4457, 4457, 4457, 4457, 4457, 4457, 4457, 4457,
     4457, 4457, 4457, 4457, 4458, 4458, 4458, 4458, 4458, 4458,
     4458, 4458, 4458, 4458, 4458, 4458, 4458, 4458, 4458, 4458,
     4458, 4458, 4458, 4458, 4458, 4458, 4458, 4458, 4458, 4458,
     4458, 4458, 4458, 4458, 4458, 4458, 4458, 4459, 4459,    0,
     4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459,
     4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459,

     4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459, 4459,
     4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460,
     4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460,
     4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460, 4460,
     4460, 4460, 4460, 4461, 4461,    0,    0, 4461, 4461, 4461,
        0, 4461, 4461, 4461, 4461, 4461, 4461, 4461, 4461, 4461,
     4461, 4461, 4461, 4461, 4461, 4461, 4461, 4461, 4461,    0,
     4461, 4461, 4461, 4461, 4461, 4461, 4462, 4462,    0, 4462,
     4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462,
     4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462,

     4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4463,
     4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463,
     4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463,
     4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463, 4463,
     4463, 4463, 4464, 4464,    0, 4464, 4464, 4464, 4464, 4464,
     4464, 4464, 4464, 4464, 4464, 4464, 4464, 4464, 4464, 4464,
     4464, 4464, 4464, 4464, 4464, 4464, 4464, 4464, 4464, 4464,
     4464, 4464, 4464, 4464, 4464, 4465, 4465, 4465, 4465, 4465,
     4465, 4465, 4465, 4465, 4465, 4465, 4465, 4465, 4465, 4465,
     4465, 4465, 4465, 4465, 4465, 4465, 4465, 4465, 4465, 4465,

     4465, 4465, 4465, 4465, 4465, 4465, 4465, 4465, 4466, 4466,
        0, 4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466,
     4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466,
     4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466, 4466,
     4466, 4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467,
     4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467,
     4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467, 4467,
     4467, 4467, 4467, 4467, 4468, 4468,    0, 4468, 4468,    0,
     4468, 4468, 4468, 4468, 4468, 4468, 4468, 4468, 4468, 4468,
     4468, 4468, 4468, 4468, 4468, 4468, 4468, 4468, 4468, 4468,

     4468, 4468, 4468, 4468, 4468, 4468, 4468, 4469, 4469,    0,
     4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469,
     4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469,
     4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469, 4469,
     4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470,
     4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470,
     4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470, 4470,
     4470, 4470, 4470, 4471, 4471,    0, 4471, 4471, 4471, 4471,
     4471, 4471, 4471, 4471, 4471, 4471, 4471, 4471, 4471, 4471,
     4471, 4471, 4471, 4471, 4471, 4471, 4471, 4471, 4471, 4471,

     4471, 4471, 4471, 4471, 4471, 4471, 4472, 4472, 4472, 4472,
     4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472,
     4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472,
     4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472, 4472, 4473,
     4473,    0, 4473, 4473, 4473, 4473, 4473, 4473, 4473, 4473,
     4473, 4473, 4473, 4473, 4473, 4473, 4473, 4473, 4473, 4473,
     4473, 4473, 4473, 4473, 4473, 4473, 4473, 4473, 4473, 4473,
     4473, 4473, 4474, 4474, 4474, 4474, 4474, 4474, 4474, 4474,
     4474, 4474, 4474, 4474, 4474, 4474, 4474, 4474, 4474, 4474,
     4474, 4474, 4474, 4474, 4474, 4474, 4474, 4474, 4474, 4474,

     4474, 4474, 4474, 4474, 4474, 4475, 4475,    0, 4475, 4475,
     4475, 4475, 4475, 4475, 4475, 4475, 4475, 4475, 4475, 4475,
     4475, 4475, 4475, 4475, 4475, 4475, 4475, 4475, 4475, 4475,
     4475, 4475, 4475, 4475, 4475, 4475, 4475, 4475, 4476, 4476,
        0, 4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476,
     4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476,
     4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476, 4476,
     4476, 4477, 4477,    0, 4477, 4477, 4477, 4477, 4477, 4477,
     4477, 4477, 4477, 4477, 4477, 4477, 4477, 4477, 4477, 4477,
     4477, 4477, 4477, 4477, 4477, 4477, 4477, 4477, 4477, 4477,

     4477, 4477, 4477, 4477, 4478, 4478, 4478, 4478, 4478, 4478,
     4478, 4478, 4478, 4478, 4478, 4478, 4478, 4478, 4478, 4478,
     4478, 4478, 4478, 4478, 4478, 4478, 4478, 4478, 4478, 4478,
     4478, 4478, 4478, 4478, 4478, 4478, 4478, 4479, 4479,    0,
        0, 4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479,
     4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479,
     4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479, 4479,
     4480, 4480,    0, 4480, 4480, 4480, 4480, 4480, 4480, 4480,
     4480, 4480, 4480, 4480, 4480, 4480, 4480, 4480, 4480, 4480,
     4480, 4480, 4480, 4480, 4480, 4480, 4480, 4480, 4480, 4480,

     4480, 4480, 4480, 4481, 4481, 4481, 4481, 4481, 4481, 4481,
     4481, 4481, 4481, 4481, 4481, 4481, 4481, 4481, 4481, 4481,
     4481, 4481, 4481, 4481, 4481, 4481, 4481, 4481, 4481, 4481,
     4481, 4481, 4481, 4481, 4481, 4481, 4482, 4482,    0, 4482,
     4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482,
     4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482,
     4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482, 4482, 4483,
     4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483,
     4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483,
     4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483, 4483,

     4483, 4483, 4484, 4484,    0, 4484, 4484, 4484, 4484, 4484,
     4484, 4484, 4484, 4484, 4484, 4484, 4484, 4484, 4484, 4484,
     4484, 4484, 4484, 4484, 4484, 4484, 4484, 4484, 4484, 4484,
     4484, 4484, 4484, 4484, 4484, 4485, 4485, 4485, 4485, 4485,
     4485, 4485, 4485, 4485, 4485, 4485, 4485, 4485, 4485, 4485,
     4485, 4485, 4485, 4485, 4485, 4485, 4485, 4485, 4485, 4485,
     4485, 4485, 4485, 4485, 4485, 4485, 4485, 4485, 4486, 4486,
        0, 4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486,
     4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486,
     4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486, 4486,

     4486, 4487, 4487,    0, 4487, 4487, 4487, 4487, 4487, 4487,
     4487, 4487, 4487, 4487, 4487, 4487, 4487, 4487, 4487, 4487,
     4487, 4487, 4487, 4487, 4487, 4487, 4487, 4487, 4487, 4487,
     4487, 4487, 4487, 4487, 4488, 4488,    0, 4488, 4488, 4488,
     4488, 4488, 4488, 4488, 4488, 4488, 4488, 4488, 4488, 4488,
     4488, 4488, 4488, 4488, 4488, 4488, 4488, 4488, 4488, 4488,
     4488, 4488, 4488, 4488, 4488, 4488, 4488, 4489, 4489, 4489,
     4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489,
     4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489,
     4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489, 4489,

     4490, 4490, 4490, 4490,    0, 4490,    0,    0,    0,    0,
        0,    0, 4490,    0, 4490,    0,    0,    0,    0, 4490,
     4490, 4490, 4490, 4490,    0,    0,    0, 4490,    0,    0,
        0, 4490, 4491, 4491, 4491, 4491,    0, 4491,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 4491,    0,    0,
        0, 4491, 4491, 4491, 4491, 4491,    0, 4491,    0, 4491,
        0,    0, 4491, 4491, 4492, 4492, 4492, 4492,    0, 4492,
        0, 4492, 4492,    0, 4492,    0,    0,    0, 4492, 4492,
     4492, 4492,    0, 4492, 4492, 4492, 4492, 4492,    0, 4492,
     4492, 4492,    0,    0,    0, 4492, 4493, 4493, 4493, 4493,

        0, 4493,    0, 4493, 4493,    0, 4493,    0, 4493,    0,
     4493, 4493, 4493, 4493,    0, 4493, 4493, 4493, 4493, 4493,
        0, 4493, 4493, 4493,    0,    0,    0, 4493, 4494, 4494,
     4494, 4494,    0, 4494,    0,    0, 4494,    0,    0,    0,
        0,    0, 4494, 4494,    0,    0,    0, 4494, 4494, 4494,
     4494, 4494,    0, 4494,    0, 4494,    0,    0, 4494, 4494,
     4495, 4495, 4495, 4495,    0, 4495,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 4495,
     4495, 4495, 4495, 4495,    0,    0,    0, 4495,    0,    0,
     4495, 4495, 4496, 4496, 4496, 4496,    0, 4496,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4496, 4496, 4496, 4496, 4496,    0,    0,    0, 4496,
        0,    0,    0, 4496, 4497,    0,    0, 4497,    0, 4497,
        0,    0, 4497,    0,    0,    0,    0,    0, 4497, 4497,
        0,    0,    0, 4497, 4497, 4497, 4497, 4497,    0,    0,
        0, 4497,    0,    0, 4497, 4497, 4500,    0,    0,    0,
        0,    0,    0,    0, 4500,    0,    0,    0,    0, 4500,
     4500, 4500, 4500, 4500, 4501,    0,    0,    0,    0,    0,
        0,    0, 4501,    0,    0,    0,    0, 4501, 4501,    0,
        0, 4501, 4503, 4503, 4503, 4503,    0, 4503,    0, 4503,

     4503,    0, 4503,    0,    0,    0, 4503, 4503, 4503, 4503,
        0, 4503, 4503, 4503, 4503, 4503,    0, 4503, 4503, 4503,
        0,    0,    0, 4503, 4504, 4504,    0, 4504, 4504,    0,
     4504, 4504, 4504, 4504, 4504, 4504, 4504, 4504,    0, 4504,
     4504, 4504, 4504, 4504, 4504, 4504, 4504, 4504, 4504, 4504,
     4504, 4504, 4504,    0, 4504, 4504, 4504, 4505, 4505, 4505,
     4505,    0, 4505,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4505,    0,    0,    0, 4505, 4505, 4505, 4505,
     4505,    0, 4505,    0, 4505,    0,    0, 4505, 4505, 4506,
     4506, 4506, 4506, 4506, 4506, 4506, 4506, 4506, 4506, 4506,

     4506, 4506, 4506, 4506,    0, 4506, 4506, 4506, 4506,    0,
        0,    0,    0,    0, 4506, 4506, 4506,    0, 4506, 4506,
     4506, 4506, 4507, 4507, 4507, 4507, 4507, 4507, 4507, 4507,
     4507, 4507, 4507, 4507, 4507, 4507, 4507,    0, 4507, 4507,
     4507, 4507,    0,    0,    0,    0,    0, 4507, 4507, 4507,
        0, 4507, 4507, 4507, 4507, 4508,    0, 4508, 4508,    0,
     4508, 4508, 4508, 4508,    0, 4508, 4508, 4508, 4508, 4508,
     4508, 4508, 4508, 4508, 4508, 4508, 4508, 4508, 4508, 4508,
     4508,    0, 4508, 4508, 4508, 4508, 4508, 4508, 4509, 4509,
        0, 4509, 4509,    0, 4509, 4509, 4509, 4509, 4509, 4509,

        0,    0,    0, 4509, 4509, 4509, 4509, 4509, 4509, 4509,
     4509, 4509, 4509, 4509, 4509, 4509, 4509,    0, 4509, 4509,
     4509, 4510, 4510,    0, 4510, 4510,    0, 4510, 4510, 4510,
     4510, 4510, 4510, 4510, 4510,    0, 4510, 4510, 4510, 4510,
     4510, 4510, 4510, 4510, 4510, 4510, 4510, 4510, 4510, 4510,
        0, 4510, 4510, 4510, 4511, 4511,    0, 4511, 4511,    0,
     4511, 4511,    0,    0, 4511, 4511, 4511, 4511,    0, 4511,
     4511, 4511, 4511, 4511, 4511, 4511, 4511, 4511, 4511, 4511,
     4511, 4511, 4511,    0,    0, 4511, 4511, 4512, 4512, 4512,
     4512,    0, 4512,    0, 4512,    0,    0,    0,    0,    0,

        0, 4512,    0,    0, 4512,    0, 4512, 4512, 4512, 4512,
     4512,    0,    0,    0, 4512,    0,    0,    0, 4512, 4513,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 4513, 4513, 4513, 4513, 4513,    0,    0,
        0, 4513,    0,    0,    0, 4513, 4514, 4514,    0, 4514,
     4514,    0, 4514, 4514, 4514, 4514, 4514, 4514, 4514, 4514,
        0, 4514, 4514, 4514, 4514, 4514, 4514, 4514, 4514, 4514,
     4514, 4514, 4514, 4514, 4514,    0, 4514, 4514, 4514, 4515,
     4515, 4515, 4515,    0, 4515,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4515,    0,    0,    0, 4515, 4515,

     4515, 4515, 4515,    0, 4515,    0, 4515,    0,    0, 4515,
     4515, 4516,    0,    0, 4516,    0, 4516,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     4516, 4516, 4516, 4516, 4516,    0,    0,    0, 4516,    0,
        0,    0, 4516, 4517,    0,    0, 4517,    0, 4517,    0,
        0,    0,    0,    0,    0,    0,    0, 4517, 4517,    0,
     4517,    0, 4517, 4517, 4517, 4517, 4517,    0,    0,    0,
     4517,    0,    0,    0, 4517, 4518,    0,    0, 4518,    0,
     4518,    0, 4518,    0,    0,    0, 4518, 4518,    0, 4518,
     4518,    0, 4518,    0, 4518, 4518, 4518, 4518, 4518,    0,

        0,    0, 4518,    0,    0,    0, 4518, 4519,    0,    0,
     4519,    0, 4519,    0,    0, 4519,    0,    0,    0,    0,
        0, 4519,    0,    0,    0,    0, 4519, 4519, 4519, 4519,
     4519,    0,    0,    0, 4519,    0,    0,    0, 4519, 4520,
        0,    0, 4520,    0, 4520,    0,    0,    0,    0,    0,
        0,    0,    0, 4520, 4520,    0, 4520,    0, 4520, 4520,
     4520, 4520, 4520,    0,    0,    0, 4520,    0,    0,    0,
     4520, 4521, 4521, 4521, 4521, 4521, 4521, 4521, 4521, 4521,
     4521, 4521, 4521, 4521, 4521, 4521,    0, 4521, 4521, 4521,
     4521,    0,    0,    0,    0,    0, 4521, 4521, 4521,    0,

     4521, 4521, 4521, 4521, 4522, 4522, 4522, 4522, 4522, 4522,
     4522, 4522, 4522, 4522, 4522, 4522, 4522, 4522, 4522,    0,
     4522, 4522, 4522, 4522,    0,    0,    0,    0,    0, 4522,
     4522, 4522,    0, 4522, 4522, 4522, 4522, 4523, 4523,    0,
     4523, 4523, 4523, 4523, 4523,    0,    0, 4523, 4523, 4523,
     4523, 4523, 4523, 4523, 4523,    0, 4523, 4523, 4523, 4523,
     4523, 4523,    0, 4523,    0, 4523,    0,    0, 4523, 4523,
     4524, 4524, 4524, 4524,    0, 4524,    0, 4524,    0,    0,
        0,    0,    0,    0, 4524,    0,    0,    0,    0, 4524,
     4524, 4524, 4524, 4524,    0,    0,    0, 4524,    0,    0,

        0, 4524, 4525, 4525,    0, 4525,    0, 4525,    0, 4525,
        0,    0,    0, 4525, 4525,    0, 4525, 4525,    0, 4525,
        0, 4525, 4525, 4525, 4525, 4525,    0,    0,    0, 4525,
        0,    0,    0, 4525, 4526,    0,    0, 4526,    0,    0,
        0,    0,    0, 4526,    0,    0,    0,    0, 4526, 4526,
     4526, 4526, 4526,    0,    0,    0, 4526,    0,    0,    0,
     4526, 4527,    0,    0,    0,    0,    0,    0, 4527,    0,
     4527,    0,    0,    0,    0, 4527, 4527, 4527, 4527, 4527,
        0,    0,    0, 4527,    0,    0,    0, 4527, 4528,    0,
        0,    0,    0,    0,    0,    0,    0, 4528, 4528,    0,

        0,    0, 4528, 4528, 4528, 4528, 4528,    0,    0,    0,
     4528,    0,    0,    0, 4528, 4529,    0,    0,    0,    0,
        0,    0,    0,    0, 4529,    0,    0,    0,    0, 4529,
     4529, 4529, 4529, 4529,    0, 4529,    0, 4529,    0,    0,
        0, 4529, 4530,    0,    0, 4530,    0, 4530,    0, 4530,
        0,    0,    0,    0, 4530,    0, 4530, 4530,    0,    0,
        0, 4530, 4530, 4530, 4530, 4530,    0, 4530,    0, 4530,
        0,    0,    0, 4530, 4531,    0,    0,    0,    0,    0,
        0, 4531,    0, 4531,    0,    0,    0,    0, 4531, 4531,
     4531, 4531, 4531,    0,    0,    0, 4531,    0,    0,    0,

     4531, 4532,    0,    0,    0,    0,    0,    0,    0,    0,
     4532,    0,    0,    0,    0, 4532, 4532, 4532, 4532, 4532,
        0,    0,    0, 4532,    0,    0,    0, 4532, 4533,    0,
        0,    0,    0,    0,    0,    0,    0, 4533, 4533,    0,
        0,    0, 4533, 4533, 4533, 4533, 4533,    0, 4533,    0,
     4533,    0,    0,    0, 4533, 4534,    0,    0,    0,    0,
        0,    0,    0,    0, 4534,    0,    0,    0,    0, 4534,
     4534, 4534, 4534, 4534,    0,    0,    0, 4534,    0,    0,
        0, 4534, 4535, 4535,    0, 4535, 4535, 4535, 4535, 4535,
     4535, 4535, 4535, 4535, 4535, 4535, 4535, 4535, 4535, 4535,

     4535, 4535, 4535, 4535, 4535, 4535, 4535, 4535, 4535, 4535,
     4535, 4535, 4535, 4535, 4535, 4536, 4536,    0, 4536, 4536,
     4536, 4536, 4536, 4536, 4536, 4536, 4536, 4536, 4536, 4536,
     4536, 4536, 4536, 4536, 4536, 4536, 4536, 4536, 4536, 4536,
     4536, 4536, 4536, 4536, 4536, 4536, 4536, 4536, 4537, 4537,
        0, 4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537,
     4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537,
     4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537, 4537,
     4537, 4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538,
     4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538,

     4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538, 4538,
     4538, 4538, 4538, 4538, 4539, 4539,    0, 4539, 4539, 4539,
     4539, 4539, 4539, 4539, 4539, 4539, 4539, 4539, 4539, 4539,
     4539, 4539, 4539, 4539, 4539, 4539, 4539, 4539, 4539, 4539,
     4539, 4539, 4539, 4539, 4539, 4539, 4539, 4540, 4540, 4540,
     4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540,
     4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540,
     4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540, 4540,
     4541, 4541,    0, 4541, 4541, 4541, 4541, 4541, 4541, 4541,
     4541, 4541, 4541, 4541, 4541, 4541, 4541, 4541, 4541, 4541,

     4541, 4541, 4541, 4541, 4541, 4541, 4541, 4541, 4541, 4541,
     4541, 4541, 4541, 4542, 4542,    0, 4542, 4542, 4542, 4542,
     4542, 4542, 4542, 4542, 4542, 4542, 4542, 4542, 4542, 4542,
     4542, 4542, 4542, 4542, 4542, 4542, 4542, 4542, 4542, 4542,
     4542, 4542, 4542, 4542, 4542, 4542, 4543, 4543, 4543, 4543,
     4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543,
     4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543,
     4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543, 4543, 4544,
     4544, 4544, 4544,    0, 4544,    0,    0,    0,    0,    0,
        0,    0,    0, 4544, 4544,    0, 4544,    0, 4544, 4544,

     4544, 4544, 4544,    0, 4544,    0, 4544,    0,    0,    0,
     4544, 4545, 4545, 4545, 4545,    0, 4545,    0,    0,    0,
        0,    0,    0,    0,    0, 4545, 4545,    0, 4545,    0,
     4545, 4545, 4545, 4545, 4545,    0, 4545,    0, 4545,    0,
        0,    0, 4545, 4546, 4546, 4546, 4546,    0, 4546,    0,
        0,    0,    0,    0,    0,    0,    0, 4546, 4546,    0,
     4546,    0, 4546, 4546, 4546, 4546, 4546,    0, 4546,    0,
     4546,    0,    0,    0, 4546, 4547,    0,    0,    0,    0,
        0,    0,    0,    0, 4547,    0,    0,    0,    0, 4547,
     4547, 4547, 4547, 4547,    0,    0,    0, 4547,    0,    0,

        0, 4547, 4548,    0,    0,    0,    0,    0,    0,    0,
        0, 4548,    0,    0,    0,    0, 4548, 4548, 4548, 4548,
     4548,    0,    0,    0, 4548,    0,    0,    0, 4548, 4549,
        0,    0,    0,    0,    0,    0,    0,    0, 4549,    0,
        0,    0,    0, 4549, 4549, 4549, 4549, 4549,    0,    0,
        0, 4549,    0,    0,    0, 4549, 4550, 4550,    0, 4550,
        0, 4550, 4550, 4550, 4550, 4550, 4550, 4550, 4550, 4550,
     4550, 4550, 4550, 4550, 4550, 4550, 4550, 4550, 4550, 4550,
     4550, 4550,    0, 4550, 4550, 4550, 4550, 4550, 4550, 4551,
     4551,    0, 4551, 4551, 4551, 4551, 4551, 4551, 4551, 4551,

     4551, 4551, 4551, 4551, 4551, 4551, 4551, 4551, 4551, 4551,
     4551, 4551, 4551, 4551, 4551, 4551, 4551, 4551, 4551, 4551,
     4551, 4551, 4552, 4552,    0, 4552, 4552, 4552, 4552, 4552,
     4552, 4552, 4552, 4552, 4552, 4552, 4552, 4552, 4552, 4552,
     4552, 4552, 4552, 4552, 4552, 4552, 4552, 4552, 4552, 4552,
     4552, 4552, 4552, 4552, 4552, 4553, 4553, 4553, 4553, 4553,
     4553, 4553, 4553, 4553, 4553, 4553, 4553, 4553, 4553, 4553,
     4553, 4553, 4553, 4553, 4553, 4553, 4553, 4553, 4553, 4553,
     4553, 4553, 4553, 4553, 4553, 4553, 4553, 4553, 4554, 4554,
        0, 4554, 4554,    0,    0, 4554, 4554, 4554, 4554, 4554,

     4554, 4554, 4554, 4554, 4554, 4554, 4554, 4554, 4554, 4554,
     4554, 4554, 4554, 4554,    0, 4554, 4554, 4554, 4554, 4554,
     4554, 4555, 4555,    0, 4555, 4555, 4555, 4555, 4555, 4555,
     4555, 4555, 4555, 4555, 4555, 4555, 4555, 4555, 4555, 4555,
     4555, 4555, 4555, 4555, 4555, 4555, 4555, 4555, 4555, 4555,
     4555, 4555, 4555, 4555, 4556, 4556, 4556, 4556, 4556, 4556,
     4556, 4556, 4556, 4556, 4556, 4556, 4556, 4556, 4556, 4556,
     4556, 4556, 4556, 4556, 4556, 4556, 4556, 4556, 4556, 4556,
     4556, 4556, 4556, 4556, 4556, 4556, 4556, 4557, 4557,    0,
     4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557,

     4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557,
     4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557, 4557,
     4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558,
     4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558,
     4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558, 4558,
     4558, 4558, 4558, 4559, 4559,    0, 4559, 4559, 4559, 4559,
     4559, 4559, 4559, 4559, 4559, 4559, 4559, 4559, 4559, 4559,
     4559, 4559, 4559, 4559, 4559, 4559, 4559, 4559, 4559, 4559,
     4559, 4559, 4559, 4559, 4559, 4559, 4560, 4560, 4560, 4560,
     4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560,

     4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560,
     4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560, 4560, 4561,
     4561,    0, 4561, 4561, 4561, 4561, 4561, 4561, 4561, 4561,
     4561, 4561, 4561, 4561, 4561, 4561, 4561, 4561, 4561, 4561,
     4561, 4561, 4561, 4561, 4561, 4561, 4561, 4561, 4561, 4561,
     4561, 4561, 4562, 4562,    0, 4562, 4562, 4562, 4562, 4562,
     4562, 4562, 4562, 4562, 4562, 4562, 4562, 4562, 4562, 4562,
     4562, 4562, 4562, 4562, 4562, 4562, 4562, 4562, 4562, 4562,
     4562, 4562, 4562, 4562, 4562, 4563, 4563,    0, 4563, 4563,
     4563, 4563, 4563, 4563, 4563, 4563, 4563, 4563, 4563, 4563,

     4563, 4563, 4563, 4563, 4563, 4563, 4563, 4563, 4563, 4563,
     4563, 4563, 4563, 4563, 4563, 4563, 4563, 4563, 4564, 4564,
     4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564,
     4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564,
     4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564, 4564,
     4564, 4565,    0,    0,    0,    0,    0,    0,    0,    0,
     4565,    0,    0,    0,    0, 4565, 4565, 4565, 4565, 4565,
        0,    0,    0, 4565,    0,    0,    0, 4565, 4566,    0,
        0,    0,    0,    0,    0,    0,    0, 4566, 4566,    0,
        0,    0, 4566, 4566, 4566, 4566, 4566,    0,    0,    0,

     4566,    0,    0,    0, 4566, 4567,    0,    0,    0,    0,
        0,    0, 4567,    0, 4567, 4567,    0,    0,    0, 4567,
     4567, 4567, 4567, 4567,    0,    0,    0, 4567,    0,    0,
        0, 4567, 4568,    0, 4568, 4568,    0, 4568, 4568, 4568,
        0,    0, 4568, 4568, 4568, 4568, 4568, 4568, 4568, 4568,
     4568, 4568, 4568, 4568, 4568, 4568, 4568, 4568,    0, 4568,
     4568, 4568, 4568, 4568, 4568, 4569, 4569,    0, 4569, 4569,
     4569, 4569, 4569, 4569,    0, 4569, 4569, 4569, 4569, 4569,
     4569, 4569, 4569, 4569, 4569, 4569, 4569, 4569, 4569, 4569,
     4569, 4569, 4569, 4569, 4569, 4569, 4569, 4569, 4570, 4570,

        0, 4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570,
     4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570,
     4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570, 4570,
     4570, 4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571,
     4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571,
     4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571, 4571,
     4571, 4571, 4571, 4571, 4572, 4572,    0, 4572, 4572, 4572,
     4572, 4572, 4572, 4572, 4572, 4572, 4572, 4572, 4572, 4572,
     4572, 4572, 4572, 4572, 4572, 4572, 4572, 4572, 4572, 4572,
     4572, 4572, 4572, 4572, 4572, 4572, 4572, 4573, 4573, 4573,

     4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573,
     4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573,
     4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573, 4573,
     4574, 4574,    0, 4574, 4574, 4574, 4574, 4574, 4574, 4574,
     4574, 4574, 4574, 4574, 4574, 4574, 4574, 4574, 4574, 4574,
     4574, 4574, 4574, 4574, 4574, 4574, 4574, 4574, 4574, 4574,
     4574, 4574, 4574, 4575, 4575, 4575, 4575, 4575, 4575, 4575,
     4575, 4575, 4575, 4575, 4575, 4575, 4575, 4575, 4575, 4575,
     4575, 4575, 4575, 4575, 4575, 4575, 4575, 4575, 4575, 4575,
     4575, 4575, 4575, 4575, 4575, 4575, 4576, 4576, 4576, 4576,

     4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576,
     4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576,
     4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576, 4576, 4577,
     4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577,
     4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577,
     4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577, 4577,
     4577, 4577, 4578, 4578,    0, 4578, 4578, 4578, 4578, 4578,
     4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
     4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
     4578, 4578, 4578, 4578, 4578, 4579, 4579, 4579, 4579, 4579,

     4579, 4579, 4579, 4579, 4579, 4579, 4579, 4579, 4579,    0,
     4579, 4579, 4579, 4579, 4579, 4579, 4579, 4579, 4579, 4579,
     4579, 4579, 4579, 4579, 4579, 4579, 4579, 4579, 4580, 4580,
     4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580,
     4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580,
     4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580, 4580,
     4580, 4581, 4581,    0,    0, 4581,    0, 4581, 4581, 4581,
     4581, 4581, 4581, 4581, 4581, 4581, 4581, 4581, 4581, 4581,
     4581, 4581, 4581, 4581, 4581, 4581, 4581,    0, 4581, 4581,
     4581, 4581, 4581, 4581, 4582, 4582,    0, 4582, 4582, 4582,

     4582, 4582, 4582, 4582, 4582, 4582, 4582, 4582, 4582, 4582,
     4582, 4582, 4582, 4582, 4582, 4582, 4582, 4582, 4582, 4582,
     4582, 4582, 4582, 4582, 4582, 4582, 4582, 4583, 4583, 4583,
     4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583,
     4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583,
     4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583, 4583,
     4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584,
     4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584,
     4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584, 4584,
     4584, 4584, 4584, 4585, 4585,    0,    0, 4585, 4585, 4585,

        0, 4585, 4585, 4585, 4585, 4585, 4585, 4585, 4585, 4585,
     4585, 4585, 4585, 4585, 4585, 4585, 4585, 4585, 4585,    0,
     4585, 4585, 4585, 4585, 4585, 4585, 4586, 4586,    0, 4586,
     4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586,
     4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586,
     4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586, 4586, 4587,
     4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587,
     4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587,
     4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587, 4587,
     4587, 4587, 4588, 4588, 4588, 4588, 4588, 4588, 4588, 4588,

     4588, 4588, 4588, 4588, 4588, 4588, 4588, 4588, 4588, 4588,
     4588, 4588, 4588, 4588, 4588, 4588, 4588, 4588, 4588, 4588,
     4588, 4588, 4588, 4588, 4588, 4589, 4589,    0, 4589, 4589,
        0, 4589, 4589, 4589, 4589, 4589, 4589, 4589, 4589, 4589,
     4589, 4589, 4589, 4589, 4589, 4589, 4589, 4589, 4589, 4589,
     4589, 4589, 4589, 4589, 4589, 4589, 4589, 4589, 4590, 4590,
        0, 4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590,
     4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590,
     4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590, 4590,
     4590, 4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591,

     4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591,
     4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591,
     4591, 4591, 4591, 4591, 4592, 4592, 4592, 4592, 4592, 4592,
     4592, 4592, 4592, 4592, 4592, 4592, 4592, 4592, 4592, 4592,
     4592, 4592, 4592, 4592, 4592, 4592, 4592, 4592, 4592, 4592,
     4592, 4592, 4592, 4592, 4592, 4592, 4592, 4593, 4593,    0,
     4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593,
     4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593,
     4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593, 4593,
     4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594,

     4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594,
     4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594, 4594,
     4594, 4594, 4594, 4595, 4595, 4595, 4595, 4595, 4595, 4595,
     4595, 4595, 4595, 4595, 4595, 4595, 4595, 4595, 4595, 4595,
     4595, 4595, 4595, 4595, 4595, 4595, 4595, 4595, 4595, 4595,
     4595, 4595, 4595, 4595, 4595, 4595, 4596, 4596,    0,    0,
     4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596,
     4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596,
     4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596, 4596, 4597,
     4597,    0, 4597, 4597, 4597, 4597, 4597, 4597, 4597, 4597,

     4597, 4597, 4597, 4597, 4597, 4597, 4597, 4597, 4597, 4597,
     4597, 4597, 4597, 4597, 4597, 4597, 4597, 4597, 4597, 4597,
     4597, 4597, 4598, 4598, 4598, 4598, 4598, 4598, 4598, 4598,
     4598, 4598, 4598, 4598, 4598, 4598, 4598, 4598, 4598, 4598,
     4598, 4598, 4598, 4598, 4598, 4598, 4598, 4598, 4598, 4598,
     4598, 4598, 4598, 4598, 4598, 4599, 4599, 4599, 4599, 4599,
     4599, 4599, 4599, 4599, 4599, 4599, 4599, 4599, 4599, 4599,
     4599, 4599, 4599, 4599, 4599, 4599, 4599, 4599, 4599, 4599,
     4599, 4599, 4599, 4599, 4599, 4599, 4599, 4599, 4600, 4600,
     4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600,

     4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600,
     4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600, 4600,
     4600, 4601, 4601,    0, 4601, 4601, 4601, 4601, 4601, 4601,
     4601, 4601, 4601, 4601, 4601, 4601, 4601, 4601, 4601, 4601,
     4601, 4601, 4601, 4601, 4601, 4601, 4601, 4601, 4601, 4601,
     4601, 4601, 4601, 4601, 4602, 4602, 4602, 4602, 4602, 4602,
     4602, 4602, 4602, 4602, 4602, 4602, 4602, 4602, 4602, 4602,
     4602, 4602, 4602, 4602, 4602, 4602, 4602, 4602, 4602, 4602,
     4602, 4602, 4602, 4602, 4602, 4602, 4602, 4603, 4603, 4603,
     4603,    0, 4603,    0,    0,    0,    0,    0,    0,    0,

        0,    0, 4603,    0,    0,    0, 4603, 4603, 4603, 4603,
     4603,    0, 4603,    0, 4603,    0,    0, 4603, 4603, 4604,
     4604, 4604, 4604,    0, 4604,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4604,    0,    0,    0, 4604, 4604,
     4604, 4604, 4604,    0, 4604,    0, 4604,    0,    0, 4604,
     4604, 4605, 4605, 4605, 4605,    0, 4605,    0, 4605,    0,
        0,    0,    0,    0,    0, 4605, 4605,    0, 4605,    0,
     4605, 4605, 4605, 4605, 4605,    0, 4605,    0, 4605,    0,
        0,    0, 4605, 4606, 4606, 4606, 4606,    0, 4606,    0,
     4606, 4606,    0, 4606,    0,    0,    0, 4606, 4606, 4606,

     4606,    0, 4606, 4606, 4606, 4606, 4606,    0, 4606, 4606,
     4606,    0,    0,    0, 4606, 4607, 4607, 4607, 4607,    0,
     4607,    0, 4607, 4607,    0, 4607, 4607, 4607,    0, 4607,
     4607, 4607, 4607,    0, 4607, 4607, 4607, 4607, 4607,    0,
     4607, 4607, 4607,    0,    0,    0, 4607, 4608, 4608, 4608,
     4608,    0, 4608,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 4608, 4608, 4608, 4608,
     4608,    0,    0,    0, 4608,    0,    0, 4608, 4608, 4609,
     4609, 4609, 4609,    0, 4609,    0,    0, 4609,    0,    0,
        0,    0,    0, 4609, 4609,    0,    0,    0, 4609, 4609,

     4609, 4609, 4609,    0, 4609,    0, 4609,    0,    0, 4609,
     4609, 4610,    0,    0, 4610,    0, 4610,    0,    0, 4610,
        0,    0,    0,    0,    0, 4610, 4610,    0,    0,    0,
     4610, 4610, 4610, 4610, 4610,    0,    0,    0, 4610,    0,
        0, 4610, 4610, 4612,    0,    0,    0,    0,    0,    0,
        0, 4612,    0,    0,    0,    0, 4612, 4612,    0,    0,
     4612, 4613,    0,    0,    0,    0,    0,    0,    0, 4613,
        0,    0,    0,    0, 4613, 4613, 4613, 4613, 4613, 4614,
     4614,    0, 4614, 4614,    0, 4614, 4614, 4614, 4614, 4614,
     4614, 4614, 4614,    0, 4614, 4614, 4614, 4614, 4614, 4614,

     4614, 4614, 4614, 4614, 4614, 4614, 4614, 4614,    0, 4614,
     4614, 4614, 4615, 4615, 4615, 4615,    0, 4615,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 4615,    0,    0,
        0, 4615, 4615, 4615, 4615, 4615,    0, 4615,    0, 4615,
        0,    0, 4615, 4615, 4616,    0, 4616, 4616,    0, 4616,
     4616, 4616, 4616,    0, 4616, 4616, 4616, 4616, 4616, 4616,
     4616, 4616, 4616, 4616, 4616, 4616, 4616, 4616, 4616, 4616,
        0, 4616, 4616, 4616, 4616, 4616, 4616, 4617,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 4617, 4617, 4617, 4617, 4617,    0,    0,    0, 4617,

        0,    0,    0, 4617, 4618,    0,    0, 4618,    0, 4618,
        0,    0,    0,    0,    0,    0,    0,    0, 4618, 4618,
        0, 4618,    0, 4618, 4618, 4618, 4618, 4618,    0,    0,
        0, 4618,    0,    0,    0, 4618, 4619,    0,    0, 4619,
        0, 4619,    0, 4619,    0,    0,    0, 4619, 4619,    0,
     4619, 4619,    0, 4619,    0, 4619, 4619, 4619, 4619, 4619,
        0,    0,    0, 4619,    0,    0,    0, 4619, 4620, 4620,
        0, 4620,    0, 4620,    0, 4620,    0,    0,    0, 4620,
     4620,    0, 4620, 4620,    0, 4620,    0, 4620, 4620, 4620,
     4620, 4620,    0,    0,    0, 4620,    0,    0,    0, 4620,

     4621,    0,    0,    0,    0,    0,    0,    0,    0, 4621,
     4621,    0,    0,    0, 4621, 4621, 4621, 4621, 4621,    0,
        0,    0, 4621,    0,    0,    0, 4621, 4622,    0,    0,
     4622,    0, 4622,    0, 4622,    0,    0,    0,    0, 4622,
        0, 4622, 4622,    0,    0,    0, 4622, 4622, 4622, 4622,
     4622,    0, 4622,    0, 4622,    0,    0,    0, 4622, 4623,
        0,    0,    0,    0,    0,    0,    0,    0, 4623,    0,
        0,    0,    0, 4623, 4623, 4623, 4623, 4623,    0,    0,
        0, 4623,    0,    0,    0, 4623, 4624,    0,    0,    0,
        0,    0,    0,    0,    0, 4624, 4624,    0,    0,    0,

     4624, 4624, 4624, 4624, 4624,    0, 4624,    0, 4624,    0,
        0,    0, 4624, 4625,    0,    0,    0,    0,    0,    0,
        0,    0, 4625,    0,    0,    0,    0, 4625, 4625, 4625,
     4625, 4625,    0,    0,    0, 4625,    0,    0,    0, 4625,
     4626, 4626,    0, 4626, 4626, 4626, 4626, 4626, 4626, 4626,
     4626, 4626, 4626, 4626, 4626, 4626, 4626, 4626, 4626, 4626,
     4626, 4626, 4626, 4626, 4626, 4626, 4626, 4626, 4626, 4626,
     4626, 4626, 4626, 4627, 4627,    0, 4627, 4627, 4627, 4627,
     4627, 4627, 4627, 4627, 4627, 4627, 4627, 4627, 4627, 4627,
     4627, 4627, 4627, 4627, 4627, 4627, 4627, 4627, 4627, 4627,

     4627, 4627, 4627, 4627, 4627, 4627, 4628, 4628,    0, 4628,
     4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628,
     4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628,
     4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628, 4628, 4629,
     4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
     4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
     4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
     4629, 4629, 4630, 4630, 4630, 4630, 4630, 4630, 4630, 4630,
     4630, 4630, 4630, 4630, 4630, 4630, 4630, 4630, 4630, 4630,
     4630, 4630, 4630, 4630, 4630, 4630, 4630, 4630, 4630, 4630,

     4630, 4630, 4630, 4630, 4630, 4631, 4631, 4631, 4631, 4631,
     4631, 4631, 4631, 4631, 4631, 4631, 4631, 4631, 4631, 4631,
     4631, 4631, 4631, 4631, 4631, 4631, 4631, 4631, 4631, 4631,
     4631, 4631, 4631, 4631, 4631, 4631, 4631, 4631, 4632, 4632,
     4632, 4632,    0, 4632,    0,    0,    0,    0,    0,    0,
        0,    0, 4632, 4632,    0, 4632,    0, 4632, 4632, 4632,
     4632, 4632,    0, 4632,    0, 4632,    0,    0,    0, 4632,
     4633,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4633, 4633, 4633, 4633, 4633,    0,
        0,    0, 4633,    0,    0,    0, 4633, 4634, 4634, 4634,

     4634,    0, 4634,    0,    0,    0,    0,    0,    0,    0,
        0, 4634, 4634,    0, 4634,    0, 4634, 4634, 4634, 4634,
     4634,    0, 4634,    0, 4634,    0,    0,    0, 4634, 4635,
     4635, 4635, 4635,    0, 4635,    0,    0,    0,    0,    0,
        0,    0,    0, 4635,    0, 4635,    0, 4635, 4635, 4635,
     4635, 4635, 4635,    0,    0,    0, 4635, 4635,    0,    0,
     4635, 4636,    0,    0,    0,    0,    0,    0,    0,    0,
     4636,    0,    0,    0,    0, 4636, 4636, 4636, 4636, 4636,
        0,    0,    0, 4636,    0,    0,    0, 4636, 4637,    0,
        0,    0,    0,    0,    0,    0,    0, 4637,    0,    0,

        0,    0, 4637, 4637, 4637, 4637, 4637,    0,    0,    0,
     4637,    0,    0,    0, 4637, 4638, 4638, 4638, 4638, 4638,
     4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638,
     4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638,
     4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638, 4639, 4639,
        0, 4639, 4639,    0,    0, 4639, 4639, 4639, 4639, 4639,
     4639, 4639, 4639, 4639, 4639, 4639, 4639, 4639, 4639, 4639,
     4639, 4639, 4639, 4639,    0, 4639, 4639, 4639, 4639, 4639,
     4639, 4640, 4640,    0, 4640, 4640, 4640, 4640, 4640, 4640,
     4640, 4640, 4640, 4640, 4640, 4640, 4640, 4640, 4640, 4640,

     4640, 4640, 4640, 4640, 4640, 4640, 4640, 4640, 4640, 4640,
     4640, 4640, 4640, 4640, 4641, 4641, 4641, 4641, 4641, 4641,
     4641, 4641, 4641, 4641, 4641, 4641, 4641, 4641, 4641, 4641,
     4641, 4641, 4641, 4641, 4641, 4641, 4641, 4641, 4641, 4641,
     4641, 4641, 4641, 4641, 4641, 4641, 4641, 4642, 4642, 4642,
     4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642,
     4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642,
     4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642, 4642,
     4643, 4643,    0, 4643, 4643, 4643, 4643, 4643, 4643, 4643,
     4643, 4643, 4643, 4643, 4643, 4643, 4643, 4643, 4643, 4643,

     4643, 4643, 4643, 4643, 4643, 4643, 4643, 4643, 4643, 4643,
     4643, 4643, 4643, 4644, 4644, 4644, 4644, 4644, 4644, 4644,
     4644, 4644, 4644, 4644, 4644, 4644, 4644, 4644, 4644, 4644,
     4644, 4644, 4644, 4644, 4644, 4644, 4644, 4644, 4644, 4644,
     4644, 4644, 4644, 4644, 4644, 4644, 4645,    0,    0,    0,
        0,    0,    0,    0,    0, 4645,    0,    0,    0,    0,
     4645, 4645, 4645, 4645, 4645,    0,    0,    0, 4645,    0,
        0,    0, 4645, 4646,    0,    0,    0,    0,    0,    0,
        0,    0, 4646, 4646,    0,    0,    0, 4646, 4646, 4646,
     4646, 4646,    0,    0,    0, 4646,    0,    0,    0, 4646,

     4647,    0, 4647, 4647,    0, 4647, 4647, 4647,    0,    0,
     4647, 4647, 4647, 4647, 4647, 4647, 4647, 4647, 4647, 4647,
     4647, 4647, 4647, 4647, 4647, 4647,    0, 4647, 4647, 4647,
     4647, 4647, 4647, 4648, 4648,    0, 4648, 4648, 4648, 4648,
     4648, 4648,    0, 4648, 4648, 4648, 4648, 4648, 4648, 4648,
     4648, 4648, 4648, 4648, 4648, 4648, 4648, 4648, 4648, 4648,
     4648, 4648, 4648, 4648, 4648, 4648, 4649, 4649,    0, 4649,
     4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649,
     4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649,
     4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4649, 4650,

     4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650,
     4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650,
     4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650, 4650,
     4650, 4650, 4651, 4651, 4651, 4651, 4651, 4651, 4651, 4651,
     4651, 4651, 4651, 4651, 4651, 4651, 4651, 4651, 4651, 4651,
     4651, 4651, 4651, 4651, 4651, 4651, 4651, 4651, 4651, 4651,
     4651, 4651, 4651, 4651, 4651, 4652, 4652, 4652, 4652, 4652,
     4652, 4652, 4652, 4652, 4652, 4652, 4652, 4652, 4652, 4652,
     4652, 4652, 4652, 4652, 4652, 4652, 4652, 4652, 4652, 4652,
     4652, 4652, 4652, 4652, 4652, 4652, 4652, 4652, 4653, 4653,

     4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653,
     4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653,
     4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653,
     4653, 4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654,
     4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654,
     4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654, 4654,
     4654, 4654, 4654, 4654, 4655, 4655, 4655, 4655, 4655, 4655,
     4655, 4655, 4655, 4655,    0, 4655, 4655, 4655,    0, 4655,
     4655, 4655, 4655, 4655, 4655, 4655, 4655, 4655, 4655, 4655,
     4655, 4655, 4655, 4655, 4655, 4655, 4655, 4656, 4656, 4656,

     4656,    0, 4656,    0, 4656,    0,    0,    0,    0,    0,
        0, 4656, 4656,    0, 4656,    0, 4656, 4656, 4656, 4656,
     4656,    0, 4656,    0, 4656,    0,    0,    0, 4656, 4657,
     4657, 4657, 4657,    0, 4657,    0, 4657,    0,    0,    0,
        0,    0,    0, 4657, 4657,    0, 4657,    0, 4657, 4657,
     4657, 4657, 4657,    0, 4657,    0, 4657,    0,    0,    0,
     4657, 4658, 4658,    0, 4658, 4658,    0, 4658, 4658, 4658,
     4658, 4658, 4658, 4658, 4658,    0, 4658, 4658, 4658, 4658,
     4658, 4658, 4658, 4658, 4658, 4658, 4658, 4658, 4658, 4658,
        0, 4658, 4658, 4658, 4659, 4659, 4659, 4659,    0, 4659,

        0, 4659, 4659,    0, 4659,    0,    0,    0, 4659, 4659,
     4659, 4659,    0, 4659, 4659, 4659, 4659, 4659,    0, 4659,
     4659, 4659,    0,    0,    0, 4659, 4660,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     4660, 4660, 4660, 4660, 4660,    0,    0,    0, 4660,    0,
        0,    0, 4660, 4661, 4661, 4661, 4661,    0, 4661,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4661, 4661, 4661, 4661, 4661,    0,    0,    0,
     4661,    0,    0, 4661, 4661, 4664,    0,    0,    0,    0,
        0,    0,    0, 4664,    0,    0,    0,    0, 4664, 4664,

     4664, 4664, 4664, 4665, 4665, 4665, 4665, 4665, 4665, 4665,
     4665, 4665, 4665, 4665, 4665, 4665, 4665, 4665,    0, 4665,
     4665, 4665, 4665,    0,    0,    0,    0,    0, 4665, 4665,
     4665,    0, 4665, 4665, 4665, 4665, 4666, 4666, 4666, 4666,
     4666, 4666, 4666, 4666, 4666, 4666, 4666, 4666, 4666, 4666,
     4666,    0, 4666, 4666, 4666, 4666,    0,    0,    0,    0,
        0, 4666, 4666, 4666,    0, 4666, 4666, 4666, 4666, 4667,
     4667, 4667, 4667,    0, 4667,    0, 4667, 4667,    0, 4667,
        0, 4667,    0, 4667, 4667, 4667, 4667,    0, 4667, 4667,
     4667, 4667, 4667,    0, 4667, 4667, 4667,    0,    0,    0,

     4667, 4668,    0, 4668, 4668,    0, 4668, 4668, 4668, 4668,
        0, 4668, 4668, 4668, 4668, 4668, 4668, 4668, 4668, 4668,
     4668, 4668, 4668, 4668, 4668, 4668, 4668,    0, 4668, 4668,
     4668, 4668, 4668, 4668, 4669, 4669, 4669, 4669, 4669, 4669,
     4669, 4669, 4669, 4669, 4669, 4669, 4669, 4669, 4669,    0,
     4669, 4669, 4669, 4669,    0,    0,    0,    0,    0, 4669,
     4669, 4669,    0, 4669, 4669, 4669, 4669, 4670,    0,    0,
     4670,    0, 4670,    0, 4670,    0,    0,    0, 4670, 4670,
        0, 4670, 4670,    0, 4670,    0, 4670, 4670, 4670, 4670,
     4670,    0,    0,    0, 4670,    0,    0,    0, 4670, 4671,

     4671,    0, 4671, 4671, 4671, 4671, 4671,    0,    0, 4671,
     4671, 4671, 4671, 4671, 4671, 4671, 4671,    0, 4671, 4671,
     4671, 4671, 4671, 4671,    0, 4671,    0, 4671,    0,    0,
     4671, 4671, 4672, 4672,    0, 4672,    0, 4672,    0, 4672,
        0,    0,    0, 4672, 4672,    0, 4672, 4672,    0, 4672,
        0, 4672, 4672, 4672, 4672, 4672,    0,    0,    0, 4672,
        0,    0,    0, 4672, 4673,    0,    0, 4673,    0, 4673,
        0, 4673,    0,    0,    0,    0, 4673,    0, 4673, 4673,
        0,    0,    0, 4673, 4673, 4673, 4673, 4673,    0, 4673,
        0, 4673,    0,    0,    0, 4673, 4674,    0,    0,    0,

        0,    0,    0,    0,    0, 4674,    0,    0,    0,    0,
     4674, 4674, 4674, 4674, 4674,    0,    0,    0, 4674,    0,
        0,    0, 4674, 4675,    0,    0,    0,    0,    0,    0,
        0,    0, 4675, 4675,    0,    0,    0, 4675, 4675, 4675,
     4675, 4675,    0, 4675,    0, 4675,    0,    0,    0, 4675,
     4676,    0,    0,    0,    0,    0,    0,    0,    0, 4676,
        0,    0,    0,    0, 4676, 4676, 4676, 4676, 4676,    0,
        0,    0, 4676,    0,    0,    0, 4676, 4677,    0,    0,
     4677,    0, 4677,    0,    0,    0,    0,    0,    0,    0,
        0, 4677, 4677,    0,    0,    0, 4677, 4677, 4677, 4677,

     4677,    0,    0,    0, 4677,    0,    0,    0, 4677, 4678,
     4678, 4678, 4678,    0, 4678,    0,    0,    0,    0,    0,
        0,    0,    0, 4678, 4678,    0, 4678,    0, 4678, 4678,
     4678, 4678, 4678,    0, 4678,    0, 4678,    0,    0,    0,
     4678, 4679, 4679,    0, 4679, 4679,    0, 4679, 4679,    0,
     4679, 4679, 4679,    0,    0,    0, 4679, 4679, 4679, 4679,
     4679, 4679, 4679, 4679, 4679, 4679, 4679, 4679, 4679, 4679,
        0, 4679, 4679, 4679, 4680, 4680, 4680, 4680,    0, 4680,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 4680, 4680, 4680, 4680, 4680,    0,    0,

        0, 4680,    0,    0, 4680, 4680, 4681,    0,    0,    0,
        0,    0,    0,    0,    0, 4681,    0,    0,    0,    0,
     4681, 4681, 4681, 4681, 4681,    0,    0,    0, 4681,    0,
        0,    0, 4681, 4682,    0,    0,    0,    0,    0,    0,
        0,    0, 4682,    0,    0,    0,    0, 4682, 4682, 4682,
     4682, 4682,    0,    0,    0, 4682,    0,    0,    0, 4682,
     4683,    0,    0,    0,    0,    0,    0,    0,    0, 4683,
        0,    0,    0,    0, 4683, 4683, 4683, 4683, 4683,    0,
        0,    0, 4683,    0,    0,    0, 4683, 4684,    0,    0,
        0,    0,    0,    0,    0,    0, 4684,    0,    0,    0,

        0, 4684, 4684, 4684, 4684, 4684,    0,    0,    0, 4684,
        0,    0,    0, 4684, 4685,    0, 4685, 4685,    0, 4685,
     4685, 4685,    0,    0, 4685, 4685, 4685, 4685, 4685, 4685,
     4685, 4685, 4685, 4685, 4685, 4685, 4685, 4685, 4685, 4685,
        0, 4685, 4685, 4685, 4685, 4685, 4685, 4686, 4686, 4686,
     4686,    0, 4686,    0, 4686,    0,    0,    0,    0,    0,
        0, 4686, 4686,    0, 4686,    0, 4686, 4686, 4686, 4686,
     4686,    0, 4686,    0, 4686,    0,    0,    0, 4686, 4687,
     4687,    0, 4687, 4687,    0, 4687, 4687, 4687, 4687, 4687,
     4687, 4687, 4687,    0, 4687, 4687, 4687, 4687, 4687, 4687,

     4687, 4687, 4687, 4687, 4687, 4687, 4687, 4687,    0, 4687,
     4687, 4687, 4688, 4688, 4688, 4688,    0, 4688,    0, 4688,
        0,    0,    0,    0,    0,    0, 4688, 4688,    0, 4688,
        0, 4688, 4688, 4688, 4688, 4688,    0, 4688,    0, 4688,
        0,    0,    0, 4688, 4689, 4689, 4689, 4689,    0, 4689,
        0, 4689, 4689,    0, 4689,    0,    0,    0, 4689, 4689,
     4689, 4689,    0, 4689, 4689, 4689, 4689, 4689,    0, 4689,
     4689, 4689,    0,    0,    0, 4689, 4690,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 4690,    0,    0,    0,
     4690, 4690, 4690, 4690, 4690,    0,    0,    0, 4690,    0,

        0, 4690, 4690, 4693, 4693, 4693, 4693,    0, 4693,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 4693,    0,
        0,    0, 4693, 4693, 4693, 4693, 4693,    0, 4693,    0,
     4693,    0,    0, 4693, 4693, 4694, 4694, 4694, 4694,    0,
     4694,    0, 4694, 4694,    0, 4694,    0, 4694,    0, 4694,
     4694, 4694, 4694,    0, 4694, 4694, 4694, 4694, 4694,    0,
     4694, 4694, 4694,    0,    0,    0, 4694, 4695,    0, 4695,
     4695,    0, 4695, 4695, 4695, 4695,    0, 4695, 4695, 4695,
     4695, 4695, 4695, 4695, 4695, 4695, 4695, 4695, 4695, 4695,
     4695, 4695, 4695,    0, 4695, 4695, 4695, 4695, 4695, 4695,

     4696,    0,    0, 4696,    0, 4696,    0, 4696,    0,    0,
        0, 4696, 4696,    0, 4696, 4696,    0, 4696,    0, 4696,
     4696, 4696, 4696, 4696,    0,    0,    0, 4696,    0,    0,
        0, 4696, 4697, 4697,    0, 4697,    0, 4697,    0, 4697,
        0,    0,    0, 4697, 4697,    0, 4697, 4697,    0, 4697,
        0, 4697, 4697, 4697, 4697, 4697,    0,    0,    0, 4697,
        0,    0,    0, 4697, 4698,    0,    0, 4698,    0, 4698,
        0, 4698,    0,    0,    0,    0, 4698,    0, 4698, 4698,
        0,    0,    0, 4698, 4698, 4698, 4698, 4698,    0, 4698,
        0, 4698,    0,    0,    0, 4698, 4699,    0,    0,    0,

        0,    0,    0,    0,    0, 4699,    0,    0,    0,    0,
     4699, 4699, 4699, 4699, 4699,    0,    0,    0, 4699,    0,
        0,    0, 4699, 4700,    0,    0,    0,    0,    0,    0,
        0,    0, 4700, 4700,    0,    0,    0, 4700, 4700, 4700,
     4700, 4700,    0, 4700,    0, 4700,    0,    0,    0, 4700,
     4701,    0,    0,    0,    0,    0,    0,    0,    0, 4701,
        0,    0,    0,    0, 4701, 4701, 4701, 4701, 4701,    0,
        0,    0, 4701,    0,    0,    0, 4701, 4702, 4702, 4702,
     4702, 4702, 4702, 4702, 4702, 4702, 4702, 4702, 4702, 4702,
     4702, 4702,    0, 4702, 4702, 4702, 4702,    0,    0,    0,

        0,    0, 4702, 4702, 4702, 4702, 4702, 4702, 4702, 4702,
     4703,    0,    0, 4703,    0, 4703,    0,    0,    0,    0,
        0,    0,    0,    0, 4703, 4703,    0,    0,    0, 4703,
     4703, 4703, 4703, 4703,    0,    0,    0, 4703,    0,    0,
        0, 4703, 4704, 4704, 4704, 4704,    0, 4704,    0,    0,
        0,    0,    0,    0,    0,    0, 4704, 4704,    0, 4704,
        0, 4704, 4704, 4704, 4704, 4704,    0, 4704,    0, 4704,
        0,    0,    0, 4704, 4705,    0,    0,    0,    0,    0,
        0,    0,    0, 4705,    0,    0,    0,    0, 4705, 4705,
     4705, 4705, 4705,    0,    0,    0, 4705,    0,    0,    0,

     4705, 4706,    0,    0,    0,    0,    0,    0,    0,    0,
     4706,    0,    0,    0,    0, 4706, 4706, 4706, 4706, 4706,
        0,    0,    0, 4706,    0,    0,    0, 4706, 4707,    0,
        0,    0,    0,    0,    0,    0,    0, 4707,    0,    0,
        0,    0, 4707, 4707, 4707, 4707, 4707,    0,    0,    0,
     4707,    0,    0,    0, 4707, 4708,    0,    0,    0,    0,
        0,    0,    0,    0, 4708,    0,    0,    0,    0, 4708,
     4708, 4708, 4708, 4708,    0,    0,    0, 4708,    0,    0,
        0, 4708, 4709,    0, 4709, 4709,    0, 4709, 4709, 4709,
        0,    0, 4709, 4709, 4709, 4709, 4709, 4709, 4709, 4709,

     4709, 4709, 4709, 4709, 4709, 4709, 4709, 4709,    0, 4709,
     4709, 4709, 4709, 4709, 4709, 4710, 4710, 4710, 4710,    0,
     4710,    0, 4710,    0,    0,    0,    0,    0,    0, 4710,
     4710,    0, 4710,    0, 4710, 4710, 4710, 4710, 4710,    0,
     4710,    0, 4710,    0,    0,    0, 4710, 4711, 4711, 4711,
     4711,    0, 4711,    0, 4711,    0,    0,    0,    0,    0,
        0, 4711, 4711,    0, 4711,    0, 4711, 4711, 4711, 4711,
     4711,    0, 4711,    0, 4711,    0,    0,    0, 4711, 4712,
     4712, 4712, 4712,    0, 4712,    0, 4712, 4712,    0, 4712,
        0,    0,    0, 4712, 4712, 4712, 4712,    0, 4712, 4712,

     4712, 4712, 4712,    0, 4712, 4712, 4712,    0,    0,    0,
     4712, 4713, 4713, 4713, 4713,    0, 4713,    0,    0, 4713,
        0, 4713,    0,    0,    0, 4713, 4713, 4713,    0,    0,
     4713, 4713, 4713, 4713, 4713,    0, 4713, 4713, 4713,    0,
        0,    0, 4713, 4714, 4714, 4714, 4714,    0, 4714,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 4714, 4714, 4714, 4714, 4714,    0,    0,    0,
     4714,    0,    0,    0, 4714, 4715, 4715, 4715, 4715,    0,
     4715,    0, 4715,    0,    0,    0,    0,    0,    0, 4715,
     4715,    0, 4715,    0, 4715, 4715, 4715, 4715, 4715,    0,

     4715,    0, 4715,    0,    0,    0, 4715, 4716,    0, 4716,
     4716,    0, 4716, 4716, 4716, 4716,    0, 4716, 4716, 4716,
     4716, 4716, 4716, 4716, 4716, 4716, 4716, 4716, 4716, 4716,
     4716, 4716, 4716,    0, 4716, 4716, 4716, 4716, 4716, 4716,
     4717,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4717, 4717, 4717, 4717, 4717,    0,
        0,    0, 4717,    0,    0,    0, 4717, 4718, 4718,    0,
     4718, 4718,    0, 4718, 4718, 4718, 4718, 4718, 4718, 4718,
     4718,    0, 4718, 4718, 4718, 4718, 4718, 4718, 4718, 4718,
     4718, 4718, 4718, 4718, 4718, 4718,    0, 4718, 4718, 4718,

     4719, 4719, 4719, 4719,    0, 4719,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4719,    0,    0,    0, 4719,
     4719, 4719, 4719, 4719,    0, 4719,    0, 4719,    0,    0,
     4719, 4719, 4720,    0,    0, 4720,    0, 4720,    0, 4720,
        0,    0,    0, 4720, 4720,    0, 4720, 4720,    0, 4720,
        0, 4720, 4720, 4720, 4720, 4720,    0,    0,    0, 4720,
        0,    0,    0, 4720, 4721, 4721,    0, 4721, 4721, 4721,
     4721, 4721,    0,    0, 4721, 4721, 4721, 4721, 4721, 4721,
     4721, 4721,    0, 4721, 4721, 4721, 4721, 4721, 4721,    0,
     4721,    0, 4721,    0,    0, 4721, 4721, 4722, 4722,    0,

     4722,    0, 4722,    0, 4722,    0,    0,    0, 4722, 4722,
        0, 4722, 4722,    0, 4722,    0, 4722, 4722, 4722, 4722,
     4722,    0,    0,    0, 4722,    0,    0,    0, 4722, 4723,
        0,    0, 4723,    0, 4723,    0, 4723,    0,    0,    0,
        0, 4723,    0, 4723, 4723,    0,    0,    0, 4723, 4723,
     4723, 4723, 4723,    0, 4723,    0, 4723,    0,    0,    0,
     4723, 4724,    0,    0,    0,    0,    0,    0,    0,    0,
     4724,    0,    0,    0,    0, 4724, 4724, 4724, 4724, 4724,
        0,    0,    0, 4724,    0,    0,    0, 4724, 4725,    0,
        0,    0,    0,    0,    0,    0,    0, 4725, 4725,    0,

        0,    0, 4725, 4725, 4725, 4725, 4725,    0, 4725,    0,
     4725,    0,    0,    0, 4725, 4726,    0,    0,    0,    0,
        0,    0,    0,    0, 4726,    0,    0,    0,    0, 4726,
     4726, 4726, 4726, 4726,    0,    0,    0, 4726,    0,    0,
        0, 4726, 4727, 4727, 4727, 4727,    0, 4727,    0,    0,
        0,    0,    0,    0,    0,    0, 4727, 4727,    0, 4727,
        0, 4727, 4727, 4727, 4727, 4727,    0, 4727,    0, 4727,
        0,    0,    0, 4727, 4728,    0,    0,    0,    0,    0,
        0,    0,    0, 4728,    0,    0,    0,    0, 4728, 4728,
     4728, 4728, 4728,    0,    0,    0, 4728,    0,    0,    0,

     4728, 4729,    0,    0,    0,    0,    0,    0,    0,    0,
     4729,    0,    0,    0,    0, 4729, 4729, 4729, 4729, 4729,
        0,    0,    0, 4729,    0,    0,    0, 4729, 4730,    0,
        0,    0,    0,    0,    0,    0,    0, 4730,    0,    0,
        0,    0, 4730, 4730, 4730, 4730, 4730,    0,    0,    0,
     4730,    0,    0,    0, 4730, 4731,    0, 4731, 4731,    0,
     4731, 4731, 4731,    0,    0, 4731, 4731, 4731, 4731, 4731,
     4731, 4731, 4731, 4731, 4731, 4731, 4731, 4731, 4731, 4731,
     4731,    0, 4731, 4731, 4731, 4731, 4731, 4731, 4732, 4732,
     4732, 4732,    0, 4732,    0, 4732,    0,    0,    0,    0,

        0,    0, 4732, 4732,    0, 4732,    0, 4732, 4732, 4732,
     4732, 4732,    0, 4732,    0, 4732,    0,    0,    0, 4732,
     4733, 4733, 4733, 4733,    0, 4733,    0, 4733,    0,    0,
        0,    0,    0,    0, 4733, 4733,    0, 4733,    0, 4733,
     4733, 4733, 4733, 4733,    0, 4733,    0, 4733,    0,    0,
        0, 4733, 4734, 4734, 4734, 4734,    0, 4734,    0, 4734,
     4734,    0, 4734,    0,    0,    0, 4734, 4734, 4734, 4734,
        0, 4734, 4734, 4734, 4734, 4734,    0, 4734, 4734, 4734,
        0,    0,    0, 4734, 4735, 4735, 4735, 4735,    0, 4735,
        0,    0, 4735,    0, 4735,    0,    0,    0, 4735, 4735,

     4735,    0,    0, 4735, 4735, 4735, 4735, 4735,    0, 4735,
     4735, 4735,    0,    0,    0, 4735, 4736, 4736, 4736, 4736,
        0, 4736,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4736, 4736, 4736, 4736, 4736,
        0,    0,    0, 4736,    0,    0, 4736, 4736, 4737, 4737,
     4737, 4737,    0, 4737,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 4737, 4737, 4737,
     4737, 4737,    0,    0,    0, 4737,    0,    0,    0, 4737,
     4738, 4738, 4738, 4738,    0, 4738,    0,    0, 4738,    0,
     4738,    0,    0,    0, 4738,    0, 4738,    0,    0, 4738,

     4738, 4738, 4738, 4738,    0,    0, 4738, 4738,    0,    0,
        0, 4738, 4739, 4739, 4739, 4739,    0, 4739,    0, 4739,
        0,    0,    0,    0,    0,    0, 4739, 4739,    0, 4739,
        0, 4739, 4739, 4739, 4739, 4739,    0, 4739,    0, 4739,
        0,    0,    0, 4739, 4740, 4740, 4740, 4740, 4740, 4740,
     4740, 4740, 4740, 4740, 4740, 4740, 4740, 4740, 4740,    0,
     4740, 4740, 4740, 4740,    0,    0,    0,    0,    0, 4740,
     4740, 4740,    0, 4740, 4740, 4740, 4740, 4741,    0, 4741,
     4741,    0, 4741, 4741, 4741, 4741,    0, 4741, 4741, 4741,
     4741, 4741, 4741, 4741, 4741, 4741, 4741, 4741, 4741, 4741,

     4741, 4741, 4741,    0, 4741, 4741, 4741, 4741, 4741, 4741,
     4742, 4742,    0, 4742, 4742,    0, 4742, 4742, 4742, 4742,
     4742, 4742,    0,    0,    0, 4742, 4742, 4742, 4742, 4742,
     4742, 4742, 4742, 4742, 4742, 4742, 4742, 4742, 4742,    0,
     4742, 4742, 4742, 4743, 4743,    0, 4743, 4743,    0, 4743,
     4743, 4743, 4743, 4743, 4743, 4743, 4743,    0, 4743, 4743,
     4743, 4743, 4743, 4743, 4743, 4743, 4743, 4743, 4743, 4743,
     4743, 4743,    0, 4743, 4743, 4743, 4744, 4744,    0, 4744,
     4744,    0, 4744, 4744, 4744, 4744, 4744, 4744,    0,    0,
        0, 4744, 4744, 4744, 4744, 4744, 4744, 4744, 4744, 4744,

     4744, 4744, 4744, 4744, 4744,    0, 4744, 4744, 4744, 4745,
     4745,    0, 4745, 4745, 4745, 4745, 4745, 4745, 4745, 4745,
     4745, 4745, 4745, 4745,    0, 4745, 4745, 4745, 4745,    0,
        0,    0,    0,    0, 4745, 4745, 4745,    0, 4745, 4745,
     4745, 4745, 4746, 4746,    0, 4746, 4746,    0, 4746, 4746,
     4746, 4746, 4746, 4746, 4746, 4746,    0, 4746, 4746, 4746,
     4746, 4746, 4746, 4746, 4746, 4746, 4746, 4746, 4746, 4746,
     4746,    0, 4746, 4746, 4746, 4747,    0,    0, 4747,    0,
     4747,    0, 4747,    0,    0,    0, 4747, 4747,    0, 4747,
     4747,    0, 4747,    0, 4747, 4747, 4747, 4747, 4747,    0,

        0,    0, 4747,    0,    0,    0, 4747, 4748, 4748,    0,
     4748,    0, 4748,    0, 4748,    0,    0,    0, 4748, 4748,
        0, 4748, 4748,    0, 4748,    0, 4748, 4748, 4748, 4748,
     4748,    0,    0,    0, 4748,    0,    0,    0, 4748, 4749,
        0,    0, 4749,    0, 4749,    0, 4749,    0,    0,    0,
        0, 4749,    0, 4749, 4749,    0,    0,    0, 4749, 4749,
     4749, 4749, 4749,    0, 4749,    0, 4749,    0,    0,    0,
     4749, 4750,    0,    0,    0,    0,    0,    0,    0,    0,
     4750,    0,    0,    0,    0, 4750, 4750, 4750, 4750, 4750,
        0,    0,    0, 4750,    0,    0,    0, 4750, 4751,    0,

        0,    0,    0,    0,    0,    0,    0, 4751,    0,    0,
        0,    0, 4751, 4751, 4751, 4751, 4751,    0,    0,    0,
     4751,    0,    0,    0, 4751, 4752, 4752, 4752, 4752,    0,
     4752,    0,    0,    0,    0,    0,    0,    0,    0, 4752,
     4752,    0, 4752,    0, 4752, 4752, 4752, 4752, 4752,    0,
     4752,    0, 4752,    0,    0,    0, 4752, 4753,    0,    0,
        0,    0,    0,    0,    0,    0, 4753,    0,    0,    0,
        0, 4753, 4753, 4753, 4753, 4753,    0,    0,    0, 4753,
        0,    0,    0, 4753, 4754,    0,    0,    0,    0,    0,
        0,    0,    0, 4754,    0,    0,    0,    0, 4754, 4754,

     4754, 4754, 4754,    0,    0,    0, 4754,    0,    0,    0,
     4754, 4755,    0,    0,    0,    0,    0,    0,    0,    0,
     4755,    0,    0,    0,    0, 4755, 4755, 4755, 4755, 4755,
        0,    0,    0, 4755,    0,    0,    0, 4755, 4756,    0,
     4756, 4756,    0, 4756, 4756, 4756,    0,    0, 4756, 4756,
     4756, 4756, 4756, 4756, 4756, 4756, 4756, 4756, 4756, 4756,
     4756, 4756, 4756, 4756,    0, 4756, 4756, 4756, 4756, 4756,
     4756, 4757, 4757, 4757, 4757,    0, 4757,    0, 4757,    0,
        0,    0,    0,    0,    0, 4757, 4757,    0, 4757,    0,
     4757, 4757, 4757, 4757, 4757,    0, 4757,    0, 4757,    0,

        0,    0, 4757, 4758, 4758, 4758, 4758,    0, 4758,    0,
     4758,    0,    0,    0,    0,    0,    0, 4758, 4758,    0,
     4758,    0, 4758, 4758, 4758, 4758, 4758,    0, 4758,    0,
     4758,    0,    0,    0, 4758, 4759, 4759, 4759, 4759,    0,
     4759,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4759, 4759, 4759, 4759, 4759,    0,
        0,    0, 4759,    0,    0, 4759, 4759, 4760, 4760, 4760,
     4760,    0, 4760,    0,    0, 4760,    0, 4760,    0,    0,
        0, 4760,    0, 4760,    0,    0, 4760, 4760, 4760, 4760,
     4760,    0,    0, 4760, 4760,    0,    0,    0, 4760, 4761,

        0, 4761, 4761,    0, 4761, 4761, 4761, 4761,    0, 4761,
     4761, 4761, 4761, 4761, 4761, 4761, 4761, 4761, 4761, 4761,
     4761, 4761, 4761, 4761, 4761,    0, 4761, 4761, 4761, 4761,
     4761, 4761, 4762, 4762, 4762, 4762, 4762, 4762, 4762, 4762,
     4762, 4762, 4762, 4762, 4762, 4762, 4762,    0, 4762, 4762,
     4762, 4762,    0,    0,    0,    0,    0, 4762, 4762, 4762,
        0, 4762, 4762, 4762, 4762, 4763, 4763,    0, 4763, 4763,
        0, 4763, 4763, 4763, 4763, 4763, 4763,    0,    0,    0,
     4763, 4763, 4763, 4763, 4763, 4763, 4763, 4763, 4763, 4763,
     4763, 4763, 4763, 4763,    0, 4763, 4763, 4763, 4764, 4764,

        0, 4764, 4764,    0, 4764, 4764, 4764, 4764, 4764, 4764,
        0,    0,    0, 4764, 4764, 4764, 4764, 4764, 4764, 4764,
     4764, 4764, 4764, 4764, 4764, 4764, 4764,    0, 4764, 4764,
     4764, 4765, 4765,    0, 4765, 4765,    0, 4765, 4765, 4765,
     4765, 4765, 4765, 4765, 4765,    0, 4765, 4765, 4765, 4765,
     4765, 4765, 4765, 4765, 4765, 4765, 4765, 4765, 4765, 4765,
        0, 4765, 4765, 4765, 4766, 4766,    0, 4766, 4766,    0,
     4766, 4766, 4766, 4766, 4766, 4766,    0,    0,    0, 4766,
     4766, 4766, 4766, 4766, 4766, 4766, 4766, 4766, 4766, 4766,
     4766, 4766, 4766,    0, 4766, 4766, 4766, 4767,    0,    0,

     4767,    0, 4767,    0, 4767,    0,    0,    0, 4767, 4767,
        0, 4767, 4767,    0, 4767,    0, 4767, 4767, 4767, 4767,
     4767,    0,    0,    0, 4767,    0,    0,    0, 4767, 4768,
     4768, 4768, 4768, 4768, 4768, 4768, 4768, 4768, 4768, 4768,
     4768, 4768, 4768, 4768,    0, 4768, 4768, 4768, 4768,    0,
        0,    0,    0,    0, 4768, 4768, 4768,    0, 4768, 4768,
     4768, 4768, 4769, 4769,    0, 4769,    0, 4769,    0, 4769,
        0,    0,    0, 4769, 4769,    0, 4769, 4769,    0, 4769,
        0, 4769, 4769, 4769, 4769, 4769,    0,    0,    0, 4769,
        0,    0,    0, 4769, 4770,    0,    0, 4770,    0, 4770,

        0, 4770,    0,    0,    0,    0, 4770,    0, 4770, 4770,
        0,    0,    0, 4770, 4770, 4770, 4770, 4770,    0, 4770,
        0, 4770,    0,    0,    0, 4770, 4771, 4771, 4771, 4771,
        0, 4771,    0,    0,    0,    0,    0,    0,    0,    0,
     4771, 4771,    0, 4771,    0, 4771, 4771, 4771, 4771, 4771,
        0, 4771,    0, 4771,    0,    0,    0, 4771, 4772, 4772,
     4772, 4772,    0, 4772,    0,    0,    0,    0,    0,    0,
        0,    0, 4772,    0,    0,    0,    0, 4772, 4772, 4772,
     4772, 4772,    0,    0,    0, 4772, 4772,    0,    0, 4772,
     4773,    0,    0,    0,    0,    0,    0,    0,    0, 4773,

        0,    0,    0,    0, 4773, 4773, 4773, 4773, 4773,    0,
        0,    0, 4773,    0,    0,    0, 4773, 4774,    0,    0,
        0,    0,    0,    0,    0,    0, 4774,    0,    0,    0,
        0, 4774, 4774, 4774, 4774, 4774,    0,    0,    0, 4774,
        0,    0,    0, 4774, 4775,    0, 4775, 4775,    0, 4775,
     4775, 4775,    0,    0, 4775, 4775, 4775, 4775, 4775, 4775,
     4775, 4775, 4775, 4775, 4775, 4775, 4775, 4775, 4775, 4775,
        0, 4775, 4775, 4775, 4775, 4775, 4775, 4776, 4776, 4776,
     4776,    0, 4776,    0, 4776,    0,    0,    0,    0,    0,
        0, 4776, 4776,    0, 4776,    0, 4776, 4776, 4776, 4776,

     4776,    0, 4776,    0, 4776,    0,    0,    0, 4776, 4777,
     4777, 4777, 4777,    0, 4777,    0, 4777,    0,    0,    0,
        0,    0,    0, 4777, 4777,    0, 4777,    0, 4777, 4777,
     4777, 4777, 4777,    0, 4777,    0, 4777,    0,    0,    0,
     4777, 4778,    0, 4778, 4778,    0, 4778, 4778, 4778, 4778,
        0, 4778, 4778, 4778, 4778, 4778, 4778, 4778, 4778, 4778,
     4778, 4778, 4778, 4778, 4778, 4778, 4778,    0, 4778, 4778,
     4778, 4778, 4778, 4778, 4779, 4779,    0, 4779, 4779,    0,
     4779, 4779, 4779, 4779, 4779, 4779, 4779, 4779,    0, 4779,
     4779, 4779, 4779, 4779, 4779, 4779, 4779, 4779, 4779, 4779,

     4779, 4779, 4779,    0, 4779, 4779, 4779, 4780, 4780,    0,
     4780, 4780, 4780, 4780, 4780,    0,    0, 4780, 4780, 4780,
     4780, 4780, 4780, 4780, 4780,    0, 4780, 4780, 4780, 4780,
     4780, 4780,    0, 4780,    0, 4780,    0,    0, 4780, 4780,
     4781,    0,    0, 4781,    0, 4781,    0, 4781,    0,    0,
        0, 4781, 4781,    0, 4781, 4781,    0, 4781,    0, 4781,
     4781, 4781, 4781, 4781,    0,    0,    0, 4781,    0,    0,
        0, 4781, 4782, 4782,    0, 4782,    0, 4782,    0, 4782,
        0,    0,    0, 4782, 4782,    0, 4782, 4782,    0, 4782,
        0, 4782, 4782, 4782, 4782, 4782,    0,    0,    0, 4782,

        0,    0,    0, 4782, 4783,    0,    0, 4783,    0, 4783,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 4783, 4783, 4783, 4783, 4783,    0,    0,
        0, 4783,    0,    0,    0, 4783, 4784,    0, 4784, 4784,
        0, 4784, 4784, 4784,    0,    0, 4784, 4784, 4784, 4784,
     4784, 4784, 4784, 4784, 4784, 4784, 4784, 4784, 4784, 4784,
     4784, 4784,    0, 4784, 4784, 4784, 4784, 4784, 4784, 4785,
        0, 4785, 4785,    0, 4785, 4785, 4785, 4785,    0, 4785,
     4785, 4785, 4785, 4785, 4785, 4785, 4785, 4785, 4785, 4785,
     4785, 4785, 4785, 4785, 4785,    0, 4785, 4785, 4785, 4785,

     4785, 4785, 4786, 4786,    0, 4786, 4786,    0, 4786, 4786,
     4786, 4786, 4786, 4786,    0,    0,    0, 4786, 4786, 4786,
     4786, 4786, 4786, 4786, 4786, 4786, 4786, 4786, 4786, 4786,
     4786,    0, 4786, 4786, 4786, 4787,    0,    0, 4787,    0,
     4787,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 4787, 4787, 4787, 4787, 4787,    0,
        0,    0, 4787,    0,    0,    0, 4787, 4788,    0,    0,
     4788,    0, 4788,    0,    0, 4788,    0,    0,    0,    0,
        0, 4788,    0,    0,    0,    0, 4788, 4788, 4788, 4788,
     4788,    0,    0,    0, 4788,    0,    0,    0, 4788, 4789,

        0, 4789, 4789,    0, 4789, 4789, 4789,    0,    0, 4789,
     4789, 4789, 4789, 4789, 4789, 4789, 4789, 4789, 4789, 4789,
     4789, 4789, 4789, 4789, 4789,    0, 4789, 4789, 4789, 4789,
     4789, 4789, 4790,    0, 4790, 4790,    0, 4790, 4790, 4790,
     4790,    0, 4790, 4790, 4790, 4790, 4790, 4790, 4790, 4790,
     4790, 4790, 4790, 4790, 4790, 4790, 4790, 4790,    0, 4790,
     4790, 4790, 4790, 4790, 4790, 4791,    0,    0, 4791,    0,
     4791,    0,    0, 4791,    0,    0,    0,    0,    0, 4791,
        0,    0,    0,    0, 4791, 4791, 4791, 4791, 4791,    0,
        0,    0, 4791,    0,    0,    0, 4791, 4792,    0, 4792,

     4792,    0, 4792, 4792, 4792,    0,    0, 4792, 4792, 4792,
     4792, 4792, 4792, 4792, 4792, 4792, 4792, 4792, 4792, 4792,
     4792, 4792, 4792,    0, 4792, 4792, 4792, 4792, 4792, 4792,
     4793,    0, 4793, 4793,    0, 4793, 4793, 4793, 4793,    0,
     4793, 4793, 4793, 4793, 4793, 4793, 4793, 4793, 4793, 4793,
     4793, 4793, 4793, 4793, 4793, 4793,    0, 4793, 4793, 4793,
     4793, 4793, 4793, 4794,    0, 4794, 4794,    0, 4794, 4794,
     4794,    0,    0, 4794, 4794, 4794, 4794, 4794, 4794, 4794,
     4794, 4794, 4794, 4794, 4794, 4794, 4794, 4794, 4794,    0,
     4794, 4794, 4794, 4794, 4794, 4794, 4795,    0, 4795, 4795,

        0, 4795, 4795, 4795, 4795,    0, 4795, 4795, 4795, 4795,
     4795, 4795, 4795, 4795, 4795, 4795, 4795, 4795, 4795, 4795,
     4795, 4795,    0, 4795, 4795, 4795, 4795, 4795, 4795, 4796,
        0, 4796, 4796,    0, 4796, 4796, 4796,    0,    0, 4796,
     4796, 4796, 4796, 4796, 4796, 4796, 4796, 4796, 4796, 4796,
     4796, 4796, 4796, 4796, 4796,    0, 4796, 4796, 4796, 4796,
     4796, 4796, 4797,    0, 4797, 4797,    0, 4797, 4797, 4797,
     4797,    0, 4797, 4797, 4797, 4797, 4797, 4797, 4797, 4797,
     4797, 4797, 4797, 4797, 4797, 4797, 4797, 4797,    0, 4797,
     4797, 4797, 4797, 4797, 4797, 4798,    0, 4798, 4798,    0,

     4798, 4798, 4798,    0,    0, 4798, 4798, 4798, 4798, 4798,
     4798, 4798, 4798, 4798, 4798, 4798, 4798, 4798, 4798, 4798,
     4798,    0, 4798, 4798, 4798, 4798, 4798, 4798, 4799,    0,
     4799, 4799,    0, 4799, 4799, 4799, 4799,    0, 4799, 4799,
     4799, 4799, 4799, 4799, 4799, 4799, 4799, 4799, 4799, 4799,
     4799, 4799, 4799, 4799,    0, 4799, 4799, 4799, 4799, 4799,
     4799, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194
    } ;

#define YY_TRAILING_MASK 0x2000
#define YY_TRAILING_HEAD_MASK 0x4000
#define REJECT \
{ \
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */ \
yy_cp = yyg->yy_full_match; /* restore poss. backed-over text */ \
yyg->yy_lp = yyg->yy_full_lp; /* restore orig. accepting pos. */ \
yyg->yy_state_ptr = yyg->yy_full_state; /* restore orig. state */ \
yy_current_state = *yyg->yy_state_ptr; /* restore curr. state */ \
++yyg->yy_lp; \
goto find_rule; \
}

#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
/******************************************************************************
 *
 * Copyright (C) 1997-2020 by Dimitri van Heesch.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation under the terms of the GNU General Public License is hereby
 * granted. No representations are made about the suitability of this software
 * for any purpose. It is provided "as is" without express or implied warranty.
 * See the GNU General Public License for more details.
 *
 * Documents produced by Doxygen are derivative works derived from the
 * input used in their production; they are not affected by this license.
 *
 */

#line 28 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"

/*
 *      includes
 */

#include <utility>
#include <memory>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <vector>
#include <string>
#include <mutex>
#include <sstream>

#include <stdio.h>
#include <assert.h>
#include <ctype.h>

#include "code.h"
#include "entry.h"
#include "doxygen.h"
#include "message.h"
#include "outputlist.h"
#include "util.h"
#include "membername.h"
#include "searchindex.h"
#include "arguments.h"
#include "config.h"
#include "groupdef.h"
#include "classlist.h"
#include "filedef.h"
#include "filename.h"
#include "namespacedef.h"
#include "tooltip.h"
#include "scopedtypevariant.h"
#include "symbolresolver.h"
#include "dir.h"

// Toggle for some debugging info
//#define DBG_CTX(x) fprintf x
#define DBG_CTX(x) do { } while(0)

#define YY_NO_UNISTD_H 1

#define CLASSBLOCK 1
#define SCOPEBLOCK 2
#define INNERBLOCK 3

#define USE_STATE2STRING 0

// context for an Objective-C method call
struct ObjCCallCtx
{
  int id;
  QCString methodName;
  QCString objectTypeOrName;
  TextStream comment;
  const ClassDef *objectType;
  const MemberDef *objectVar;
  const MemberDef *method;
  QCString format;
  int lexState;
  int braceCount;
};

struct codeYY_state
{
  CodeOutputInterface * code = 0;

  std::unordered_map< std::string, ScopedTypeVariant > codeClassMap;
  QCString      curClassName;
  StringVector  curClassBases;

  QCString      parmType;
  QCString      parmName;

  const char *  inputString = 0;     //!< the code fragment as text
  yy_size_t     inputPosition = 0;   //!< read offset during parsing
  QCString      fileName;
  int           inputLines = 0;      //!< number of line in the code fragment
  int           yyLineNr = 0;        //!< current line number
  yy_size_t     yyColNr = 0;         //!< current column number
  bool          insideCodeLine = FALSE;
  bool          skipCodify = FALSE;  //!< for CSharp files scoped namespace {

  bool          exampleBlock = FALSE;
  QCString      exampleName;
  QCString      exampleFile;

  bool          insideTemplate = FALSE;
  QCString      type;
  QCString      name;
  QCString      args;
  QCString      classScope;
  QCString      realScope;
  std::stack<int> scopeStack;      //!< 1 if bracket starts a scope,
                                   //   2 for internal blocks
  int           anchorCount = 0;
  const FileDef *     sourceFileDef = 0;
  bool          lineNumbers = FALSE;
  const Definition *  currentDefinition = 0;
  const MemberDef *   currentMemberDef = 0;
  bool          includeCodeFragment = FALSE;
  const char *  currentFontClass = 0;
  bool          searchingForBody = FALSE;
  bool          insideBody = FALSE;
  int           bodyCurlyCount = 0;
  QCString      saveName;
  QCString      saveType;
  QCString      delimiter;

  int           bracketCount = 0;
  int           curlyCount   = 0;
  int           sharpCount   = 0;
  bool          inFunctionTryBlock = FALSE;
  bool          inForEachExpression = FALSE;

  int           lastTemplCastContext = 0;
  int           lastSpecialCContext = 0;
  int           lastStringContext = 0;
  int           lastSkipCppContext = 0;
  int           lastVerbStringContext = 0;
  int           lastObjCCallContext = 0;
  int           memCallContext = 0;
  int           lastCContext = 0;
  int           skipInlineInitContext = 0;

  SrcLangExt    lang = SrcLangExt_Unknown;
  bool          insideObjC = FALSE;
  bool          insideProtocolList = FALSE;

  bool          lexInit = FALSE;

  std::stack<int>  classScopeLengthStack;

  int           isPrefixedWithThis = FALSE;
  const Definition *searchCtx = 0;
  bool          collectXRefs = FALSE;

  ObjCCallCtx * currentCtx=0;
  int           currentCtxId=0;
  int           currentNameId=0;
  int           currentObjId=0;
  int           currentWordId=0;
  int           currentCommentId=0;
  std::stack<ObjCCallCtx*> contextStack;
  std::unordered_map< int,std::unique_ptr<ObjCCallCtx> > contextMap;
  std::unordered_map< int, QCString>  nameMap;
  std::unordered_map< int, QCString>  objectMap;
  std::unordered_map< int, QCString>  wordMap;
  std::unordered_map< int, QCString>  commentMap;
  int           braceCount=0;

  using UsingContext = std::map<std::string,const NamespaceDef*>;

  VariableContext theVarContext;
  UsingContext    theUsingContext;
  CallContext     theCallContext;
  SymbolResolver  symbolResolver;
  TooltipManager  tooltipManager;
};

static bool isCastKeyword(const char *s);

//-------------------------------------------------------------------
#if USE_STATE2STRING
static const char *stateToString(int state);
#endif

static void saveObjCContext(yyscan_t yyscanner);
static void restoreObjCContext(yyscan_t yyscanner);
static void pushScope(yyscan_t yyscanner,const QCString &s);
static void popScope(yyscan_t yyscanner);
static void setCurrentDoc(yyscan_t yyscanner,const QCString &anchor);
static void addToSearchIndex(yyscan_t yyscanner,const QCString &text);
static void addToSearchIndex(yyscan_t yyscanner,const char *text);
static void setClassScope(yyscan_t yyscanner,const QCString &name);
static void startCodeLine(yyscan_t yyscanner);
static void endCodeLine(yyscan_t yyscanner);
static void nextCodeLine(yyscan_t yyscanner);
static void startFontClass(yyscan_t yyscanner,const char *s);
static void endFontClass(yyscan_t yyscanner);
static void codifyLines(yyscan_t yyscanner,const QCString &text);
static void codifyLines(yyscan_t yyscanner,const char *text);
static void incrementFlowKeyWordCount(yyscan_t yyscanner);
static void writeMultiLineCodeLink(yyscan_t yyscanner,CodeOutputInterface &ol,
                                   const Definition *d,
                                   const QCString &text);
static void addType(yyscan_t yyscanner);
static void addParmType(yyscan_t yyscanner);
static void addUsingDirective(yyscan_t yyscanner,const QCString &name);
static void setParameterList(yyscan_t yyscanner,const MemberDef *md);
static const ClassDef *stripClassName(yyscan_t yyscanner,const QCString &s,const Definition *d);
static const MemberDef *setCallContextForVar(yyscan_t yyscanner,const QCString &name);
static void updateCallContextForSmartPointer(yyscan_t yyscanner);
static bool getLinkInScope(yyscan_t yyscanner,const QCString &c,  // scope
                           const QCString &m,  // member
                           const QCString &memberText, // exact text
                           CodeOutputInterface &ol,
                           const QCString &text,
                           bool varOnly=FALSE
                          );
static bool getLink(yyscan_t yyscanner,const QCString &className,
                    const QCString &memberName,
                    CodeOutputInterface &ol,
                    const QCString &text=QCString(),
                    bool varOnly=FALSE);
static void generateClassOrGlobalLink(yyscan_t yyscanner,CodeOutputInterface &ol,const QCString &clName,
                                      bool typeOnly=FALSE,bool varOnly=FALSE);
static void generateClassOrGlobalLink(yyscan_t yyscanner,CodeOutputInterface &ol,const char *clName,
                                      bool typeOnly=FALSE,bool varOnly=FALSE);
static bool generateClassMemberLink(yyscan_t yyscanner,CodeOutputInterface &ol,const MemberDef *xmd,const QCString &memName);
static bool generateClassMemberLink(yyscan_t yyscanner,CodeOutputInterface &ol,const Definition *def,const QCString &memName);
static void generateMemberLink(yyscan_t yyscanner,CodeOutputInterface &ol,const QCString &varName,
            const QCString &memName);
static void generatePHPVariableLink(yyscan_t yyscanner,CodeOutputInterface &ol,const char *varName);
static void generateFunctionLink(yyscan_t yyscanner,CodeOutputInterface &ol,const QCString &funcName);
static void generateFunctionLink(yyscan_t yyscanner,CodeOutputInterface &ol,const char *funcName);
static int countLines(yyscan_t yyscanner);
static void writeObjCMethodCall(yyscan_t yyscanner,ObjCCallCtx *ctx);
static QCString escapeName(yyscan_t yyscanner,const char *s);
static QCString escapeObject(yyscan_t yyscanner,const char *s);
static QCString escapeWord(yyscan_t yyscanner,const char *s);
static QCString escapeComment(yyscan_t yyscanner,const char *s);
static bool skipLanguageSpecificKeyword(yyscan_t yyscanner,const char *kw);
static yy_size_t yyread(yyscan_t yyscanner,char *buf,yy_size_t max_size);
static void addVariable(yyscan_t yyscanner,QCString type,QCString name);
static bool startsWithKeyword(const QCString &str,const QCString &kw);

//-------------------------------------------------------------------

static std::mutex g_searchIndexMutex;
static std::mutex g_docCrossReferenceMutex;
static std::mutex g_addExampleMutex;
static std::mutex g_countFlowKeywordsMutex;

/* -----------------------------------------------------------------
 */
#undef  YY_INPUT
#define YY_INPUT(buf,result,max_size) result=yyread(yyscanner,buf,max_size);

// otherwise the filename would be the name of the converted file (*.cpp instead of *.l)
static inline const char *getLexerFILE() {return __FILE__;}
#include "doxygen_lex.h"

#line 13075 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/build/generated_src/code_intermediate.cpp"
#line 288 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
  /* please also pay attention to skipLanguageSpecificKeyword when changing the list of keywords. */
  /* no comment start / end signs inside square brackets */
  //- start: NUMBER -------------------------------------------------------------------------
  // Note same defines in commentcnv.l: keep in sync
  //- end: NUMBER ---------------------------------------------------------------------------
  // C start comment 
  // C end comment
  // Cpp comment 
  // ENDIDopt
  // Optional end qualifiers




































#line 13123 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/build/generated_src/code_intermediate.cpp"

#define INITIAL 0
#define SkipString 1
#define SkipStringS 2
#define SkipVerbString 3
#define SkipCPP 4
#define SkipComment 5
#define SkipCxxComment 6
#define RemoveSpecialCComment 7
#define Body 8
#define FuncCall 9
#define MemberCall 10
#define MemberCall2 11
#define SkipInits 12
#define ClassName 13
#define AlignAs 14
#define AlignAsEnd 15
#define PackageName 16
#define ClassVar 17
#define CppCliTypeModifierFollowup 18
#define Bases 19
#define SkipSharp 20
#define ReadInclude 21
#define TemplDecl 22
#define TemplCast 23
#define CallEnd 24
#define ObjCMethod 25
#define ObjCParams 26
#define ObjCParamType 27
#define ObjCCall 28
#define ObjCMName 29
#define ObjCSkipStr 30
#define ObjCCallComment 31
#define OldStyleArgs 32
#define ConceptName 33
#define UsingName 34
#define RawString 35
#define InlineInit 36

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif
    
#define YY_EXTRA_TYPE struct codeYY_state *

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    int yy_n_chars;
    int yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    yy_state_type *yy_state_buf;
    yy_state_type *yy_state_ptr;
    char *yy_full_match;
    int yy_lp;

    /* These are only needed for trailing context rules,
     * but there's no conditional variable for that yet. */
    int yy_looking_for_trail_begin;
    int yy_full_lp;
    int *yy_full_state;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    }; /* end struct yyguts_t */

static int yy_init_globals ( yyscan_t yyscanner );

int codeYYlex_init (yyscan_t* scanner);

int codeYYlex_init_extra ( YY_EXTRA_TYPE user_defined, yyscan_t* scanner);

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int codeYYlex_destroy ( yyscan_t yyscanner );

int codeYYget_debug ( yyscan_t yyscanner );

void codeYYset_debug ( int debug_flag , yyscan_t yyscanner );

YY_EXTRA_TYPE codeYYget_extra ( yyscan_t yyscanner );

void codeYYset_extra ( YY_EXTRA_TYPE user_defined , yyscan_t yyscanner );

FILE *codeYYget_in ( yyscan_t yyscanner );

void codeYYset_in  ( FILE * _in_str , yyscan_t yyscanner );

FILE *codeYYget_out ( yyscan_t yyscanner );

void codeYYset_out  ( FILE * _out_str , yyscan_t yyscanner );

			int codeYYget_leng ( yyscan_t yyscanner );

char *codeYYget_text ( yyscan_t yyscanner );

int codeYYget_lineno ( yyscan_t yyscanner );

void codeYYset_lineno ( int _line_number , yyscan_t yyscanner );

int codeYYget_column  ( yyscan_t yyscanner );

void codeYYset_column ( int _column_no , yyscan_t yyscanner );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int codeYYwrap ( yyscan_t yyscanner );
#else
extern int codeYYwrap ( yyscan_t yyscanner );
#endif
#endif

#ifndef YY_NO_UNPUT
    
    static void yyunput ( int c, char *buf_ptr  , yyscan_t yyscanner);
    
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int , yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * , yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput ( yyscan_t yyscanner );
#else
static int input ( yyscan_t yyscanner );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		int n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int codeYYlex (yyscan_t yyscanner);

#define YY_DECL int codeYYlex (yyscan_t yyscanner)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	if ( yyleng > 0 ) \
		YY_CURRENT_BUFFER_LVALUE->yy_at_bol = \
				(yytext[yyleng - 1] == '\n'); \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

        /* Create the reject buffer large enough to save one state per allowed character. */
        if ( ! yyg->yy_state_buf )
            yyg->yy_state_buf = (yy_state_type *)codeYYalloc(YY_STATE_BUF_SIZE  ,yyscanner);
            if ( ! yyg->yy_state_buf )
                YY_FATAL_ERROR( "out of dynamic memory in codeYYlex()" );

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			codeYYensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				codeYY_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
		}

		codeYY_load_buffer_state(yyscanner );
		}

	{
#line 385 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"


#line 13440 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/build/generated_src/code_intermediate.cpp"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yyg->yy_start;
		yy_current_state += YY_AT_BOL();

		yyg->yy_state_ptr = yyg->yy_state_buf;
		*yyg->yy_state_ptr++ = yy_current_state;

yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 4195 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			*yyg->yy_state_ptr++ = yy_current_state;
			++yy_cp;
			}
		while ( yy_current_state != 4194 );

yy_find_action:
		yy_current_state = *--yyg->yy_state_ptr;
		yyg->yy_lp = yy_accept[yy_current_state];
find_rule: /* we branch to this label when backing up */
		for ( ; ; ) /* until we find what rule we matched */
			{
			if ( yyg->yy_lp && yyg->yy_lp < yy_accept[yy_current_state + 1] )
				{
				yy_act = yy_acclist[yyg->yy_lp];
				if ( yy_act & YY_TRAILING_HEAD_MASK ||
				     yyg->yy_looking_for_trail_begin )
					{
					if ( yy_act == yyg->yy_looking_for_trail_begin )
						{
						yyg->yy_looking_for_trail_begin = 0;
						yy_act &= ~YY_TRAILING_HEAD_MASK;
						break;
						}
					}
				else if ( yy_act & YY_TRAILING_MASK )
					{
					yyg->yy_looking_for_trail_begin = yy_act & ~YY_TRAILING_MASK;
					yyg->yy_looking_for_trail_begin |= YY_TRAILING_HEAD_MASK;
					yyg->yy_full_match = yy_cp;
					yyg->yy_full_state = yyg->yy_state_ptr;
					yyg->yy_full_lp = yyg->yy_lp;
					}
				else
					{
					yyg->yy_full_match = yy_cp;
					yyg->yy_full_state = yyg->yy_state_ptr;
					yyg->yy_full_lp = yyg->yy_lp;
					break;
					}
				++yyg->yy_lp;
				goto find_rule;
				}
			--yy_cp;
			yy_current_state = *--yyg->yy_state_ptr;
			yyg->yy_lp = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
case 1:
YY_RULE_SETUP
#line 387 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"

	YY_BREAK
case 2:
YY_RULE_SETUP
#line 388 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"preprocessor");
                                          yyextra->code->codify(yytext);
                                          BEGIN( ReadInclude );
                                        }
	YY_BREAK
case 3:
/* rule 3 can match eol */
YY_RULE_SETUP
#line 393 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->insideObjC=TRUE;
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          if (!yyextra->insideTemplate)
                                            BEGIN( ClassName );
                                        }
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 401 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->insideTemplate) REJECT;
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( ClassName );
                                        }
	YY_BREAK
case 5:
/* rule 5 can match eol */
YY_RULE_SETUP
#line 408 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->insideTemplate) REJECT;
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 414 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          if (!yyextra->insideTemplate)
                                            BEGIN( ClassName );
                                        }
	YY_BREAK
case 7:
/* rule 7 can match eol */
YY_RULE_SETUP
#line 421 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( PackageName );
                                        }
	YY_BREAK
case 8:
/* rule 8 can match eol */
YY_RULE_SETUP
#line 427 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (!yyextra->insideObjC) REJECT;
                                          codifyLines(yyscanner,yytext);
                                          BEGIN(Body);
                                        }
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 432 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (!yyextra->insideObjC || yyextra->insideBody)
                                          {
                                            yyextra->code->codify(yytext);
                                          }
                                          else // Start of Objective-C method
                                          {
                                            DBG_CTX((stderr,"Start of Objective-C method!\n"));
                                            yyextra->code->codify(yytext);
                                            BEGIN(ObjCMethod);
                                          }
                                        }
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 444 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          BEGIN(ObjCParams);
                                        }
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 448 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          BEGIN(ObjCParamType);
                                        }
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 452 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          if (*yytext=='{')
                                          {
                                            if (yyextra->searchingForBody)
                                            {
                                              yyextra->searchingForBody=FALSE;
                                              yyextra->insideBody=TRUE;
                                            }
                                            if (yyextra->insideBody) yyextra->bodyCurlyCount++;
                                            if (!yyextra->curClassName.isEmpty()) // valid class name
                                            {
                                              pushScope(yyscanner,yyextra->curClassName);
                                              DBG_CTX((stderr,"** scope stack push SCOPEBLOCK\n"));
                                              yyextra->scopeStack.push(SCOPEBLOCK);
                                            }
                                          }
                                          yyextra->type.resize(0);
                                          yyextra->name.resize(0);
                                          BEGIN(Body);
                                        }
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 473 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 476 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keywordtype");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          yyextra->parmType=yytext;
                                        }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 482 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->parmType=yytext;
                                        }
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 486 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          BEGIN(ObjCParams);
                                        }
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 490 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->parmName=yytext;
                                          addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
                                          yyextra->parmType.resize(0);yyextra->parmName.resize(0);
                                        }
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 496 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                        }
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 499 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 20:
/* rule 20 can match eol */
YY_RULE_SETUP
#line 502 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 505 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          //FileInfo *f;
                                          bool ambig;
                                          bool found=FALSE;

                                          const FileDef *fd=findFileDef(Doxygen::inputNameLinkedMap,yytext,ambig);
                                          //printf("looking for include %s -> %s fd=%p\n",yytext,qPrint(absPath),fd);
                                          if (fd && fd->isLinkable())
                                          {
                                            if (ambig) // multiple input files match the name
                                            {
                                              DBG_CTX((stderr,"===== yes %s is ambiguous\n",yytext));
                                              QCString name(Dir::cleanDirPath(yytext));
                                              if (!name.isEmpty() && yyextra->sourceFileDef)
                                              {
                                                const FileName *fn = Doxygen::inputNameLinkedMap->find(name);
                                                if (fn)
                                                {
                                                  // see if this source file actually includes the file
                                                  auto it = std::find_if(fn->begin(),
                                                                         fn->end(),
                                                                         [&sfd=yyextra->sourceFileDef]
                                                                         (const auto &lfd)
                                                                         { return sfd->isIncluded(lfd->absFilePath()); });
                                                  found = it!=fn->end();
                                                }
                                              }
                                            }
                                            else // not ambiguous
                                            {
                                              found = TRUE;
                                            }
                                          }
                                          DBG_CTX((stderr,"      include file %s found=%d\n",fd ? qPrint(fd->absFilePath()) : "<none>",found));
                                          if (found)
                                          {
                                            writeMultiLineCodeLink(yyscanner,*yyextra->code,fd,yytext);
                                          }
                                          else
                                          {
                                            yyextra->code->codify(yytext);
                                          }
                                          char c=(char)yyinput(yyscanner);
                                          QCString text;
                                          text+=c;
                                          yyextra->code->codify(text);
                                          endFontClass(yyscanner);
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 554 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"preprocessor");
                                          yyextra->lastSkipCppContext = YY_START;
                                          yyextra->code->codify(yytext);
                                          BEGIN( SkipCPP ) ;
                                        }
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 560 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->lastStringContext=YY_START;
                                          BEGIN( SkipString ) ;
                                        }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 565 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 568 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 26:
/* rule 26 can match eol */
YY_RULE_SETUP
#line 571 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 27:
/* rule 27 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_bp + 2);
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 574 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          REJECT;
                                        }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 577 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->theVarContext.pushScope();

                                          DBG_CTX((stderr,"** scope stack push INNERBLOCK\n"));
                                          yyextra->scopeStack.push(INNERBLOCK);

                                          if (yyextra->searchingForBody)
                                          {
                                            yyextra->searchingForBody=FALSE;
                                            yyextra->insideBody=TRUE;
                                          }
                                          yyextra->code->codify(yytext);
                                          if (yyextra->insideBody)
                                          {
                                            yyextra->bodyCurlyCount++;
                                          }
                                          yyextra->type.resize(0);
                                          yyextra->name.resize(0);
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 597 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->theVarContext.popScope();
                                          yyextra->type.resize(0);
                                          yyextra->name.resize(0);

                                          if (!yyextra->scopeStack.empty())
                                          {
                                            int scope = yyextra->scopeStack.top();
                                            yyextra->scopeStack.pop();
                                            DBG_CTX((stderr,"** scope stack pop SCOPEBLOCK=%d\n",scope==SCOPEBLOCK));
                                            if (scope==SCOPEBLOCK || scope==CLASSBLOCK)
                                            {
                                              popScope(yyscanner);
                                            }
                                          }

                                          yyextra->code->codify(yytext);

                                          DBG_CTX((stderr,"yyextra->bodyCurlyCount=%d\n",yyextra->bodyCurlyCount));
                                          if (--yyextra->bodyCurlyCount<=0)
                                          {
                                            yyextra->insideBody=FALSE;
                                            yyextra->currentMemberDef=0;
                                            if (yyextra->currentDefinition)
                                              yyextra->currentDefinition=yyextra->currentDefinition->getOuterScope();
                                          }
                                          BEGIN(Body);
                                        }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 625 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          DBG_CTX((stderr,"End of objc scope fd=%s\n",qPrint(yyextra->sourceFileDef->name())));
                                          if (yyextra->sourceFileDef)
                                          {
                                            const FileDef *fd=yyextra->sourceFileDef;
                                            yyextra->insideObjC = fd->name().lower().endsWith(".m") ||
                                                                  fd->name().lower().endsWith(".mm");
                                            DBG_CTX((stderr,"insideObjC=%d\n",yyextra->insideObjC));
                                          }
                                          else
                                          {
                                            yyextra->insideObjC = FALSE;
                                          }
                                          if (yyextra->insideBody)
                                          {
                                            yyextra->theVarContext.popScope();

                                            if (!yyextra->scopeStack.empty())
                                            {
                                              int scope = yyextra->scopeStack.top();
                                              yyextra->scopeStack.pop();
                                              DBG_CTX((stderr,"** scope stack pop SCOPEBLOCK=%d\n",scope==SCOPEBLOCK));
                                              if (scope==SCOPEBLOCK || scope==CLASSBLOCK)
                                              {
                                                popScope(yyscanner);
                                              }
                                            }
                                            yyextra->insideBody=FALSE;
                                          }

                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);

                                          yyextra->currentMemberDef=0;
                                          if (yyextra->currentDefinition)
                                            yyextra->currentDefinition=yyextra->currentDefinition->getOuterScope();
                                          BEGIN(Body);
                                        }
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 664 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->lang==SrcLangExt_CSharp)
                                          {
                                            yyextra->code->codify(yytext);
                                            yyextra->skipCodify = true;
                                            unput('{');
                                          }
                                          else
                                          {
                                            yyextra->code->codify(yytext);
                                            yyextra->searchingForBody=FALSE;
                                            BEGIN( Body );
                                          }
                                        }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 678 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->type=yyextra->curClassName;
                                          yyextra->name.resize(0);
                                          yyextra->code->codify(yytext);
                                          BEGIN( Body ); // variable of type struct *
                                        }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 684 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 34:
#line 690 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
case 35:
YY_RULE_SETUP
#line 690 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->lang==SrcLangExt_CSharp)
                                            yyextra->curClassName=substitute(yytext,".","::");
                                          else
                                            yyextra->curClassName=yytext;
                                          addType(yyscanner);
                                          if (yyextra->curClassName=="alignas")
                                          {
                                            startFontClass(yyscanner,"keyword");
                                            yyextra->code->codify(yytext);
                                            endFontClass(yyscanner);
                                            BEGIN( AlignAs );
                                          }
                                          else
                                          {
                                            generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                            BEGIN( ClassVar );
                                          }
                                        }
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 709 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->bracketCount=1;
                                          yyextra->code->codify(yytext);
                                          BEGIN( AlignAsEnd );
                                        }
	YY_BREAK
case 37:
/* rule 37 can match eol */
YY_RULE_SETUP
#line 714 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->yyLineNr++;
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 717 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->code->codify(yytext); }
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 718 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->code->codify(yytext);
                                          yyextra->bracketCount++;
                                        }
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 721 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          if (--yyextra->bracketCount<=0)
                                          {
                                            BEGIN(ClassName);
                                          }
                                        }
	YY_BREAK
case 41:
/* rule 41 can match eol */
YY_RULE_SETUP
#line 728 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->yyLineNr++;
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 731 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->code->codify(yytext); }
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 732 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // PHP namespace
                                          yyextra->curClassName=substitute(yytext,"\\","::");
                                          yyextra->scopeStack.push(CLASSBLOCK);
                                          pushScope(yyscanner,yyextra->curClassName);
                                          addType(yyscanner);
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          BEGIN( ClassVar );
                                        }
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 740 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // Obj-C category
                                          yyextra->curClassName=removeRedundantWhiteSpace(yytext);
                                          yyextra->scopeStack.push(CLASSBLOCK);
                                          pushScope(yyscanner,yyextra->curClassName);
                                          addType(yyscanner);
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          BEGIN( ClassVar );
                                        }
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 748 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->curClassName=substitute(yytext,".","::");
                                          DBG_CTX((stderr,"found package: %s\n",qPrint(yyextra->curClassName)));
                                          addType(yyscanner);
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 754 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          unput(*yytext);
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 758 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // Java, Slice
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          yyextra->curClassBases.clear();
                                          BEGIN( Bases );
                                        }
	YY_BREAK
case 48:
/* rule 48 can match eol */
YY_RULE_SETUP
#line 765 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          DBG_CTX((stderr,"***** C++/CLI modifier %s on yyextra->curClassName=%s\n",yytext,qPrint(yyextra->curClassName)));
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( CppCliTypeModifierFollowup );
                                        }
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 772 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->type = yyextra->curClassName;
                                          yyextra->name = yytext;
                                          if (yyextra->insideBody)
                                          {
                                            addVariable(yyscanner,yyextra->type,yyextra->name);
                                          }
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                        }
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 781 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          codifyLines(yyscanner,yytext);
                                          yyextra->curClassBases.clear();
                                          BEGIN( Bases );
                                        }
	YY_BREAK
case 51:
#line 787 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
case 52:
#line 788 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
case 53:
YY_RULE_SETUP
#line 788 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->theVarContext.pushScope();
                                          if (!yyextra->skipCodify) yyextra->code->codify(yytext);
                                          yyextra->skipCodify = false;
                                          if (YY_START==ClassVar && yyextra->curClassName.isEmpty())
                                          {
                                            yyextra->curClassName = yyextra->name;
                                          }
                                          if (yyextra->searchingForBody)
                                          {
                                            yyextra->searchingForBody=FALSE;
                                            yyextra->insideBody=TRUE;
                                          }
                                          if (yyextra->insideBody) yyextra->bodyCurlyCount++;
                                          if (!yyextra->curClassName.isEmpty()) // valid class name
                                          {
                                            DBG_CTX((stderr,"** scope stack push CLASSBLOCK\n"));
                                            yyextra->scopeStack.push(CLASSBLOCK);
                                            pushScope(yyscanner,yyextra->curClassName);
                                            DBG_CTX((stderr,"***** yyextra->curClassName=%s\n",qPrint(yyextra->curClassName)));
                                            if (yyextra->symbolResolver.resolveClass(yyextra->currentDefinition,yyextra->curClassName)==0)
                                            {
                                              DBG_CTX((stderr,"Adding new class %s\n",qPrint(yyextra->curClassName)));
                                              ScopedTypeVariant var(yyextra->curClassName);
                                              // insert base classes.
                                              for (const auto &s : yyextra->curClassBases)
                                              {
                                                const ClassDef *bcd=0;
                                                auto it = yyextra->codeClassMap.find(s);
                                                if (it!=yyextra->codeClassMap.end())
                                                {
                                                  bcd = toClassDef(it->second.globalDef());
                                                }
                                                if (bcd==0) bcd=yyextra->symbolResolver.resolveClass(yyextra->currentDefinition,QCString(s));
                                                if (bcd && bcd->name()!=yyextra->curClassName)
                                                {
                                                  var.localDef()->insertBaseClass(bcd->name());
                                                }
                                              }
                                              yyextra->codeClassMap.emplace(std::make_pair(yyextra->curClassName.str(),std::move(var)));
                                            }
                                            //printf("yyextra->codeClassList.count()=%d\n",yyextra->codeClassList.count());
                                          }
                                          else // not a class name -> assume inner block
                                          {
                                            DBG_CTX((stderr,"** scope stack push INNERBLOCK\n"));
                                            yyextra->scopeStack.push(INNERBLOCK);
                                          }
                                          yyextra->curClassName.resize(0);
                                          yyextra->curClassBases.clear();
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 840 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 845 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          DBG_CTX((stderr,"%s:addBase(%s)\n",qPrint(yyextra->curClassName),yytext));
                                          yyextra->curClassBases.push_back(yytext);
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                        }
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 850 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          if (!yyextra->insideObjC)
                                          {
                                            yyextra->sharpCount=1;
                                            BEGIN ( SkipSharp );
                                          }
                                          else
                                          {
                                            yyextra->insideProtocolList=TRUE;
                                          }
                                        }
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 862 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->insideProtocolList=FALSE;
                                        }
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 866 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          ++yyextra->sharpCount;
                                        }
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 870 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          if (--yyextra->sharpCount<=0)
                                          BEGIN ( Bases );
                                        }
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 875 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->lastStringContext=YY_START;
                                          BEGIN(SkipString);
                                        }
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 880 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->lastStringContext=YY_START;
                                          BEGIN(SkipStringS);
                                        }
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 885 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->sharpCount=1;
                                          BEGIN ( SkipSharp );
                                        }
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 890 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          ++yyextra->sharpCount;
                                        }
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 894 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          if (--yyextra->sharpCount<=0)
                                            BEGIN ( Bases );
                                        }
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 901 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 66:
/* rule 66 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 906 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          addType(yyscanner);
                                          generateFunctionLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->bracketCount=0;
                                          yyextra->args.resize(0);
                                          yyextra->name+=yytext;
                                          BEGIN( FuncCall );
                                        }
	YY_BREAK
case 67:
/* rule 67 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 914 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          addType(yyscanner);
                                          generateFunctionLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->bracketCount=0;
                                          yyextra->args.resize(0);
                                          yyextra->name+=yytext;
                                          BEGIN( FuncCall );
                                        }
	YY_BREAK
case 68:
/* rule 68 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 922 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          addType(yyscanner);
                                          generateFunctionLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->bracketCount=0;
                                          yyextra->args.resize(0);
                                          yyextra->name+=yytext;
                                          BEGIN( FuncCall );
                                        }
	YY_BREAK
case 69:
/* rule 69 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 930 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          yyextra->insideTemplate=TRUE;
                                          yyextra->sharpCount=0;
                                        }
	YY_BREAK
case 70:
/* rule 70 can match eol */
YY_RULE_SETUP
#line 937 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          BEGIN(ConceptName);
                                        }
	YY_BREAK
case 71:
/* rule 71 can match eol */
YY_RULE_SETUP
#line 943 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          BEGIN(UsingName);
                                        }
	YY_BREAK
case 72:
/* rule 72 can match eol */
YY_RULE_SETUP
#line 949 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          BEGIN(UsingName);
                                        }
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 955 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                        }
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 958 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ codifyLines(yyscanner,yytext); BEGIN(Body); }
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 959 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          addUsingDirective(yyscanner,substitute(yytext,".","::"));
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          BEGIN(Body);
                                        }
	YY_BREAK
case 76:
/* rule 76 can match eol */
YY_RULE_SETUP
#line 964 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ codifyLines(yyscanner,yytext); BEGIN(Body); }
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 965 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ codifyLines(yyscanner,yytext); BEGIN(Body); }
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 966 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->code->codify(yytext); // this-> for C++, this. for C#
                                          yyextra->isPrefixedWithThis = TRUE;
                                        }
	YY_BREAK
case 79:
/* rule 79 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 969 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->lang==SrcLangExt_Java && qstrcmp("internal",yytext) ==0) REJECT;
                                          if (skipLanguageSpecificKeyword(yyscanner,yytext)) REJECT;
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          if (QCString(yytext)=="typedef")
                                          {
                                            addType(yyscanner);
                                            yyextra->name+=yytext;
                                          }
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 981 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (skipLanguageSpecificKeyword(yyscanner,yytext)) REJECT;
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 81:
/* rule 81 can match eol */
YY_RULE_SETUP
#line 987 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (skipLanguageSpecificKeyword(yyscanner,yytext)) REJECT;
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          yyextra->name.resize(0);yyextra->type.resize(0);
                                        }
	YY_BREAK
case 82:
/* rule 82 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_bp + 2);
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 994 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (!yyextra->inForEachExpression) REJECT;
                                          startFontClass(yyscanner,"keywordflow");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          // insert the variable in the parent scope, see bug 546158
                                          yyextra->theVarContext.popScope();
                                          addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
                                          yyextra->theVarContext.pushScope();
                                          yyextra->name.resize(0);yyextra->type.resize(0);
                                        }
	YY_BREAK
case 83:
/* rule 83 can match eol */
YY_RULE_SETUP
#line 1005 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keywordflow");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          yyextra->name.resize(0);yyextra->type.resize(0);
                                          yyextra->inForEachExpression = (qstrcmp(yytext,"for each")==0 || qstrcmp(yytext, "foreach")==0);
                                          BEGIN(FuncCall);
                                        }
	YY_BREAK
case 84:
/* rule 84 can match eol */
YY_RULE_SETUP
#line 1013 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          incrementFlowKeyWordCount(yyscanner);
                                          startFontClass(yyscanner,"keywordflow");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          yyextra->name.resize(0);yyextra->type.resize(0);
                                          yyextra->inForEachExpression = (strcmp(yytext,"for each")==0 || strcmp(yytext, "foreach")==0);
                                          BEGIN(FuncCall);
                                        }
	YY_BREAK
case 85:
/* rule 85 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1022 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keywordflow");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          if (yyextra->inFunctionTryBlock && (qstrcmp(yytext,"catch")==0 || qstrcmp(yytext,"finally")==0))
                                          {
                                            yyextra->inFunctionTryBlock=FALSE;
                                          }
                                        }
	YY_BREAK
case 86:
/* rule 86 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1031 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          incrementFlowKeyWordCount(yyscanner);
                                          startFontClass(yyscanner,"keywordflow");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          if (yyextra->inFunctionTryBlock && (strcmp(yytext,"catch")==0 || strcmp(yytext,"finally")==0))
                                          {
                                            yyextra->inFunctionTryBlock=FALSE;
                                          }
                                        }
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 1041 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keywordflow");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 1046 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          incrementFlowKeyWordCount(yyscanner);
                                          startFontClass(yyscanner,"keywordflow");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 1052 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // end of cast?
                                          yyextra->code->codify(yytext);
                                          yyextra->theCallContext.popScope(yyextra->name, yyextra->type);
                                          yyextra->bracketCount--;
                                          yyextra->parmType = yyextra->name;
                                          BEGIN(FuncCall);
                                        }
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 1059 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 1062 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->name.resize(0);yyextra->type.resize(0);
                                          if (*yytext==')')
                                          {
                                            yyextra->theCallContext.popScope(yyextra->name, yyextra->type);
                                            yyextra->bracketCount--;
                                            BEGIN(FuncCall);
                                          }
                                        }
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 1072 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keywordtype");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          addType(yyscanner);
                                          yyextra->name+=yytext;
                                        }
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 1079 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->lang!=SrcLangExt_Slice)
                                          {
                                            REJECT;
                                          }
                                          else
                                          {
                                            startFontClass(yyscanner,"keywordtype");
                                            yyextra->code->codify(yytext);
                                            endFontClass(yyscanner);
                                            addType(yyscanner);
                                            yyextra->name+=yytext;
                                          }
                                        }
	YY_BREAK
case 94:
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1093 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          yyextra->sharpCount=0;
                                          BEGIN(TemplDecl);
                                        }
	YY_BREAK
case 95:
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1100 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // template<...>
                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          yyextra->sharpCount=0;
                                          BEGIN(TemplDecl);
                                        }
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 1107 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 1112 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->sharpCount++;
                                        }
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 1116 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->sharpCount--;
                                          if (yyextra->sharpCount<=0)
                                          {
                                            BEGIN(Body);
                                          }
                                        }
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 1124 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( yyextra->lastTemplCastContext );
                                        }
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 1130 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                        }
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 1133 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 1138 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 1141 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // static_cast<T>(
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                          yyextra->lastTemplCastContext = YY_START;
                                          BEGIN(TemplCast);
                                        }
	YY_BREAK
case 104:
/* rule 104 can match eol */
YY_RULE_SETUP
#line 1148 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // PHP member variable
                                          addType(yyscanner);
                                          generatePHPVariableLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->name+=yytext+7;
                                        }
	YY_BREAK
case 105:
/* rule 105 can match eol */
YY_RULE_SETUP
#line 1153 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // A<T> *pt;
                                          if (isCastKeyword(yytext) && YY_START==Body)
                                          {
                                            REJECT;
                                          }
                                          addType(yyscanner);
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->name+=yytext;
                                        }
	YY_BREAK
case 106:
/* rule 106 can match eol */
YY_RULE_SETUP
#line 1162 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // "int var;" or "var, var2" or "debug(f) macro" , or int var : 5;
                                          if (startsWithKeyword(yytext,"typedef")) REJECT;
                                          addType(yyscanner);
                                          // changed this to generateFunctionLink, see bug 624514
                                          generateFunctionLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->name+=yytext;
                                        }
	YY_BREAK
case 107:
/* rule 107 can match eol */
YY_RULE_SETUP
#line 1169 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // CSharp/Java scope
                                          if (yyextra->lang==SrcLangExt_CSharp || yyextra->lang==SrcLangExt_Java)
                                          {
                                            addType(yyscanner);
                                            generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                            yyextra->name+=yytext;
                                          }
                                          else
                                          {
                                            REJECT;
                                          }
                                        }
	YY_BREAK
case 108:
/* rule 108 can match eol */
YY_RULE_SETUP
#line 1181 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // p->func()
                                          if (startsWithKeyword(yytext,"typedef")) REJECT;
                                          addType(yyscanner);
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->name+=yytext;
                                        }
	YY_BREAK
case 109:
/* rule 109 can match eol */
YY_RULE_SETUP
#line 1187 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{  // (*p)->func() but not "if (p) ..."
                                          yyextra->code->codify(yytext);
                                          uint s=0;while (s<(uint)yyleng && !isId(yytext[s])) s++;
                                          uint e=(uint)yyleng-1;while (e>1 && !isId(yytext[e])) e--;
                                          QCString varname = ((QCString)yytext).mid(s,e-s+1);
                                          addType(yyscanner);
                                          yyextra->name=varname;
                                        }
	YY_BREAK
case 110:
/* rule 110 can match eol */
#line 1196 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
case 111:
/* rule 111 can match eol */
YY_RULE_SETUP
#line 1196 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // a() or c::a() or t<A,B>::a() or A\B\foo()
                                          if (isCastKeyword(yytext))
                                          {
                                            REJECT;
                                          }
                                          addType(yyscanner);
                                          generateFunctionLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->bracketCount=0;
                                          yyextra->args.resize(0);
                                          yyextra->name+=yytext;
                                          BEGIN( FuncCall );
                                        }
	YY_BREAK
case 112:
/* rule 112 can match eol */
YY_RULE_SETUP
#line 1208 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          QCString text(yytext);
                                          uint i=(uint)text.find('R');
                                          yyextra->code->codify(text.left(i+1));
                                          startFontClass(yyscanner,"stringliteral");
                                          yyextra->code->codify(QCString(yytext+i+1));
                                          yyextra->lastStringContext=YY_START;
                                          yyextra->inForEachExpression = FALSE;
                                          yyextra->delimiter = yytext+i+2;
                                          yyextra->delimiter=yyextra->delimiter.left(yyextra->delimiter.length()-1);
                                          BEGIN( RawString );
                                        }
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 1220 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"stringliteral");
                                          yyextra->code->codify(yytext);
                                          yyextra->lastStringContext=YY_START;
                                          yyextra->inForEachExpression = FALSE;
                                          BEGIN( SkipString );
                                        }
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 1227 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ //Note similar code in commentcnv.l
                                          if (yyextra->lang!=SrcLangExt_Cpp) REJECT;
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 1231 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"stringliteral");
                                          yyextra->code->codify(yytext);
                                          yyextra->lastStringContext=YY_START;
                                          yyextra->inForEachExpression = FALSE;
                                          BEGIN( SkipStringS );
                                        }
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 1238 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 1241 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 1244 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 1247 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( yyextra->lastStringContext );
                                        }
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 1252 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( yyextra->lastStringContext );
                                        }
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 1257 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 122:
/* rule 122 can match eol */
YY_RULE_SETUP
#line 1260 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          QCString delimiter(yytext+1);
                                          delimiter=delimiter.left(delimiter.length()-1);
                                          if (delimiter==yyextra->delimiter)
                                          {
                                            BEGIN( yyextra->lastStringContext );
                                          }
                                        }
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 1269 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->code->codify(yytext); }
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 1270 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->code->codify(yytext); }
	YY_BREAK
case 125:
/* rule 125 can match eol */
YY_RULE_SETUP
#line 1271 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ codifyLines(yyscanner,yytext); }
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 1272 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 1275 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // escaped quote
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 1278 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // end of string
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( yyextra->lastVerbStringContext );
                                        }
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 1283 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 130:
/* rule 130 can match eol */
YY_RULE_SETUP
#line 1286 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 1289 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->name.resize(0);yyextra->type.resize(0);
                                        }
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 1293 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->insideTemplate)
                                          {
                                            yyextra->sharpCount++;
                                          }
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 1300 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->insideTemplate)
                                          {
                                            if (--yyextra->sharpCount<=0)
                                            {
                                              yyextra->insideTemplate=FALSE;
                                            }
                                          }
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 1310 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"charliteral");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 1315 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yytext[0]=='-') // -> could be overloaded
                                          {
                                            updateCallContextForSmartPointer(yyscanner);
                                          }
                                          yyextra->code->codify(yytext);
                                          yyextra->memCallContext = YY_START;
                                          BEGIN( MemberCall );
                                        }
	YY_BREAK
case 136:
/* rule 136 can match eol */
YY_RULE_SETUP
#line 1324 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->theCallContext.getScope().globalDef())
                                          {
                                            if (!generateClassMemberLink(yyscanner,*yyextra->code,yyextra->theCallContext.getScope().globalDef(),yytext))
                                            {
                                              codifyLines(yyscanner,yytext);
                                              addToSearchIndex(yyscanner,yytext);
                                            }
                                            yyextra->name.resize(0);
                                          }
                                          else
                                          {
                                              codifyLines(yyscanner,yytext);
                                            addToSearchIndex(yyscanner,yytext);
                                            yyextra->name.resize(0);
                                          }
                                          yyextra->type.resize(0);
                                          if (yyextra->memCallContext==Body)
                                          {
                                            BEGIN(FuncCall);
                                          }
                                          else
                                          {
                                            BEGIN(yyextra->memCallContext);
                                          }
                                        }
	YY_BREAK
case 137:
/* rule 137 can match eol */
YY_RULE_SETUP
#line 1350 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->theCallContext.getScope().globalDef())
                                          {
                                            DBG_CTX((stderr,"yyextra->theCallContext.getClass()=%p\n",(void*)yyextra->theCallContext.getScope().globalDef()));
                                            if (!generateClassMemberLink(yyscanner,*yyextra->code,yyextra->theCallContext.getScope().globalDef(),yytext))
                                            {
                                              codifyLines(yyscanner,yytext);
                                              addToSearchIndex(yyscanner,yytext);
                                            }
                                            yyextra->name.resize(0);
                                          }
                                          else
                                          {
                                            DBG_CTX((stderr,"no class context!\n"));
                                            codifyLines(yyscanner,yytext);
                                            addToSearchIndex(yyscanner,yytext);
                                            yyextra->name.resize(0);
                                          }
                                          yyextra->type.resize(0);
                                          BEGIN(yyextra->memCallContext);
                                        }
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 1371 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->insideObjC && *yytext=='[')
                                          {
                                            DBG_CTX((stderr,"Found start of ObjC call!\n"));
                                            // start of a method call
                                            yyextra->contextMap.clear();
                                            yyextra->nameMap.clear();
                                            yyextra->objectMap.clear();
                                            yyextra->wordMap.clear();
                                            yyextra->commentMap.clear();
                                            yyextra->currentCtxId  = 0;
                                            yyextra->currentNameId  = 0;
                                            yyextra->currentObjId  = 0;
                                            yyextra->currentCtx = 0;
                                            yyextra->braceCount = 0;
                                            unput('[');
                                            BEGIN(ObjCCall);
                                          }
                                          else
                                          {
                                            yyextra->code->codify(yytext);
                                            yyextra->saveName = yyextra->name;
                                            yyextra->saveType = yyextra->type;
                                            if (*yytext!='[' && !yyextra->type.isEmpty())
                                            {
                                              //printf("yyextra->scopeStack.bottom()=%p\n",yyextra->scopeStack.bottom());
                                              //if (yyextra->scopeStack.top()!=CLASSBLOCK) // commented out for bug731363
                                              {
                                                //printf("AddVariable: '%s' '%s' context=%d\n",
                                                //    qPrint(yyextra->type),qPrint(yyextra->name),yyextra->theVarContext.count());
                                                addVariable(yyscanner,yyextra->type,yyextra->name);
                                              }
                                              yyextra->name.resize(0);
                                            }
                                            if (*yytext==';' || *yytext=='=')
                                            {
                                              yyextra->type.resize(0);
                                              yyextra->name.resize(0);
                                            }
                                            else if (*yytext=='[')
                                            {
                                              yyextra->theCallContext.pushScope(yyextra->name, yyextra->type);
                                            }
                                            yyextra->args.resize(0);
                                            yyextra->parmType.resize(0);
                                            yyextra->parmName.resize(0);
                                          }
                                        }
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 1419 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                    saveObjCContext(yyscanner);
                                    yyextra->currentCtx->format+=*yytext;
                                    BEGIN(ObjCCall);
                                    DBG_CTX((stderr,"open\n"));
                                  }
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 1425 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                    yyextra->currentCtx->format+=*yytext;
                                    restoreObjCContext(yyscanner);
                                    BEGIN(ObjCMName);
                                    if (yyextra->currentCtx==0)
                                    {
                                      // end of call
                                      ObjCCallCtx *ctx = 0;
                                      auto it = yyextra->contextMap.find(0);
                                      if (it!=yyextra->contextMap.end())
                                      {
                                        ctx = it->second.get();
                                      }
                                      writeObjCMethodCall(yyscanner,ctx);
                                      BEGIN(Body);
                                    }
                                    DBG_CTX((stderr,"close\n"));
                                  }
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 1443 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                    yyextra->currentCtx->format+=escapeComment(yyscanner,yytext);
                                  }
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 1446 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                    yyextra->lastObjCCallContext = YY_START;
                                    yyextra->currentCtx->comment.str(yytext);
                                    BEGIN(ObjCCallComment);
                                  }
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 1451 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                    yyextra->currentCtx->comment << yytext;
                                    std::string commentStr = yyextra->currentCtx->comment.str();
                                    yyextra->currentCtx->format+=escapeComment(yyscanner,commentStr.c_str());
                                    BEGIN(yyextra->lastObjCCallContext);
                                  }
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 1457 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->comment << yytext; }
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 1458 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->comment << yytext; }
	YY_BREAK
case 146:
/* rule 146 can match eol */
YY_RULE_SETUP
#line 1459 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->comment << *yytext; }
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 1460 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->comment << *yytext; }
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 1461 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                    yyextra->currentCtx->format+=escapeObject(yyscanner,yytext);
                                    if (yyextra->braceCount==0)
                                    {
                                      yyextra->currentCtx->objectTypeOrName=yytext;
                                      DBG_CTX((stderr,"new type=%s\n",qPrint(yyextra->currentCtx->objectTypeOrName)));
                                      BEGIN(ObjCMName);
                                    }
                                  }
	YY_BREAK
case 149:
/* rule 149 can match eol */
YY_RULE_SETUP
#line 1470 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                    if (yyextra->braceCount==0 &&
                                        yyextra->currentCtx->methodName.isEmpty())
                                    {
                                      yyextra->currentCtx->methodName=yytext;
                                      yyextra->currentCtx->format+=escapeName(yyscanner,yytext);
                                    }
                                    else
                                    {
                                      yyextra->currentCtx->format+=escapeWord(yyscanner,yytext);
                                    }
                                  }
	YY_BREAK
case 150:
/* rule 150 can match eol */
YY_RULE_SETUP
#line 1482 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                     if (yyextra->braceCount==0)
                                     {
                                       yyextra->currentCtx->methodName+=yytext;
                                       yyextra->currentCtx->methodName+=":";
                                     }
                                     yyextra->currentCtx->format+=escapeName(yyscanner,yytext);
                                   }
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 1490 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=yytext; }
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 1491 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=yytext; }
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 1492 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=yytext;
                                      BEGIN(yyextra->lastStringContext);
                                   }
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 1495 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=yytext; }
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 1496 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=yytext;
                                      yyextra->lastStringContext=YY_START;
                                      BEGIN(ObjCSkipStr);
                                   }
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 1500 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+="$$"; }
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 1501 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=*yytext; yyextra->braceCount++; }
	YY_BREAK
case 158:
YY_RULE_SETUP
#line 1502 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=*yytext; yyextra->braceCount--; }
	YY_BREAK
case 159:
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1503 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // needed to prevent matching the global rule (for C#)
                                     yyextra->currentCtx->format+=yytext;
                                   }
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 1506 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=escapeWord(yyscanner,yytext); }
	YY_BREAK
case 161:
YY_RULE_SETUP
#line 1507 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=*yytext; }
	YY_BREAK
case 162:
/* rule 162 can match eol */
YY_RULE_SETUP
#line 1508 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->currentCtx->format+=*yytext; }
	YY_BREAK
case 163:
YY_RULE_SETUP
#line 1510 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->theCallContext.popScope(yyextra->name, yyextra->type);
                                          yyextra->code->codify(yytext);
                                          // TODO: nested arrays like: a[b[0]->func()]->func()
                                          yyextra->name = yyextra->saveName;
                                          yyextra->type = yyextra->saveType;
                                        }
	YY_BREAK
case 164:
YY_RULE_SETUP
#line 1517 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 165:
YY_RULE_SETUP
#line 1520 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 166:
/* rule 166 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1523 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          //addParmType(yyscanner);
                                          //yyextra->parmName=yytext;
                                          if (skipLanguageSpecificKeyword(yyscanner,yytext)) REJECT;
                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 167:
/* rule 167 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1531 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          addParmType(yyscanner);
                                          yyextra->parmName=yytext;
                                          startFontClass(yyscanner,"keywordtype");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 168:
/* rule 168 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1538 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->lang!=SrcLangExt_Slice)
                                          {
                                            REJECT;
                                          }
                                          else
                                          {
                                            addParmType(yyscanner);
                                            yyextra->parmName=yytext;
                                            startFontClass(yyscanner,"keywordtype");
                                            yyextra->code->codify(yytext);
                                            endFontClass(yyscanner);
                                          }
                                        }
	YY_BREAK
case 169:
/* rule 169 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1552 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          addParmType(yyscanner);
                                          yyextra->parmName=yytext;
                                          startFontClass(yyscanner,"keywordflow");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 170:
/* rule 170 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1559 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          incrementFlowKeyWordCount(yyscanner);
                                          addParmType(yyscanner);
                                          yyextra->parmName=yytext;
                                          startFontClass(yyscanner,"keywordflow");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 171:
YY_RULE_SETUP
#line 1567 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (isCastKeyword(yytext))
                                          {
                                            REJECT;
                                          }
                                          addParmType(yyscanner);
                                          yyextra->parmName=yytext;
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext,!yyextra->insideBody);
                                        }
	YY_BREAK
case 172:
YY_RULE_SETUP
#line 1576 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // probably a cast, not a function call
                                          yyextra->code->codify(yytext);
                                          yyextra->inForEachExpression = FALSE;
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 173:
YY_RULE_SETUP
#line 1581 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
                                          yyextra->parmType.resize(0);yyextra->parmName.resize(0);
                                        }
	YY_BREAK
case 174:
YY_RULE_SETUP
#line 1586 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->bracketCount>0)
                                          {
                                            yyextra->code->codify(yytext);
                                            yyextra->skipInlineInitContext=YY_START;
                                            yyextra->curlyCount=0;
                                            BEGIN(InlineInit);
                                          }
                                          else
                                          {
                                            REJECT;
                                          }
                                        }
	YY_BREAK
case 175:
YY_RULE_SETUP
#line 1599 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->curlyCount++;
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 176:
YY_RULE_SETUP
#line 1602 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          if (--yyextra->curlyCount<=0)
                                          {
                                            BEGIN(yyextra->skipInlineInitContext);
                                          }
                                        }
	YY_BREAK
case 177:
/* rule 177 can match eol */
YY_RULE_SETUP
#line 1609 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 178:
YY_RULE_SETUP
#line 1612 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 179:
YY_RULE_SETUP
#line 1615 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->parmType.resize(0);yyextra->parmName.resize(0);
                                          yyextra->code->codify(yytext);
                                          yyextra->bracketCount++;
                                          yyextra->theCallContext.pushScope(yyextra->name, yyextra->type);
                                          if (YY_START==FuncCall && !yyextra->insideBody)
                                          {
                                            yyextra->theVarContext.pushScope();
                                          }
                                        }
	YY_BREAK
case 180:
YY_RULE_SETUP
#line 1625 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // operator
                                          if (qstrcmp(yytext,"*") &&
                                              qstrcmp(yytext,"&") &&
                                              qstrcmp(yytext,"^") &&
                                              qstrcmp(yytext,"%")) // typically a pointer or reference
                                          {
                                            // not a * or &, or C++/CLI's ^ or %
                                            yyextra->parmType.resize(0);yyextra->parmName.resize(0);
                                          }
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 181:
YY_RULE_SETUP
#line 1636 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yytext[0]==')') // no a pointer cast
                                          {
                                            DBG_CTX((stderr,"addVariable(%s,%s)\n",qPrint(yyextra->parmType),qPrint(yyextra->parmName)));
                                            if (yyextra->parmType.isEmpty())
                                            {
                                              yyextra->parmType=yyextra->parmName;
                                              yyextra->parmName.resize(0);
                                            }
                                            addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
                                          }
                                          else
                                          {
                                            yyextra->parmType = yyextra->parmName;
                                            yyextra->parmName.resize(0);
                                            addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
                                          }
                                          yyextra->theCallContext.popScope(yyextra->name, yyextra->type);
                                          yyextra->inForEachExpression = FALSE;
                                          //yyextra->theCallContext.setClass(0); // commented out, otherwise a()->b() does not work for b().
                                          yyextra->code->codify(yytext);
                                          if (--yyextra->bracketCount<=0)
                                          {
                                            if (yyextra->name.isEmpty())
                                            {
                                              BEGIN( Body );
                                            }
                                            else
                                            {
                                              BEGIN( CallEnd );
                                            }
                                          }
                                        }
	YY_BREAK
case 182:
/* rule 182 can match eol */
YY_RULE_SETUP
#line 1669 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ codifyLines(yyscanner,yytext); }
	YY_BREAK
/*
<MemberCall2,FuncCall>")"[ \t\n]*[;:]   {
  */
case 183:
YY_RULE_SETUP
#line 1673 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          codifyLines(yyscanner,yytext);
                                          yyextra->bracketCount=0;
                                          if (*yytext==';') yyextra->searchingForBody=FALSE;
                                          if (!yyextra->type.isEmpty())
                                          {
                                            DBG_CTX((stderr,"add variable yyextra->type=%s yyextra->name=%s)\n",qPrint(yyextra->type),qPrint(yyextra->name)));
                                            addVariable(yyscanner,yyextra->type,yyextra->name);
                                          }
                                          yyextra->parmType.resize(0);yyextra->parmName.resize(0);
                                          yyextra->theCallContext.setScope(ScopedTypeVariant());
                                          if (*yytext==';' || yyextra->insideBody)
                                          {
                                            if (!yyextra->insideBody)
                                            {
                                              yyextra->theVarContext.popScope();
                                            }
                                            yyextra->name.resize(0);yyextra->type.resize(0);
                                            BEGIN( Body );
                                          }
                                          else
                                          {
                                            yyextra->bracketCount=0;
                                            BEGIN( SkipInits );
                                          }
                                        }
	YY_BREAK
case 184:
/* rule 184 can match eol */
YY_RULE_SETUP
#line 1699 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"keyword");
                                          codifyLines(yyscanner,yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 185:
/* rule 185 can match eol */
YY_RULE_SETUP
#line 1704 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->insideBody)
                                          {
                                            yyextra->theVarContext.pushScope();
                                          }
                                          addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
                                          //yyextra->theCallContext.popScope(yyextra->name, yyextra->type);
                                          yyextra->parmType.resize(0);yyextra->parmName.resize(0);
                                          int index = yyextra->name.findRev("::");
                                          DBG_CTX((stderr,"yyextra->name=%s\n",qPrint(yyextra->name)));
                                          if (index!=-1)
                                          {
                                            QCString scope = yyextra->name.left((uint)index);
                                            if (!yyextra->classScope.isEmpty()) scope.prepend((yyextra->classScope+"::"));
                                            const ClassDef *cd=yyextra->symbolResolver.resolveClass(Doxygen::globalScope,scope);
                                            if (cd)
                                            {
                                              setClassScope(yyscanner,cd->name());
                                              yyextra->scopeStack.push(SCOPEBLOCK);
                                              DBG_CTX((stderr,"** scope stack push SCOPEBLOCK\n"));
                                            }
                                            else
                                            {
                                              //setClassScope(yyscanner,yyextra->realScope);
                                              yyextra->scopeStack.push(INNERBLOCK);
                                              DBG_CTX((stderr,"** scope stack push INNERBLOCK\n"));
                                            }
                                          }
                                          else
                                          {
                                            DBG_CTX((stderr,"** scope stack push INNERBLOCK\n"));
                                            yyextra->scopeStack.push(INNERBLOCK);
                                          }
                                          yytext[yyleng-1]='\0';
                                          QCString cv(yytext);
                                          if (!cv.stripWhiteSpace().isEmpty())
                                          {
                                            startFontClass(yyscanner,"keyword");
                                            codifyLines(yyscanner,yytext);
                                            endFontClass(yyscanner);
                                          }
                                          else // just whitespace
                                          {
                                            codifyLines(yyscanner,yytext);
                                          }
                                          yyextra->code->codify("{");
                                          if (yyextra->searchingForBody)
                                          {
                                            yyextra->searchingForBody=FALSE;
                                            yyextra->insideBody=TRUE;
                                          }
                                          if (yyextra->insideBody) yyextra->bodyCurlyCount++;
                                          yyextra->type.resize(0); yyextra->name.resize(0);
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 186:
YY_RULE_SETUP
#line 1759 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // function-try-block
                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          yyextra->inFunctionTryBlock=TRUE;
                                        }
	YY_BREAK
case 187:
YY_RULE_SETUP
#line 1765 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // function-try-block
                                          startFontClass(yyscanner,"keyword");
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                        }
	YY_BREAK
case 188:
YY_RULE_SETUP
#line 1770 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->insideBody || !yyextra->parmType.isEmpty())
                                          {
                                            REJECT;
                                          }
                                          // could be K&R style definition
                                          addParmType(yyscanner);
                                          yyextra->parmName=yytext;
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext,!yyextra->insideBody);
                                          BEGIN(OldStyleArgs);
                                        }
	YY_BREAK
case 189:
YY_RULE_SETUP
#line 1781 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          addParmType(yyscanner);
                                          yyextra->parmName=yytext;
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext,!yyextra->insideBody);
                                        }
	YY_BREAK
case 190:
YY_RULE_SETUP
#line 1786 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
                                          if (*yytext==';') yyextra->parmType.resize(0);
                                          yyextra->parmName.resize(0);
                                        }
	YY_BREAK
case 191:
YY_RULE_SETUP
#line 1792 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"preprocessor");
                                          yyextra->lastSkipCppContext = Body;
                                          yyextra->code->codify(yytext);
                                          BEGIN( SkipCPP );
                                        }
	YY_BREAK
case 192:
YY_RULE_SETUP
#line 1798 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          unput(*yytext);
                                          if (!yyextra->insideBody)
                                          {
                                            yyextra->theVarContext.popScope();
                                          }
                                          yyextra->name.resize(0);yyextra->args.resize(0);
                                          yyextra->parmType.resize(0);yyextra->parmName.resize(0);
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 193:
YY_RULE_SETUP
#line 1808 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->type.resize(0); yyextra->name.resize(0);
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 194:
YY_RULE_SETUP
#line 1813 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          if (yyextra->searchingForBody)
                                          {
                                            yyextra->searchingForBody=FALSE;
                                            yyextra->insideBody=TRUE;
                                          }
                                          if (yyextra->insideBody) yyextra->bodyCurlyCount++;
                                          if (yyextra->name.find("::")!=-1)
                                          {
                                            DBG_CTX((stderr,"** scope stack push SCOPEBLOCK\n"));
                                            yyextra->scopeStack.push(SCOPEBLOCK);
                                            setClassScope(yyscanner,yyextra->realScope);
                                          }
                                          else
                                          {
                                            DBG_CTX((stderr,"** scope stack push INNERBLOCK\n"));
                                            yyextra->scopeStack.push(INNERBLOCK);
                                          }
                                          yyextra->type.resize(0); yyextra->name.resize(0);
                                          BEGIN( Body );
                                        }
	YY_BREAK
case 195:
YY_RULE_SETUP
#line 1835 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          QCString text(yytext);
                                          int bracketPos = text.find('{');
                                          int spacePos = text.find(' ');
                                          int len = spacePos==-1 ? bracketPos : spacePos;
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,text.left(len));
                                          yyextra->code->codify(QCString(yytext+len));
                                        }
	YY_BREAK
case 196:
YY_RULE_SETUP
#line 1843 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                        }
	YY_BREAK
case 197:
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1846 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          generateFunctionLink(yyscanner,*yyextra->code,yytext);
                                        }
	YY_BREAK
case 198:
YY_RULE_SETUP
#line 1849 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->name=yytext;
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          BEGIN( MemberCall2 );
                                        }
	YY_BREAK
case 199:
YY_RULE_SETUP
#line 1854 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          uint s=0;while (!isId(yytext[s])) s++;
                                          uint e=(uint)yyleng-1;while (e>1 && !isId(yytext[e])) e--;
                                          yyextra->name=((QCString)yytext).mid(s,e-s+1);
                                          BEGIN( MemberCall2 );
                                        }
	YY_BREAK
case 200:
/* rule 200 can match eol */
YY_RULE_SETUP
#line 1861 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (!yyextra->args.isEmpty())
                                            generateMemberLink(yyscanner,*yyextra->code,yyextra->args,yytext);
                                          else
                                            generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          yyextra->args.resize(0);
                                          BEGIN( FuncCall );
                                        }
	YY_BREAK
case 201:
/* rule 201 can match eol */
YY_RULE_SETUP
#line 1869 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          //yyextra->code->codify(yytext);
                                          yyextra->name=yytext;
                                          generateClassOrGlobalLink(yyscanner,*yyextra->code,yytext);
                                          BEGIN( MemberCall2 );
                                        }
	YY_BREAK
case 202:
YY_RULE_SETUP
#line 1875 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yytext[0]=='-') // -> could be overloaded
                                          {
                                            updateCallContextForSmartPointer(yyscanner);
                                          }
                                          yyextra->code->codify(yytext);
                                          yyextra->memCallContext = YY_START;
                                          BEGIN( MemberCall );
                                        }
	YY_BREAK
case 203:
YY_RULE_SETUP
#line 1884 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          BEGIN( yyextra->lastCContext ) ;
                                        }
	YY_BREAK
case 204:
YY_RULE_SETUP
#line 1889 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 205:
YY_RULE_SETUP
#line 1892 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 206:
YY_RULE_SETUP
#line 1895 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          endFontClass(yyscanner);
                                          if (yyextra->lastCContext==SkipCPP)
                                          {
                                            startFontClass(yyscanner,"preprocessor");
                                          }
                                          BEGIN( yyextra->lastCContext ) ;
                                        }
	YY_BREAK
case 207:
/* rule 207 can match eol */
YY_RULE_SETUP
#line 1904 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // line continuation
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 208:
YY_RULE_SETUP
#line 1907 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 1910 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"

	YY_BREAK
case 210:
/* rule 210 can match eol */
YY_RULE_SETUP
#line 1911 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          unput('\n');
                                          endFontClass(yyscanner);
                                          BEGIN( yyextra->lastCContext ) ;
                                        }
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 1916 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 212:
/* rule 212 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1919 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->yyLineNr+=QCString(yytext).contains('\n');
                                        }
	YY_BREAK
case 213:
/* rule 213 can match eol */
YY_RULE_SETUP
#line 1922 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (yyextra->lastSpecialCContext==SkipCxxComment)
                                          { // force end of C++ comment here
                                            yyextra->yyLineNr+=QCString(yytext).contains('\n');
                                            nextCodeLine(yyscanner);
                                            endFontClass(yyscanner);
                                            BEGIN( yyextra->lastCContext ) ;
                                          }
                                          else
                                          {
                                            yyextra->yyLineNr+=QCString(yytext).contains('\n');
                                            if (yytext[yyleng-1]=='\n')
                                            {
                                              yyextra->yyLineNr--;
                                              unput('\n');
                                            }
                                            else
                                            {
                                              nextCodeLine(yyscanner);
                                            }
                                            BEGIN(yyextra->lastSpecialCContext);
                                          }
                                        }
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 1945 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          BEGIN(yyextra->lastSpecialCContext);
                                        }
	YY_BREAK
case 215:
YY_RULE_SETUP
#line 1948 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"

	YY_BREAK
case 216:
YY_RULE_SETUP
#line 1949 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"

	YY_BREAK
case 217:
/* rule 217 can match eol */
YY_RULE_SETUP
#line 1950 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ yyextra->yyLineNr++; }
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 1951 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"

	YY_BREAK
case 219:
YY_RULE_SETUP
#line 1952 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->type.resize(0);
                                          yyextra->name.resize(0);
                                          BEGIN(yyextra->memCallContext);
                                        }
	YY_BREAK
case 220:
/* rule 220 can match eol */
YY_RULE_SETUP
#line 1958 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // remove special one-line comment
                                          if (YY_START==SkipCPP) REJECT;
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            yyextra->yyLineNr+=QCString(yytext).contains('\n');
                                            nextCodeLine(yyscanner);
                                          }
                                          else
                                          {
                                            startFontClass(yyscanner,"comment");
                                            codifyLines(yyscanner,yytext);
                                            endFontClass(yyscanner);
                                          }
                                          if (YY_START==SkipCxxComment)
                                          {
                                            endFontClass(yyscanner);
                                            BEGIN( yyextra->lastCContext ) ;
                                          }
                                        }
	YY_BREAK
case 221:
/* rule 221 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_bp + 1);
yyg->yy_c_buf_p = yy_cp = yy_bp + 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1977 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          endFontClass(yyscanner);
                                          BEGIN( yyextra->lastSkipCppContext ) ;
                                          unput('\n');
                                        }
	YY_BREAK
case 222:
/* rule 222 can match eol */
YY_RULE_SETUP
#line 1982 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // remove one-line group marker
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            yyextra->yyLineNr+=2;
                                            nextCodeLine(yyscanner);
                                          }
                                          else
                                          {
                                            startFontClass(yyscanner,"comment");
                                            codifyLines(yyscanner,yytext);
                                            endFontClass(yyscanner);
                                          }
                                          if (YY_START==SkipCxxComment)
                                          {
                                            endFontClass(yyscanner);
                                            BEGIN( yyextra->lastCContext ) ;
                                          }
                                        }
	YY_BREAK
case 223:
/* rule 223 can match eol */
YY_RULE_SETUP
#line 2000 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // remove one-line group marker
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            if (YY_START != RemoveSpecialCComment) yyextra->lastSpecialCContext = YY_START;
                                            yyextra->yyLineNr++;
                                            BEGIN(RemoveSpecialCComment);
                                          }
                                          else
                                          {
                                            // check is to prevent getting stuck in skipping C++ comments
                                            if (YY_START != SkipComment && YY_START != SkipCxxComment)
                                            {
                                              yyextra->lastCContext = YY_START ;
                                            }
                                            startFontClass(yyscanner,"comment");
                                            codifyLines(yyscanner,yytext);
                                            BEGIN(SkipComment);
                                          }
                                        }
	YY_BREAK
case 224:
/* rule 224 can match eol */
YY_RULE_SETUP
#line 2019 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // remove one-line group marker
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            yyextra->yyLineNr++;
                                            nextCodeLine(yyscanner);
                                          }
                                          else
                                          {
                                            startFontClass(yyscanner,"comment");
                                            codifyLines(yyscanner,yytext);
                                            endFontClass(yyscanner);
                                          }
                                        }
	YY_BREAK
case 225:
YY_RULE_SETUP
#line 2032 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // remove multi-line group marker
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            if (YY_START != RemoveSpecialCComment) yyextra->lastSpecialCContext = YY_START;
                                            BEGIN(RemoveSpecialCComment);
                                          }
                                          else
                                          {
                                            // check is to prevent getting stuck in skipping C++ comments
                                            if (YY_START != SkipComment && YY_START != SkipCxxComment)
                                            {
                                              yyextra->lastCContext = YY_START ;
                                            }
                                            startFontClass(yyscanner,"comment");
                                            yyextra->code->codify(yytext);
                                            BEGIN(SkipComment);
                                          }
                                        }
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 2050 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // remove special one-line comment
                                          if (!Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            startFontClass(yyscanner,"comment");
                                            codifyLines(yyscanner,yytext);
                                            endFontClass(yyscanner);
                                          }
                                        }
	YY_BREAK
case 227:
YY_RULE_SETUP
#line 2058 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // strip special one-line comment
                                          if (YY_START==SkipComment || YY_START==SkipString) REJECT;
                                          if (!Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            startFontClass(yyscanner,"comment");
                                            codifyLines(yyscanner,yytext);
                                            endFontClass(yyscanner);
                                          }
                                        }
	YY_BREAK
case 228:
/* rule 228 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2067 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            if (YY_START != RemoveSpecialCComment) yyextra->lastSpecialCContext = YY_START;
                                            yyextra->yyLineNr++;
                                            BEGIN(RemoveSpecialCComment);
                                          }
                                          else
                                          {
                                            // check is to prevent getting stuck in skipping C++ comments
                                            if (YY_START != SkipComment && YY_START != SkipCxxComment)
                                            {
                                              yyextra->lastCContext = YY_START ;
                                            }
                                            startFontClass(yyscanner,"comment");
                                            codifyLines(yyscanner,yytext);
                                            BEGIN(SkipComment);
                                          }
                                        }
	YY_BREAK
case 229:
/* rule 229 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2086 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // special C "banner" comment block at a new line
                                          if (Config_getBool(JAVADOC_BANNER) && Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            if (YY_START != RemoveSpecialCComment) yyextra->lastSpecialCContext = YY_START;
                                            BEGIN(RemoveSpecialCComment);
                                          }
                                          else
                                          {
                                            // check is to prevent getting stuck in skipping C++ comments
                                            if (YY_START != SkipComment && YY_START != SkipCxxComment)
                                            {
                                              yyextra->lastCContext = YY_START ;
                                            }
                                            startFontClass(yyscanner,"comment");
                                            yyextra->code->codify(yytext);
                                            BEGIN(SkipComment);
                                          }
                                        }
	YY_BREAK
case 230:
/* rule 230 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2104 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // special C comment block at a new line
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            if (YY_START != RemoveSpecialCComment) yyextra->lastSpecialCContext = YY_START;
                                            BEGIN(RemoveSpecialCComment);
                                          }
                                          else
                                          {
                                            // check is to prevent getting stuck in skipping C++ comments
                                            if (YY_START != SkipComment && YY_START != SkipCxxComment)
                                            {
                                              yyextra->lastCContext = YY_START ;
                                            }
                                            startFontClass(yyscanner,"comment");
                                            yyextra->code->codify(yytext);
                                            BEGIN(SkipComment);
                                          }
                                        }
	YY_BREAK
case 231:
/* rule 231 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_bp + 3);
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2122 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // special C comment block half way a line
                                          if (YY_START==SkipString) REJECT;
                                          if (Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            if (YY_START != RemoveSpecialCComment) yyextra->lastSpecialCContext = YY_START;
                                            BEGIN(RemoveSpecialCComment);
                                          }
                                          else
                                          {
                                            // check is to prevent getting stuck in skipping C++ comments
                                            if (YY_START != SkipComment && YY_START != SkipCxxComment)
                                            {
                                              yyextra->lastCContext = YY_START ;
                                            }
                                            startFontClass(yyscanner,"comment");
                                            yyextra->code->codify(yytext);
                                            BEGIN(SkipComment);
                                          }
                                        }
	YY_BREAK
case 232:
YY_RULE_SETUP
#line 2141 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          if (YY_START==SkipString) REJECT;
                                          if (!Config_getBool(STRIP_CODE_COMMENTS))
                                          {
                                            startFontClass(yyscanner,"comment");
                                            yyextra->code->codify(yytext);
                                            endFontClass(yyscanner);
                                          }
                                        }
	YY_BREAK
case 233:
YY_RULE_SETUP
#line 2150 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 234:
YY_RULE_SETUP
#line 2153 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"comment");
                                          yyextra->code->codify(yytext);
                                          // check is to prevent getting stuck in skipping C++ comments
                                          if (YY_START != SkipComment && YY_START != SkipCxxComment)
                                          {
                                            yyextra->lastCContext = YY_START ;
                                          }
                                          BEGIN( SkipComment ) ;
                                        }
	YY_BREAK
case 235:
YY_RULE_SETUP
#line 2163 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // C# verbatim string
                                          startFontClass(yyscanner,"stringliteral");
                                          yyextra->code->codify(yytext);
                                          yyextra->lastVerbStringContext=YY_START;
                                          BEGIN(SkipVerbString);
                                        }
	YY_BREAK
case 236:
YY_RULE_SETUP
#line 2169 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          startFontClass(yyscanner,"comment");
                                          yyextra->code->codify(yytext);
                                          yyextra->lastCContext = YY_START ;
                                          BEGIN( SkipCxxComment ) ;
                                        }
	YY_BREAK
case 237:
YY_RULE_SETUP
#line 2175 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->theCallContext.pushScope(yyextra->name, yyextra->type);
                                        }
	YY_BREAK
case 238:
YY_RULE_SETUP
#line 2179 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->code->codify(yytext);
                                          yyextra->theCallContext.popScope(yyextra->name, yyextra->type);
                                        }
	YY_BREAK
case 239:
/* rule 239 can match eol */
YY_RULE_SETUP
#line 2183 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->yyColNr++;
                                          codifyLines(yyscanner,yytext);
                                        }
	YY_BREAK
case 240:
YY_RULE_SETUP
#line 2187 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{ // keep utf8 characters together...
                                          yyextra->yyColNr+=yyleng;
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
case 241:
YY_RULE_SETUP
#line 2191 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
{
                                          yyextra->yyColNr++;
                                          yyextra->code->codify(yytext);
                                        }
	YY_BREAK
/*
<*>([ \t\n]*"\n"){2,}                   { // combine multiple blank lines
                                          //QCString sepLine=yytext;
                                          //yyextra->code->codify("\n\n");
                                          //yyextra->yyLineNr+=sepLine.contains('\n');
                                          //char sepLine[3]="\n\n";
                                          codifyLines(yyscanner,yytext);
                                        }
  */
case 242:
YY_RULE_SETUP
#line 2205 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"
ECHO;
	YY_BREAK
#line 16454 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/build/generated_src/code_intermediate.cpp"
			case YY_STATE_EOF(INITIAL):
			case YY_STATE_EOF(SkipString):
			case YY_STATE_EOF(SkipStringS):
			case YY_STATE_EOF(SkipVerbString):
			case YY_STATE_EOF(SkipCPP):
			case YY_STATE_EOF(SkipComment):
			case YY_STATE_EOF(SkipCxxComment):
			case YY_STATE_EOF(RemoveSpecialCComment):
			case YY_STATE_EOF(Body):
			case YY_STATE_EOF(FuncCall):
			case YY_STATE_EOF(MemberCall):
			case YY_STATE_EOF(MemberCall2):
			case YY_STATE_EOF(SkipInits):
			case YY_STATE_EOF(ClassName):
			case YY_STATE_EOF(AlignAs):
			case YY_STATE_EOF(AlignAsEnd):
			case YY_STATE_EOF(PackageName):
			case YY_STATE_EOF(ClassVar):
			case YY_STATE_EOF(CppCliTypeModifierFollowup):
			case YY_STATE_EOF(Bases):
			case YY_STATE_EOF(SkipSharp):
			case YY_STATE_EOF(ReadInclude):
			case YY_STATE_EOF(TemplDecl):
			case YY_STATE_EOF(TemplCast):
			case YY_STATE_EOF(CallEnd):
			case YY_STATE_EOF(ObjCMethod):
			case YY_STATE_EOF(ObjCParams):
			case YY_STATE_EOF(ObjCParamType):
			case YY_STATE_EOF(ObjCCall):
			case YY_STATE_EOF(ObjCMName):
			case YY_STATE_EOF(ObjCSkipStr):
			case YY_STATE_EOF(ObjCCallComment):
			case YY_STATE_EOF(OldStyleArgs):
			case YY_STATE_EOF(ConceptName):
			case YY_STATE_EOF(UsingName):
			case YY_STATE_EOF(RawString):
			case YY_STATE_EOF(InlineInit):
				yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * codeYYlex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yyg->yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( codeYYwrap(yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of codeYYlex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = yyg->yytext_ptr;
	int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			codeYYrestart(yyin  ,yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) codeYYrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,(yy_size_t) new_size ,yyscanner );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
{
	yy_state_type yy_current_state;
	char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_current_state = yyg->yy_start;
	yy_current_state += YY_AT_BOL();

	yyg->yy_state_ptr = yyg->yy_state_buf;
	*yyg->yy_state_ptr++ = yy_current_state;

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 4195 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		*yyg->yy_state_ptr++ = yy_current_state;
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
{
	int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */

	YY_CHAR yy_c = 1;
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 4195 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 4194);
	if ( ! yy_is_jam )
		*yyg->yy_state_ptr++ = yy_current_state;

	(void)yyg;
	return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT

    static void yyunput (int c, char * yy_bp , yyscan_t yyscanner)
{
	char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yy_cp = yyg->yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yyg->yy_hold_char;

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = yyg->yy_n_chars + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			yyg->yy_n_chars = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

	yyg->yytext_ptr = yy_bp;
	yyg->yy_hold_char = *yy_cp;
	yyg->yy_c_buf_p = yy_cp;
}

#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr);
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					codeYYrestart(yyin ,yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( codeYYwrap(yyscanner ) )
						return 0;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = (c == '\n');

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void codeYYrestart  (FILE * input_file , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        codeYYensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            codeYY_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
	}

	codeYY_init_buffer(YY_CURRENT_BUFFER,input_file ,yyscanner);
	codeYY_load_buffer_state(yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
    void codeYY_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		codeYYpop_buffer_state();
	 *		codeYYpush_buffer_state(new_buffer);
     */
	codeYYensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	codeYY_load_buffer_state(yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (codeYYwrap()) processing, but the only time this flag
	 * is looked at is after codeYYwrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

static void codeYY_load_buffer_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE codeYY_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) codeYYalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in codeYY_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) codeYYalloc((yy_size_t) (b->yy_buf_size + 2) ,yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in codeYY_create_buffer()" );

	b->yy_is_our_buffer = 1;

	codeYY_init_buffer(b,file ,yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with codeYY_create_buffer()
 * @param yyscanner The scanner object.
 */
    void codeYY_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		codeYYfree((void *) b->yy_ch_buf ,yyscanner );

	codeYYfree((void *) b ,yyscanner );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a codeYYrestart() or at EOF.
 */
    static void codeYY_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	codeYY_flush_buffer(b ,yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then codeYY_init_buffer was _probably_
     * called from codeYYrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
    void codeYY_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		codeYY_load_buffer_state(yyscanner );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
void codeYYpush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	codeYYensure_buffer_stack(yyscanner);

	/* This block is copied from codeYY_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from codeYY_switch_to_buffer. */
	codeYY_load_buffer_state(yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
void codeYYpop_buffer_state (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	codeYY_delete_buffer(YY_CURRENT_BUFFER ,yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		codeYY_load_buffer_state(yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void codeYYensure_buffer_stack (yyscan_t yyscanner)
{
	yy_size_t num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		yyg->yy_buffer_stack = (struct yy_buffer_state**)codeYYalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in codeYYensure_buffer_stack()" );

		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)codeYYrealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in codeYYensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE codeYY_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return NULL;

	b = (YY_BUFFER_STATE) codeYYalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in codeYY_scan_buffer()" );

	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = NULL;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	codeYY_switch_to_buffer(b ,yyscanner );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to codeYYlex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       codeYY_scan_bytes() instead.
 */
YY_BUFFER_STATE codeYY_scan_string (const char * yystr , yyscan_t yyscanner)
{
    
	return codeYY_scan_bytes(yystr,(int) strlen(yystr) ,yyscanner);
}

/** Setup the input buffer state to scan the given bytes. The next call to codeYYlex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE codeYY_scan_bytes  (const char * yybytes, int  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = (yy_size_t) (_yybytes_len + 2);
	buf = (char *) codeYYalloc(n ,yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in codeYY_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = codeYY_scan_buffer(buf,n ,yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in codeYY_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yynoreturn yy_fatal_error (const char* msg , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE codeYYget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int codeYYget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int codeYYget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *codeYYget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *codeYYget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
int codeYYget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *codeYYget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void codeYYset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/** Set the current line number.
 * @param _line_number line number
 * @param yyscanner The scanner object.
 */
void codeYYset_lineno (int  _line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "codeYYset_lineno called with no buffer" );
    
    yylineno = _line_number;
}

/** Set the current column.
 * @param _column_no column number
 * @param yyscanner The scanner object.
 */
void codeYYset_column (int  _column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "codeYYset_column called with no buffer" );
    
    yycolumn = _column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param _in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see codeYY_switch_to_buffer
 */
void codeYYset_in (FILE *  _in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = _in_str ;
}

void codeYYset_out (FILE *  _out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = _out_str ;
}

int codeYYget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void codeYYset_debug (int  _bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = _bdebug ;
}

/* Accessor methods for yylval and yylloc */

/* User-visible API */

/* codeYYlex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */
int codeYYlex_init(yyscan_t* ptr_yy_globals)
{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) codeYYalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* codeYYlex_init_extra has the same functionality as codeYYlex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to codeYYalloc in
 * the yyextra field.
 */
int codeYYlex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )
{
    struct yyguts_t dummy_yyguts;

    codeYYset_extra (yy_user_defined, &dummy_yyguts);

    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) codeYYalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in
    yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    codeYYset_extra (yy_user_defined, *ptr_yy_globals);

    return yy_init_globals ( *ptr_yy_globals );
}

static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from codeYYlex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = NULL;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = NULL;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

    yyg->yy_state_buf = 0;
    yyg->yy_state_ptr = 0;
    yyg->yy_full_match = 0;
    yyg->yy_lp = 0;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = NULL;
    yyout = NULL;
#endif

    /* For future reference: Set errno on error, since we are called by
     * codeYYlex_init()
     */
    return 0;
}

/* codeYYlex_destroy is for both reentrant and non-reentrant scanners. */
int codeYYlex_destroy  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		codeYY_delete_buffer(YY_CURRENT_BUFFER ,yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		codeYYpop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	codeYYfree(yyg->yy_buffer_stack ,yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        codeYYfree(yyg->yy_start_stack ,yyscanner );
        yyg->yy_start_stack = NULL;

    codeYYfree ( yyg->yy_state_buf , yyscanner);
    yyg->yy_state_buf  = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * codeYYlex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

    /* Destroy the main struct (reentrant only). */
    codeYYfree ( yyscanner , yyscanner );
    yyscanner = NULL;
    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s , yyscan_t yyscanner)
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *codeYYalloc (yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	return malloc(size);
}

void *codeYYrealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void codeYYfree (void * ptr , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	free( (char *) ptr );	/* see codeYYrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 2205 "C:/Users/rufob/Documents/GitHub/CollapsedFragment/docs/DoxyGeneration/doxygen-1.9.5/src/code.l"


/*@ ----------------------------------------------------------------------------
 */

static bool startsWithKeyword(const QCString &str,const QCString &kw)
{
  if (str.length()<kw.length()) return false;                // string too short to match
  return str==kw ||                                          // exact match
         (str.startsWith(kw) && !isId(str.at(kw.length()))); // match that is not a substring
}

static void addVariable(yyscan_t yyscanner,QCString type,QCString name)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"VariableContext::addVariable(%s,%s)\n",qPrint(type),qPrint(name)));
  QCString ltype = type.simplifyWhiteSpace();
  QCString lname = name.simplifyWhiteSpace();
  ltype.stripPrefix("struct ");
  ltype.stripPrefix("union ");
  if (ltype.isEmpty() || lname.isEmpty()) return;
  ltype = substitute(ltype,".","::");
  DBG_CTX((stderr,"** addVariable trying: type='%s' name='%s' currentDefinition=%s\n",
        qPrint(ltype),qPrint(lname),yyextra->currentDefinition?qPrint(yyextra->currentDefinition->name()):"<none>"));
  auto it = yyextra->codeClassMap.find(ltype.str());
  if (it!=yyextra->codeClassMap.end()) // look for class definitions inside the code block
  {
    DBG_CTX((stderr,"** addVariable type='%s' name='%s'\n",qPrint(ltype),qPrint(lname)));
    yyextra->theVarContext.addVariable(lname,std::move(it->second)); // add it to a list
  }
  else
  {
    auto findVariableType = [&yyscanner,&yyg,&ltype,&lname,&name](const Definition *d) -> const ClassDef *
    {
      const ClassDef *varDef = yyextra->symbolResolver.resolveClass(d,ltype);
      int i=0;
      if (varDef)
      {
        DBG_CTX((stderr,"** addVariable type='%s' name='%s'\n",qPrint(ltype),qPrint(lname)));
        yyextra->theVarContext.addVariable(lname,ScopedTypeVariant(varDef)); // add it to a list
      }
      else if ((i=ltype.find('<'))!=-1)
      {
        // probably a template class
        QCString typeName(ltype.left(i));
        addVariable(yyscanner,typeName,name);
      }
      return varDef;
    };
    const ClassDef *varDef = findVariableType(yyextra->currentDefinition);
    if (varDef==0) // also check via using directive
    {
      for (const auto &kv : yyextra->theUsingContext)
      {
        varDef = findVariableType(kv.second);
        if (varDef!=0) break;
      }
    }
    if (varDef==0)
    {
      if (!yyextra->theVarContext.atGlobalScope()) // for local variables add a dummy entry so the name
        // is hidden to avoid false links to global variables with the same name
        // TODO: make this work for namespaces as well!
      {
        DBG_CTX((stderr,"** addVariable: dummy context for '%s'\n",qPrint(lname)));
        yyextra->theVarContext.addVariable(lname,ScopedTypeVariant());
      }
      else
      {
        DBG_CTX((stderr,"** addVariable: not adding variable!\n"));
      }
    }
  }
}

//-------------------------------------------------------------------

/*! add class/namespace name s to the scope */
static void pushScope(yyscan_t yyscanner,const QCString &s)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  yyextra->classScopeLengthStack.push(int(yyextra->classScope.length()));
  if (yyextra->classScope.isEmpty() || leftScopeMatch(s,yyextra->classScope))
  {
    yyextra->classScope = s;
  }
  else
  {
    yyextra->classScope += "::";
    yyextra->classScope += s;
  }
  DBG_CTX((stderr,"pushScope(%s) result: '%s'\n",qPrint(s),qPrint(yyextra->classScope)));
}


/*! remove the top class/namespace name from the scope */
static void popScope(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (!yyextra->classScopeLengthStack.empty())
  {
    int length = yyextra->classScopeLengthStack.top();
    yyextra->classScopeLengthStack.pop();
    yyextra->classScope.truncate(length);
  }
  else
  {
    //err("Too many end of scopes found!\n");
  }
  DBG_CTX((stderr,"popScope() result: '%s'\n",qPrint(yyextra->classScope)));
}

static void setCurrentDoc(yyscan_t yyscanner,const QCString &anchor)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (Doxygen::searchIndex)
  {
    std::lock_guard<std::mutex> lock(g_searchIndexMutex);
    if (yyextra->searchCtx)
    {
      yyextra->code->setCurrentDoc(yyextra->searchCtx,yyextra->searchCtx->anchor(),FALSE);
    }
    else
    {
      yyextra->code->setCurrentDoc(yyextra->sourceFileDef,anchor,TRUE);
    }
  }
}

static void addToSearchIndex(yyscan_t yyscanner,const QCString &text)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (Doxygen::searchIndex)
  {
    std::lock_guard<std::mutex> lock(g_searchIndexMutex);
    yyextra->code->addWord(text,FALSE);
  }
}

static void addToSearchIndex(yyscan_t yyscanner,const char *text)
{
  addToSearchIndex(yyscanner,QCString(text));
}


static void setClassScope(yyscan_t yyscanner,const QCString &name)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"setClassScope(%s)\n",qPrint(name)));
  QCString n=name;
  n=n.simplifyWhiteSpace();
  int ts=n.find('<'); // start of template
  int te=n.findRev('>'); // end of template
  DBG_CTX((stderr,"ts=%d te=%d\n",ts,te));
  if (ts!=-1 && te!=-1 && te>ts)
  {
    // remove template from scope
    n=n.left(ts)+n.right(n.length()-te-1);
  }
  while (!yyextra->classScopeLengthStack.empty())
  {
    popScope(yyscanner);
  }
  yyextra->classScope.resize(0);
  int i;
  while ((i=n.find("::"))!=-1)
  {
    pushScope(yyscanner,n.left(i));
    n = n.mid(i+2);
  }
  pushScope(yyscanner,n);
  DBG_CTX((stderr,"--->New class scope '%s'\n",qPrint(yyextra->classScope)));
}

/*! start a new line of code, inserting a line number if yyextra->sourceFileDef
 * is TRUE. If a definition starts at the current line, then the line
 * number is linked to the documentation of that definition.
 */
static void startCodeLine(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  //if (yyextra->currentFontClass) { yyextra->code->endFontClass(yyscanner); }
  if (yyextra->sourceFileDef && yyextra->lineNumbers)
  {
    //QCString lineNumber,lineAnchor;
    //lineNumber.sprintf("%05d",yyextra->yyLineNr);
    //lineAnchor.sprintf("l%05d",yyextra->yyLineNr);

    const Definition *d = yyextra->sourceFileDef->getSourceDefinition(yyextra->yyLineNr);
    DBG_CTX((stderr,"%s:startCodeLine(%d)=%p\n",qPrint(yyextra->sourceFileDef->name()),yyextra->yyLineNr,(void*)d));
    if (!yyextra->includeCodeFragment && d)
    {
      yyextra->currentDefinition = d;
      yyextra->currentMemberDef = yyextra->sourceFileDef->getSourceMember(yyextra->yyLineNr);
      yyextra->insideBody = FALSE;
      yyextra->searchingForBody = TRUE;
      yyextra->realScope = d->name();
      //yyextra->classScope = "";
      yyextra->type.resize(0);
      yyextra->name.resize(0);
      yyextra->args.resize(0);
      yyextra->parmType.resize(0);
      yyextra->parmName.resize(0);
      DBG_CTX((stderr,"Real scope: '%s'\n",qPrint(yyextra->realScope)));
      yyextra->bodyCurlyCount = 0;
      QCString lineAnchor;
      lineAnchor.sprintf("l%05d",yyextra->yyLineNr);
      if (yyextra->currentMemberDef)
      {
        yyextra->code->writeLineNumber(yyextra->currentMemberDef->getReference(),
                                yyextra->currentMemberDef->getOutputFileBase(),
                                yyextra->currentMemberDef->anchor(),
                                yyextra->yyLineNr,!yyextra->includeCodeFragment);
        setCurrentDoc(yyscanner,lineAnchor);
      }
      else if (d->isLinkableInProject())
      {
        yyextra->code->writeLineNumber(d->getReference(),
                                d->getOutputFileBase(),
                                QCString(),yyextra->yyLineNr,!yyextra->includeCodeFragment);
        setCurrentDoc(yyscanner,lineAnchor);
      }
    }
    else
    {
      yyextra->code->writeLineNumber(QCString(),QCString(),QCString(),yyextra->yyLineNr,
                                     !yyextra->includeCodeFragment);
    }
  }
  DBG_CTX((stderr,"startCodeLine(%d)\n",yyextra->yyLineNr));
  yyextra->code->startCodeLine(yyextra->sourceFileDef && yyextra->lineNumbers);
  yyextra->insideCodeLine = true;
  if (yyextra->currentFontClass)
  {
    yyextra->code->startFontClass(QCString(yyextra->currentFontClass));
  }
}



static void endCodeLine(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"endCodeLine(%d)\n",yyextra->yyLineNr));
  endFontClass(yyscanner);
  yyextra->code->endCodeLine();
  yyextra->insideCodeLine = false;
}

static void nextCodeLine(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  const char * fc = yyextra->currentFontClass;
  if (yyextra->insideCodeLine)
  {
    endCodeLine(yyscanner);
  }
  if (yyextra->yyLineNr<yyextra->inputLines)
  {
    yyextra->currentFontClass = fc;
    startCodeLine(yyscanner);
  }
}

/*! write a code fragment 'text' that may span multiple lines, inserting
 * line numbers for each line.
 */
static void codifyLines(yyscan_t yyscanner,const QCString &text)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"codifyLines(%d,\"%s\")\n",yyextra->yyLineNr,qPrint(text)));
  if (text.isEmpty()) return;
  const char *p=text.data(),*sp=p;
  char c;
  bool done=FALSE;
  while (!done)
  {
    sp=p;
    while ((c=*p++) && c!='\n') { yyextra->yyColNr++; }
    if (c=='\n')
    {
      yyextra->yyLineNr++;
      yyextra->yyColNr=1;
      int l = (int)(p-sp-1);
      char *tmp = (char*)malloc(l+1);
      memcpy(tmp,sp,l);
      tmp[l]='\0';
      yyextra->code->codify(QCString(tmp));
      free(tmp);
      nextCodeLine(yyscanner);
    }
    else
    {
      yyextra->code->codify(QCString(sp));
      done=TRUE;
    }
  }
}

static void codifyLines(yyscan_t yyscanner,const char *text)
{
  codifyLines(yyscanner,QCString(text));
}

static void incrementFlowKeyWordCount(yyscan_t yyscanner)
{
  std::lock_guard<std::mutex> lock(g_countFlowKeywordsMutex);
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (yyextra->currentMemberDef && yyextra->currentMemberDef->isFunction())
  {
    MemberDefMutable *md = toMemberDefMutable(yyextra->currentMemberDef);
    if (md)
    {
      md->incrementFlowKeyWordCount();
    }
  }
}

/*! writes a link to a fragment \a text that may span multiple lines, inserting
 * line numbers for each line. If \a text contains newlines, the link will be
 * split into multiple links with the same destination, one for each line.
 */
static void writeMultiLineCodeLink(yyscan_t yyscanner,CodeOutputInterface &ol,
                                   const Definition *d,
                                   const QCString &text)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  bool sourceTooltips = Config_getBool(SOURCE_TOOLTIPS);
  yyextra->tooltipManager.addTooltip(ol,d);
  QCString ref  = d->getReference();
  QCString file = d->getOutputFileBase();
  QCString anchor = d->anchor();
  QCString tooltip;
  if (!sourceTooltips) // fall back to simple "title" tooltips
  {
    tooltip = d->briefDescriptionAsTooltip();
  }
  bool done=FALSE;
  const char *p=text.data();
  while (!done)
  {
    const char *sp=p;
    char c;
    while ((c=*p++) && c!='\n') { }
    if (c=='\n')
    {
      yyextra->yyLineNr++;
      DBG_CTX((stderr,"writeCodeLink(%s,%s,%s,%s)\n",qPrint(ref),qPrint(file),qPrint(anchor),qPrint(QCString(sp,p-sp-1))));
      ol.writeCodeLink(d->codeSymbolType(),ref,file,anchor,QCString(sp,p-sp-1),tooltip);
      nextCodeLine(yyscanner);
    }
    else
    {
      DBG_CTX((stderr,"writeCodeLink(%s,%s,%s,%s)\n",qPrint(ref),qPrint(file),qPrint(anchor),sp));
      ol.writeCodeLink(d->codeSymbolType(),ref,file,anchor,QCString(sp),tooltip);
      done=TRUE;
    }
  }
}

static void addType(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (yyextra->name=="const") { yyextra->name.resize(0); return; }
  if (!yyextra->type.isEmpty()) yyextra->type += ' ' ;
  yyextra->type += yyextra->name ;
  yyextra->name.resize(0) ;
  if (!yyextra->type.isEmpty()) yyextra->type += ' ' ;
  yyextra->type += yyextra->args ;
  yyextra->args.resize(0) ;
}

static void addParmType(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (yyextra->parmName=="const") { yyextra->parmName.resize(0); return; }
  if (!yyextra->parmType.isEmpty()) yyextra->parmType += ' ' ;
  yyextra->parmType += yyextra->parmName ;
  yyextra->parmName.resize(0) ;
}

static void addUsingDirective(yyscan_t yyscanner,const QCString &name)
{
  //printf("AddUsingDirective(%s)\n",qPrint(name));
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (yyextra->sourceFileDef && !name.isEmpty())
  {
    const NamespaceDef *nd = Doxygen::namespaceLinkedMap->find(name);
    if (nd)
    {
      yyextra->theUsingContext.insert(std::make_pair(name.str(),nd));
    }
  }
}

static void setParameterList(yyscan_t yyscanner,const MemberDef *md)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  yyextra->classScope = md->getClassDef() ? md->getClassDef()->name() : QCString();
  for (const Argument &a : md->argumentList())
  {
    yyextra->parmName = a.name;
    yyextra->parmType = a.type;
    int i = yyextra->parmType.find('*');
    if (i!=-1) yyextra->parmType = yyextra->parmType.left(i);
    i = yyextra->parmType.find('&');
    if (i!=-1) yyextra->parmType = yyextra->parmType.left(i);
    yyextra->parmType.stripPrefix("const ");
    yyextra->parmType=yyextra->parmType.stripWhiteSpace();
    addVariable(yyscanner,yyextra->parmType,yyextra->parmName);
  }
}

static const ClassDef *stripClassName(yyscan_t yyscanner,const QCString &s,const Definition *d)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  int pos=0;
  QCString type = s;
  QCString className;
  QCString templSpec;
  while (extractClassNameFromType(type,pos,className,templSpec)!=-1)
  {
    QCString clName=className+templSpec;
    const ClassDef *cd=0;
    if (!yyextra->classScope.isEmpty())
    {
      cd=yyextra->symbolResolver.resolveClass(d,yyextra->classScope+"::"+clName);
    }
    if (cd==0)
    {
      cd=yyextra->symbolResolver.resolveClass(d,clName);
    }
    DBG_CTX((stderr,"stripClass trying '%s' = %p\n",qPrint(clName),(void*)cd));
    if (cd)
    {
      return cd;
    }
  }

  return 0;
}

static const MemberDef *setCallContextForVar(yyscan_t yyscanner,const QCString &name)
{
  if (name.isEmpty()) return 0;
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"setCallContextForVar(%s) yyextra->classScope=%s\n",qPrint(name),qPrint(yyextra->classScope)));

  int scopeEnd = name.findRev("::");
  if (scopeEnd!=-1) // name with explicit scope
  {
    QCString scope   = name.left(scopeEnd);
    QCString locName = name.right(name.length()-scopeEnd-2);
    DBG_CTX((stderr,"explicit scope: name=%s scope=%s\n",qPrint(locName),qPrint(scope)));
    const ClassDef *mcd = getClass(scope);
    if (mcd && !locName.isEmpty())
    {
      const MemberDef *md=mcd->getMemberByName(locName);
      if (md)
      {
        DBG_CTX((stderr,"name=%s scope=%s\n",qPrint(locName),qPrint(scope)));
        yyextra->theCallContext.setScope(ScopedTypeVariant(stripClassName(yyscanner,md->typeString(),md->getOuterScope())));
        return md;
      }
    }
    else // check namespace as well
    {
      const NamespaceDef *mnd = getResolvedNamespace(scope);
      if (mnd && !locName.isEmpty())
      {
        const MemberDef *md=mnd->getMemberByName(locName);
        if (md)
        {
          DBG_CTX((stderr,"name=%s scope=%s\n",qPrint(locName),qPrint(scope)));
          yyextra->theCallContext.setScope(ScopedTypeVariant(stripClassName(yyscanner,md->typeString(),md->getOuterScope())));
          return md;
        }
      }
    }
  }

  const MemberName *mn;
  const ScopedTypeVariant *mcv = yyextra->theVarContext.findVariable(name);
  if (mcv)
  {
    DBG_CTX((stderr,"local variable?\n"));
    if (mcv->type()!=ScopedTypeVariant::Dummy) // locally found variable
    {
      DBG_CTX((stderr,"local var '%s' mcd=%s\n",qPrint(name),qPrint(mcv->name())));
      yyextra->theCallContext.setScope(*mcv);
    }
  }
  else
  {
    DBG_CTX((stderr,"class member? scope=%s\n",qPrint(yyextra->classScope)));
    // look for a class member
    const ClassDef *mcd = getClass(yyextra->classScope);
    if (mcd)
    {
      DBG_CTX((stderr,"Inside class %s\n",qPrint(mcd->name())));
      const MemberDef *md=mcd->getMemberByName(name);
      if (md)
      {
        DBG_CTX((stderr,"Found member %s\n",qPrint(md->name())));
        if (yyextra->scopeStack.empty() || yyextra->scopeStack.top()!=CLASSBLOCK)
        {
          DBG_CTX((stderr,"class member '%s' mcd=%s\n",qPrint(name),qPrint(mcd->name())));
          yyextra->theCallContext.setScope(ScopedTypeVariant(stripClassName(yyscanner,md->typeString(),md->getOuterScope())));
        }
        return md;
      }
    }
  }

  // look for a global member
  if ((mn=Doxygen::functionNameLinkedMap->find(name)))
  {
    DBG_CTX((stderr,"global var '%s'\n",qPrint(name)));
    if (mn->size()==1) // global defined only once
    {
      const std::unique_ptr<MemberDef> &md=mn->front();
      if (!md->isStatic() || md->getBodyDef()==yyextra->sourceFileDef)
      {
        yyextra->theCallContext.setScope(ScopedTypeVariant(stripClassName(yyscanner,md->typeString(),md->getOuterScope())));
        return md.get();
      }
      return 0;
    }
    else if (mn->size()>1) // global defined more than once
    {
      for (const auto &md : *mn)
      {
        //printf("mn=%p md=%p md->getBodyDef()=%p yyextra->sourceFileDef=%p\n",
        //    mn,md,
        //    md->getBodyDef(),yyextra->sourceFileDef);

        // in case there are multiple members we could link to, we
        // only link to members if defined in the same file or
        // defined as external.
        if (!md->isStatic() || md->getBodyDef()==yyextra->sourceFileDef)
        {
          yyextra->theCallContext.setScope(ScopedTypeVariant(stripClassName(yyscanner,md->typeString(),md->getOuterScope())));
          DBG_CTX((stderr,"returning member %s in source file %s\n",qPrint(md->name()),qPrint(yyextra->sourceFileDef->name())));
          return md.get();
        }
      }
      return 0;
    }
  }
  return 0;
}

static void updateCallContextForSmartPointer(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  const Definition *d = yyextra->theCallContext.getScope().globalDef();
  //printf("updateCallContextForSmartPointer() cd=%s\n",cd ? qPrint(d->name()) : "<none>");
  const MemberDef *md;
  if (d && d->definitionType()==Definition::TypeClass && (md=(toClassDef(d))->isSmartPointer()))
  {
    const ClassDef *ncd = stripClassName(yyscanner,md->typeString(),md->getOuterScope());
    if (ncd)
    {
      yyextra->theCallContext.setScope(ScopedTypeVariant(ncd));
      //printf("Found smart pointer call %s->%s!\n",qPrint(cd->name()),qPrint(ncd->name()));
    }
  }
}

static bool getLinkInScope(yyscan_t yyscanner,
                           const QCString &c,  // scope
                           const QCString &m,  // member
                           const QCString &memberText, // exact text
                           CodeOutputInterface &ol,
                           const QCString &text,
                           bool varOnly
                          )
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  const MemberDef    *md = 0;
  const ClassDef     *cd = 0;
  const FileDef      *fd = 0;
  const NamespaceDef *nd = 0;
  const GroupDef     *gd = 0;
  DBG_CTX((stderr,"getLinkInScope: trying '%s'::'%s' varOnly=%d\n",qPrint(c),qPrint(m),varOnly));
  if (getDefs(c,m,"()",md,cd,fd,nd,gd,FALSE,yyextra->sourceFileDef,FALSE) &&
      (!varOnly || md->isVariable()))
  {
    if (md->isLinkable())
    {
      DBG_CTX((stderr,"found it %s!\n",qPrint(md->qualifiedName())));
      if (yyextra->exampleBlock)
      {
        std::lock_guard<std::mutex> lock(g_addExampleMutex);
        QCString anchor;
        anchor.sprintf("a%d",yyextra->anchorCount);
        DBG_CTX((stderr,"addExampleFile(%s,%s,%s)\n",qPrint(anchor),qPrint(yyextra->exampleName),
                                                     qPrint(yyextra->exampleFile)));
        MemberDefMutable *mdm = toMemberDefMutable(md);
        if (mdm && mdm->addExample(anchor,yyextra->exampleName,yyextra->exampleFile))
        {
          ol.writeCodeAnchor(anchor);
          yyextra->anchorCount++;
        }
      }

      const Definition *d = md->getOuterScope()==Doxygen::globalScope ?
                            md->resolveAlias()->getFileDef() : md->getOuterScope();
      if (md->resolveAlias()->getGroupDef()) d = md->resolveAlias()->getGroupDef();
      if (d && d->isLinkable())
      {
        yyextra->theCallContext.setScope(ScopedTypeVariant(stripClassName(yyscanner,md->typeString(),md->getOuterScope())));
        DBG_CTX((stderr,"yyextra->currentDefinition=%p yyextra->currentMemberDef=%p yyextra->insideBody=%d\n",
                 (void*)yyextra->currentDefinition,(void*)yyextra->currentMemberDef,yyextra->insideBody));

        if (yyextra->currentDefinition && yyextra->currentMemberDef &&
            yyextra->insideBody && yyextra->collectXRefs)
        {
          std::lock_guard<std::mutex> lock(g_docCrossReferenceMutex);
          addDocCrossReference(toMemberDefMutable(yyextra->currentMemberDef),toMemberDefMutable(md));
        }
        DBG_CTX((stderr,"d->getReference()='%s' d->getOutputBase()='%s' name='%s' member name='%s'\n",qPrint(d->getReference()),qPrint(d->getOutputFileBase()),qPrint(d->name()),qPrint(md->name())));

        writeMultiLineCodeLink(yyscanner,ol,md, !text.isEmpty() ? text : memberText);
        addToSearchIndex(yyscanner,!text.isEmpty() ? text : memberText);
        return TRUE;
      }
    }
  }
  return FALSE;
}

static bool getLink(yyscan_t yyscanner,
                    const QCString &className,
                    const QCString &memberName,
                    CodeOutputInterface &ol,
                    const QCString &text,
                    bool varOnly)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"getLink(%s,%s) yyextra->curClassName=%s\n",
        qPrint(className),qPrint(memberName),qPrint(yyextra->curClassName)));
  QCString m=removeRedundantWhiteSpace(memberName);
  QCString c=className;
  if (!getLinkInScope(yyscanner,c,m,memberName,ol,text,varOnly))
  {
    if (!yyextra->curClassName.isEmpty())
    {
      if (!c.isEmpty()) c.prepend("::");
      c.prepend(yyextra->curClassName);
      return getLinkInScope(yyscanner,c,m,memberName,ol,text,varOnly);
    }
    return FALSE;
  }
  return TRUE;
}

static void generateClassOrGlobalLink(yyscan_t yyscanner,
                                      CodeOutputInterface &ol,
                                      const QCString &clName,
                                      bool typeOnly,
                                      bool varOnly)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  QCString className=clName;
  if (!className.isEmpty() && className[0]=='~') // correct for matching negated values i.s.o. destructors.
  {
    className=className.mid(1);
  }
  if (className.isEmpty())
  {
    yyextra->code->codify("~");
    return;
  }
  if (yyextra->insideProtocolList) // for Obj-C
  {
    className+="-p";
  }
  if (yyextra->lang==SrcLangExt_PHP)
  {
    className = substitute(className,"\\","::"); // for PHP namespaces
  }
  else if (yyextra->lang==SrcLangExt_CSharp || yyextra->lang==SrcLangExt_Java)
  {
    className = substitute(className,".","::"); // for C#/Java namespaces
  }
  const ScopedTypeVariant *lcd=0;
  const ClassDef *cd=0;
  const MemberDef *md=0;
  bool isLocal=FALSE;

  DBG_CTX((stderr,"generateClassOrGlobalLink(className=%s)\n",qPrint(className)));
  if (!yyextra->isPrefixedWithThis || (lcd=yyextra->theVarContext.findVariable(className))==0) // not a local variable
  {
    int i=className.find('<');
    QCString bareName = className;
    if (i!=-1) bareName = bareName.left(i);

    auto checkForClass = [&yyg,&bareName,&className](const Definition *d,
                                                     const ClassDef *&cd_,const MemberDef *&md_)
    {
      cd_ = yyextra->symbolResolver.resolveClass(d,className);
      md_ = yyextra->symbolResolver.getTypedef();
      DBG_CTX((stderr,"non-local variable name=%s cd=%s md=%s!\n",
            qPrint(className),cd_?qPrint(cd_->name()):"<none>",
            md_?qPrint(md_->name()):"<none>"));
      if (cd_==0 && md_==0 && !bareName.isEmpty())
      {
        DBG_CTX((stderr,"bareName=%s\n",qPrint(bareName)));
        if (bareName!=className)
        {
          cd_ = yyextra->symbolResolver.resolveClass(d,bareName); // try unspecialized version
          md_ = yyextra->symbolResolver.getTypedef();
        }
      }
    };
    const Definition *d = yyextra->currentDefinition;
    DBG_CTX((stderr,"d=%s yyextra->sourceFileDef=%s\n",d?qPrint(d->name()):"<none>",yyextra->sourceFileDef?qPrint(yyextra->sourceFileDef->name()):"<none>"));
    checkForClass(d,cd,md);
    if (cd==0 && md==0 && d && d->definitionType()==Definition::TypeClass)
    {
      const FileDef *fd = toClassDef(d)->getFileDef();
      if (fd)
      {
        // also check for using directive in the file that defines this class
        for (const auto &nd : fd->getUsedNamespaces())
        {
          checkForClass(nd,cd,md);
          if (cd!=0 || md!=0) break;
        }
      }
    }
    if (cd==0 && md==0)
    {
      // also check via using directive
      for (const auto &kv : yyextra->theUsingContext)
      {
        checkForClass(kv.second,cd,md);
        if (cd!=0 || md!=0) break;
      }
    }

    const NamespaceDef *nd = getResolvedNamespace(className);
    if (nd && nd->isLinkable())
    {
      yyextra->theCallContext.setScope(ScopedTypeVariant(nd));
      addToSearchIndex(yyscanner,className);
      writeMultiLineCodeLink(yyscanner,*yyextra->code,nd,clName);
      return;
    }
    const ConceptDef *conceptDef = getResolvedConcept(d,bareName);
    if (conceptDef && conceptDef->isLinkable())
    {
      yyextra->theCallContext.setScope(ScopedTypeVariant(conceptDef));
      addToSearchIndex(yyscanner,className);
      writeMultiLineCodeLink(yyscanner,*yyextra->code,conceptDef,clName);
      return;
    }
    DBG_CTX((stderr,"md=%s\n",md?qPrint(md->name()):"<none>"));
    DBG_CTX((stderr,"is found as a type cd=%s nd=%s\n",
          cd?qPrint(cd->name()):"<null>",
          nd?qPrint(nd->name()):"<null>"));
    if (cd==0 && md==0) // also see if it is variable or enum or enum value
    {
      if (getLink(yyscanner,yyextra->classScope,clName,ol,clName,varOnly))
      {
        return;
      }
    }
  }
  else
  {
    DBG_CTX((stderr,"local variable!\n"));
    if (lcd->type()!=ScopedTypeVariant::Dummy)
    {
      DBG_CTX((stderr,"non-dummy context lcd=%s!\n",qPrint(lcd->name())));
      yyextra->theCallContext.setScope(*lcd);

      // to following is needed for links to a global variable, but is
      // no good for a link to a local variable that is also a global symbol.

      //if (getLink(yyscanner,yyextra->classScope,clName,ol,clName))
      //{
        //return;
      //}
    }
    isLocal=TRUE;
    DBG_CTX((stderr,"is a local variable cd=%p!\n",(void*)cd));
  }
  yyextra->isPrefixedWithThis = FALSE; // discard the "this" prefix for the next calls

  if (cd && cd->isLinkable()) // is it a linkable class
  {
    DBG_CTX((stderr,"is linkable class %s\n",qPrint(clName)));
    if (yyextra->exampleBlock)
    {
      std::lock_guard<std::mutex> lock(g_addExampleMutex);
      QCString anchor;
      anchor.sprintf("_a%d",yyextra->anchorCount);
      DBG_CTX((stderr,"addExampleClass(%s,%s,%s)\n",qPrint(anchor),qPrint(yyextra->exampleName),
                                                    qPrint(yyextra->exampleFile)));
      ClassDefMutable *cdm = toClassDefMutable(const_cast<ClassDef*>(cd));
      if (cdm && cdm->addExample(anchor,yyextra->exampleName,yyextra->exampleFile))
      {
        ol.writeCodeAnchor(anchor);
        yyextra->anchorCount++;
      }
    }
    writeMultiLineCodeLink(yyscanner,ol,cd,clName);
    addToSearchIndex(yyscanner,className);
    yyextra->theCallContext.setScope(ScopedTypeVariant(cd));
    if (md)
    {
      const Definition *d = md->getOuterScope()==Doxygen::globalScope ?
                      md->getFileDef() : md->getOuterScope();
      if (md->getGroupDef()) d = md->getGroupDef();
      if (d && d->isLinkable() && md->isLinkable() &&
          yyextra->currentMemberDef && yyextra->collectXRefs)
      {
        std::lock_guard<std::mutex> lock(g_docCrossReferenceMutex);
        addDocCrossReference(toMemberDefMutable(yyextra->currentMemberDef),toMemberDefMutable(md));
      }
    }
  }
  else // not a class, maybe a global member
  {
    DBG_CTX((stderr,"class %s not linkable! cd=%p md=%p typeOnly=%d\n",qPrint(clName),(void*)cd,(void*)md,typeOnly));
    if (!isLocal && (md!=0 || (cd==0 && !typeOnly))) // not a class, see if it is a global enum/variable/typedef.
    {
      if (md==0) // not found as a typedef
      {
        md = setCallContextForVar(yyscanner,clName);
        DBG_CTX((stderr,"setCallContextForVar(%s) md=%p yyextra->currentDefinition=%s\n",qPrint(clName),(void*)md,yyextra->currentDefinition ? qPrint(yyextra->currentDefinition->name()) : "<none>"));
        if (md && yyextra->currentDefinition)
        {
          DBG_CTX((stderr,"%s accessible from %s? %d md->getOuterScope=%s\n",
              qPrint(md->name()),qPrint(yyextra->currentDefinition->name()),
              yyextra->symbolResolver.isAccessibleFrom(yyextra->currentDefinition,md),
              qPrint(md->getOuterScope()->name())));
        }

        if (md && yyextra->currentDefinition &&
            yyextra->symbolResolver.isAccessibleFrom(yyextra->currentDefinition,md)==-1)
        {
          md=0; // variable not accessible
        }
      }
      if (md && (!varOnly || md->isVariable()))
      {
        DBG_CTX((stderr,"is a global md=%p yyextra->currentDefinition=%s linkable=%d\n",(void*)md,yyextra->currentDefinition?qPrint(yyextra->currentDefinition->name()):"<none>",md->isLinkable()));
        if (md->isLinkable())
        {
          writeMultiLineCodeLink(yyscanner,ol,md,clName);
          addToSearchIndex(yyscanner,clName);
          if (yyextra->currentMemberDef && yyextra->collectXRefs)
          {
            std::lock_guard<std::mutex> lock(g_docCrossReferenceMutex);
            addDocCrossReference(toMemberDefMutable(yyextra->currentMemberDef),toMemberDefMutable(md));
          }
          return;
        }
      }
    }

    // nothing found, just write out the word
    DBG_CTX((stderr,"not found!\n"));
    codifyLines(yyscanner,clName);
    addToSearchIndex(yyscanner,clName);
  }
}

static void generateClassOrGlobalLink(yyscan_t yyscanner,CodeOutputInterface &ol,const char *clName,
                                      bool typeOnly,bool varOnly)
{
  generateClassOrGlobalLink(yyscanner,ol,QCString(clName),typeOnly,varOnly);
}

static bool generateClassMemberLink(yyscan_t yyscanner,
                                    CodeOutputInterface &ol,
                                    const MemberDef *xmd,
                                    const QCString &memName)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  // extract class definition of the return type in order to resolve
  // a->b()->c() like call chains

  DBG_CTX((stderr,"type='%s' args='%s' class=%s\n",
           qPrint(xmd->typeString()),qPrint(xmd->argsString()),
           qPrint(xmd->getClassDef()->name())));

  if (yyextra->exampleBlock)
  {
    std::lock_guard<std::mutex> lock(g_addExampleMutex);
    QCString anchor;
    anchor.sprintf("a%d",yyextra->anchorCount);
    DBG_CTX((stderr,"addExampleFile(%s,%s,%s)\n",qPrint(anchor),qPrint(yyextra->exampleName),
                                                 qPrint(yyextra->exampleFile)));
    MemberDefMutable *mdm = toMemberDefMutable(xmd);
    if (mdm && mdm->addExample(anchor,yyextra->exampleName,yyextra->exampleFile))
    {
      ol.writeCodeAnchor(anchor);
      yyextra->anchorCount++;
    }
  }

  const ClassDef *typeClass = stripClassName(yyscanner,removeAnonymousScopes(xmd->typeString()),xmd->getOuterScope());
  DBG_CTX((stderr,"%s -> typeName=%p\n",qPrint(xmd->typeString()),(void*)typeClass));
  yyextra->theCallContext.setScope(ScopedTypeVariant(typeClass));

  const Definition *xd = xmd->getOuterScope()==Doxygen::globalScope ?
                   xmd->getFileDef() : xmd->getOuterScope();
  if (xmd->getGroupDef()) xd = xmd->getGroupDef();
  if (xd && xd->isLinkable())
  {

    DBG_CTX((stderr,"yyextra->currentDefinition=%p yyextra->currentMemberDef=%p xmd=%p yyextra->insideBody=%d\n",
          (void*)yyextra->currentDefinition,(void*)yyextra->currentMemberDef,(void*)xmd,yyextra->insideBody));

    if (xmd->templateMaster()) xmd = xmd->templateMaster();

    if (xmd->isLinkable())
    {
      // add usage reference
      if (yyextra->currentDefinition && yyextra->currentMemberDef &&
          yyextra->insideBody && yyextra->collectXRefs)
      {
        std::lock_guard<std::mutex> lock(g_docCrossReferenceMutex);
        addDocCrossReference(toMemberDefMutable(yyextra->currentMemberDef),toMemberDefMutable(xmd));
      }

      // write the actual link
      writeMultiLineCodeLink(yyscanner,ol,xmd,memName);
      addToSearchIndex(yyscanner,memName);
      return TRUE;
    }
  }

  return FALSE;
}

static bool generateClassMemberLink(yyscan_t yyscanner,
                                    CodeOutputInterface &ol,
                                    const Definition *def,
                                    const QCString &memName)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (def && def->definitionType()==Definition::TypeClass)
  {
    const ClassDef *cd = toClassDef(def);
    const MemberDef *xmd = cd->getMemberByName(memName);
    DBG_CTX((stderr,"generateClassMemberLink(class=%s,member=%s)=%p\n",qPrint(def->name()),qPrint(memName),(void*)xmd));
    if (xmd)
    {
      return generateClassMemberLink(yyscanner,ol,xmd,memName);
    }
    else
    {
      const Definition *innerDef = cd->findInnerCompound(memName);
      if (innerDef)
      {
        yyextra->theCallContext.setScope(ScopedTypeVariant(innerDef));
        addToSearchIndex(yyscanner,memName);
        writeMultiLineCodeLink(yyscanner,*yyextra->code,innerDef,memName);
        return TRUE;
      }
    }
  }
  else if (def && def->definitionType()==Definition::TypeNamespace)
  {
    const NamespaceDef *nd = toNamespaceDef(def);
    DBG_CTX((stderr,"Looking for %s inside namespace %s\n",qPrint(memName),qPrint(nd->name())));
    const Definition *innerDef = nd->findInnerCompound(memName);
    if (innerDef)
    {
      yyextra->theCallContext.setScope(ScopedTypeVariant(innerDef));
      addToSearchIndex(yyscanner,memName);
      writeMultiLineCodeLink(yyscanner,*yyextra->code,innerDef,memName);
      return TRUE;
    }
  }
  return FALSE;
}

static void generateMemberLink(yyscan_t yyscanner,
                               CodeOutputInterface &ol,
                               const QCString &varName,
                               const QCString &memName)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"generateMemberLink(object=%s,mem=%s) classScope=%s\n",
           qPrint(varName),qPrint(memName),qPrint(yyextra->classScope)));

  if (varName.isEmpty()) return;

  // look for the variable in the current context
  const ScopedTypeVariant *stv = yyextra->theVarContext.findVariable(varName);
  if (stv)
  {
    if (stv->type()!=ScopedTypeVariant::Dummy)
    {
      DBG_CTX((stderr,"Class found!\n"));
      if (getLink(yyscanner,stv->name(),memName,ol))
      {
        DBG_CTX((stderr,"Found result!\n"));
        return;
      }
      if (stv->localDef() && !stv->localDef()->baseClasses().empty())
      {
        for (const auto &bcName : stv->localDef()->baseClasses())
        {
          if (getLink(yyscanner,bcName,memName,ol))
          {
            DBG_CTX((stderr,"Found result!\n"));
            return;
          }
        }
      }
    }
  }
  else // variable not in current context, maybe it is in a parent context
  {
    const ClassDef *vcd = yyextra->symbolResolver.resolveClass(yyextra->currentDefinition,yyextra->classScope);
    if (vcd && vcd->isLinkable())
    {
      DBG_CTX((stderr,"Found class %s for variable '%s'\n",qPrint(yyextra->classScope),qPrint(varName)));
      MemberName *vmn=Doxygen::memberNameLinkedMap->find(varName);
      if (vmn==0)
      {
        int vi;
        QCString vn=varName;
        if ((vi=vn.findRev("::"))!=-1 || (vi=vn.findRev('.'))!=-1)  // explicit scope A::b(), probably static member
        {
          const ClassDef *jcd = getClass(vn.left(vi));
          vn=vn.right(vn.length()-vi-2);
          vmn=Doxygen::memberNameLinkedMap->find(vn);
          //printf("Trying name '%s' scope=%s\n",qPrint(vn),qPrint(scope));
          if (vmn)
          {
            for (const auto &vmd : *vmn)
            {
              if (vmd->getClassDef()==jcd)
              {
                DBG_CTX((stderr,"Found variable type=%s\n",qPrint(vmd->typeString())));
                const ClassDef *mcd=stripClassName(yyscanner,vmd->typeString(),vmd->getOuterScope());
                if (mcd && mcd->isLinkable())
                {
                  if (generateClassMemberLink(yyscanner,ol,mcd,memName)) return;
                }
              }
            }
          }
        }
      }
      if (vmn)
      {
        DBG_CTX((stderr,"There is a variable with name '%s'\n",qPrint(varName)));
        for (const auto &vmd : *vmn)
        {
          if (vmd->getClassDef()==vcd)
          {
            DBG_CTX((stderr,"Found variable type=%s\n",qPrint(vmd->typeString())));
            const ClassDef *mcd=stripClassName(yyscanner,vmd->typeString(),vmd->getOuterScope());
            if (mcd && mcd->isLinkable())
            {
              if (generateClassMemberLink(yyscanner,ol,mcd,memName)) return;
            }
          }
        }
      }
    }
  }
  // nothing found -> write result as is
  codifyLines(yyscanner,memName);
  addToSearchIndex(yyscanner,memName);
  return;
}

static void generatePHPVariableLink(yyscan_t yyscanner,CodeOutputInterface &ol,const char *varName)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  QCString name(varName+7); // strip $this->
  name.prepend("$");
  DBG_CTX((stderr,"generatePHPVariableLink(%s) name=%s scope=%s\n",varName,qPrint(name),qPrint(yyextra->classScope)));
  if (!getLink(yyscanner,yyextra->classScope,name,ol,QCString(varName)))
  {
    codifyLines(yyscanner,varName);
  }
}

static void generateFunctionLink(yyscan_t yyscanner,CodeOutputInterface &ol,const QCString &funcName)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  //CodeClassDef *ccd=0;
  QCString locScope=yyextra->classScope;
  QCString locFunc=removeRedundantWhiteSpace(funcName);
  if (yyextra->lang==SrcLangExt_PHP && locFunc.startsWith("self::")) locFunc=locFunc.mid(4);
  QCString funcScope;
  QCString funcWithScope=locFunc;
  QCString funcWithFullScope=locFunc;
  QCString fullScope=locScope;
  DBG_CTX((stderr,"*** locScope=%s locFunc=%s\n",qPrint(locScope),qPrint(locFunc)));
  int len=2;
  int i=locFunc.findRev("::");
  if (yyextra->currentMemberDef && yyextra->currentMemberDef->resolveAlias()->getClassDef() &&
      funcName==yyextra->currentMemberDef->localName() &&
      yyextra->currentMemberDef->getDefLine()==yyextra->yyLineNr &&
      generateClassMemberLink(yyscanner,ol,yyextra->currentMemberDef,funcName)
     )
  {
    // special case where funcName is the name of a method that is also
    // defined on this line. In this case we can directly link to
    // yyextra->currentMemberDef, which is not only faster, but
    // in case of overloaded methods, this will make sure that we link to
    // the correct method, and thereby get the correct reimplemented relations.
    // See also bug 549022.
    goto exit;
  }
  if (i==-1) i=locFunc.findRev("."),len=1;
  if (i==-1) i=locFunc.findRev("\\"),len=1; // for PHP
  if (i>0)
  {
    funcScope=locFunc.left(i);
    locFunc=locFunc.right(locFunc.length()-i-len).stripWhiteSpace();
    int ts=locScope.find('<'); // start of template
    int te=locScope.findRev('>'); // end of template
    DBG_CTX((stderr,"ts=%d te=%d\n",ts,te));
    if (ts!=-1 && te!=-1 && te>ts)
    {
      // remove template from scope
      locScope=locScope.left(ts)+locScope.right(locScope.length()-te-1);
    }
    ts=funcScope.find('<'); // start of template
    te=funcScope.findRev('>'); // end of template
    DBG_CTX((stderr,"ts=%d te=%d\n",ts,te));
    if (ts!=-1 && te!=-1 && te>ts)
    {
      // remove template from scope
      funcScope=funcScope.left(ts)+funcScope.right(funcScope.length()-te-1);
    }
    if (!funcScope.isEmpty())
    {
      funcWithScope = funcScope+"::"+locFunc;
      if (!locScope.isEmpty())
      {
        fullScope=locScope+"::"+funcScope;
      }
    }
    if (!locScope.isEmpty())
    {
      funcWithFullScope = locScope+"::"+funcWithScope;
    }
  }

  if (!fullScope.isEmpty())
  {
    auto it = yyextra->codeClassMap.find(fullScope.str());
    if (it!=yyextra->codeClassMap.end())
    {
      ScopedTypeVariant ccd = it->second;
      if (ccd.localDef() && !ccd.localDef()->baseClasses().empty())
      {
        for (const auto &bcName : ccd.localDef()->baseClasses())
        {
          if (getLink(yyscanner,bcName,locFunc,ol,funcName))
          {
            goto exit;
          }
        }
      }
    }
  }

  if (!locScope.isEmpty() && fullScope!=locScope)
  {
    auto it = yyextra->codeClassMap.find(locScope.str());
    if (it!=yyextra->codeClassMap.end())
    {
      ScopedTypeVariant ccd = it->second;
      if (ccd.localDef() && !ccd.localDef()->baseClasses().empty())
      {
        for (const auto &bcName : ccd.localDef()->baseClasses())
        {
          if (getLink(yyscanner,bcName,funcWithScope,ol,funcName))
          {
            goto exit;
          }
        }
      }
    }
  }
  if (!getLink(yyscanner,locScope,funcWithScope,ol,funcName))
  {
    generateClassOrGlobalLink(yyscanner,ol,funcName);
  }
exit:
  return;
}

static void generateFunctionLink(yyscan_t yyscanner,CodeOutputInterface &ol,const char *funcName)
{
  generateFunctionLink(yyscanner,ol,QCString(funcName));
}

/*! counts the number of lines in the input */
static int countLines(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  const char *p=yyextra->inputString;
  char c;
  int count=1;
  while ((c=*p))
  {
    p++ ;
    if (c=='\n') count++;
  }
  if (p>yyextra->inputString && *(p-1)!='\n')
  { // last line does not end with a \n, so we add an extra
    count++;
  }
  return count;
}

static void endFontClass(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (yyextra->currentFontClass)
  {
    yyextra->code->endFontClass();
    yyextra->currentFontClass=0;
  }
}

static void startFontClass(yyscan_t yyscanner,const char *s)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  endFontClass(yyscanner);
  yyextra->code->startFontClass(QCString(s));
  yyextra->currentFontClass=s;
}

//----------------------------------------------------------------------------

// recursively writes a linkified Objective-C method call
static void writeObjCMethodCall(yyscan_t yyscanner,ObjCCallCtx *ctx)
{
  if (ctx==0) return;
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  char c;
  if (!ctx->methodName.isEmpty())
  {
    DBG_CTX((stderr,"writeObjCMethodCall(%s) obj=%s method=%s\n",
             qPrint(ctx->format),qPrint(ctx->objectTypeOrName),qPrint(ctx->methodName)));
    if (!ctx->objectTypeOrName.isEmpty() && ctx->objectTypeOrName.at(0)!='$')
    {
      DBG_CTX((stderr,"Looking for object=%s method=%s\n",qPrint(ctx->objectTypeOrName),
               qPrint(ctx->methodName)));
      const ScopedTypeVariant *stv = yyextra->theVarContext.findVariable(ctx->objectTypeOrName);
      if (stv==0) // not a local variable
      {
        if (ctx->objectTypeOrName=="self")
        {
          if (yyextra->currentDefinition &&
              yyextra->currentDefinition->definitionType()==Definition::TypeClass)
          {
            ctx->objectType = toClassDef(yyextra->currentDefinition);
          }
        }
        else
        {
          ctx->objectType = yyextra->symbolResolver.resolveClass(yyextra->currentDefinition,ctx->objectTypeOrName);
          ctx->method = yyextra->symbolResolver.getTypedef();
        }
        DBG_CTX((stderr,"  object is class? %p\n",(void*)ctx->objectType));
        if (ctx->objectType) // found class
        {
          ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
          DBG_CTX((stderr,"    yes->method=%s\n",ctx->method?qPrint(ctx->method->name()):"<none>"));
        }
        else if (ctx->method==0) // search for class variable with the same name
        {
          DBG_CTX((stderr,"    no\n"));
          DBG_CTX((stderr,"yyextra->currentDefinition=%p\n",(void*)yyextra->currentDefinition));
          if (yyextra->currentDefinition &&
              yyextra->currentDefinition->definitionType()==Definition::TypeClass)
          {
            ctx->objectVar = (toClassDef(yyextra->currentDefinition))->getMemberByName(ctx->objectTypeOrName);
            DBG_CTX((stderr,"      ctx->objectVar=%p\n",(void*)ctx->objectVar));
            if (ctx->objectVar)
            {
              ctx->objectType = stripClassName(yyscanner,ctx->objectVar->typeString(),yyextra->currentDefinition);
              DBG_CTX((stderr,"        ctx->objectType=%p\n",(void*)ctx->objectType));
              if (ctx->objectType && !ctx->methodName.isEmpty())
              {
                ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
                DBG_CTX((stderr,"          ctx->method=%p\n",(void*)ctx->method));
              }
            }
          }
        }
      }
      else // local variable
      {
        DBG_CTX((stderr,"  object is local variable\n"));
        if (stv->globalDef() && !ctx->methodName.isEmpty())
        {
          const ClassDef *cd = toClassDef(stv->globalDef());
          if (cd)
          {
            ctx->method = cd->getMemberByName(ctx->methodName);
          }
          DBG_CTX((stderr,"   class=%p method=%p\n",(void*)cd,(void*)ctx->method));
        }
      }
    }
  }

  DBG_CTX((stderr,"["));
  if (!ctx->format.isEmpty())
  {
    const char *p = ctx->format.data();
    while ((c=*p++)) // for each character in ctx->format
    {
      if (c=='$')
      {
        char nc=*p++;
        if (nc=='$') // escaped $
        {
          yyextra->code->codify("$");
        }
        else // name fragment or reference to a nested call
        {
          if (nc=='n') // name fragment
          {
            nc=*p++;
            QCString refIdStr;
            while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
            p--;
            int refId=refIdStr.toInt();
            auto it = yyextra->nameMap.find(refId);
            if (it!=yyextra->nameMap.end())
            {
              QCString name = it->second;
              if (ctx->method && ctx->method->isLinkable())
              {
                writeMultiLineCodeLink(yyscanner,*yyextra->code,ctx->method,name);
                if (yyextra->currentMemberDef && yyextra->collectXRefs)
                {
                  std::lock_guard<std::mutex> lock(g_docCrossReferenceMutex);
                  addDocCrossReference(toMemberDefMutable(yyextra->currentMemberDef),toMemberDefMutable(ctx->method));
                }
              }
              else
              {
                codifyLines(yyscanner,name);
              }
            }
            else
            {
              DBG_CTX((stderr,"Invalid name: id=%d\n",refId));
            }
          }
          else if (nc=='o') // reference to potential object name
          {
            nc=*p++;
            QCString refIdStr;
            while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
            p--;
            int refId=refIdStr.toInt();
            auto it = yyextra->objectMap.find(refId);
            if (it!=yyextra->objectMap.end())
            {
              QCString object = it->second;
              if (object=="self")
              {
                if (yyextra->currentDefinition &&
                    yyextra->currentDefinition->definitionType()==Definition::TypeClass)
                {
                  ctx->objectType = toClassDef(yyextra->currentDefinition);
                  if (ctx->objectType->categoryOf())
                  {
                    ctx->objectType = ctx->objectType->categoryOf();
                  }
                  if (ctx->objectType && !ctx->methodName.isEmpty())
                  {
                    ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
                  }
                }
                startFontClass(yyscanner,"keyword");
                codifyLines(yyscanner,object);
                endFontClass(yyscanner);
              }
              else if (object=="super")
              {
                if (yyextra->currentDefinition &&
                    yyextra->currentDefinition->definitionType()==Definition::TypeClass)
                {
                  const ClassDef *cd = toClassDef(yyextra->currentDefinition);
                  if (cd->categoryOf())
                  {
                    cd = cd->categoryOf();
                  }
                  for (const auto &bclass : cd->baseClasses())
                  {
                    if (bclass.classDef->compoundType()!=ClassDef::Protocol)
                    {
                      ctx->objectType = bclass.classDef;
                      if (ctx->objectType && !ctx->methodName.isEmpty())
                      {
                        ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
                      }
                    }
                  }
                }
                startFontClass(yyscanner,"keyword");
                codifyLines(yyscanner,object);
                endFontClass(yyscanner);
              }
              else if (ctx->objectVar && ctx->objectVar->isLinkable()) // object is class variable
              {
                writeMultiLineCodeLink(yyscanner,*yyextra->code,ctx->objectVar,object);
                if (yyextra->currentMemberDef && yyextra->collectXRefs)
                {
                  std::lock_guard<std::mutex> lock(g_docCrossReferenceMutex);
                  addDocCrossReference(toMemberDefMutable(yyextra->currentMemberDef),toMemberDefMutable(ctx->objectVar));
                }
              }
              else if (ctx->objectType &&
                  ctx->objectType->isLinkable()
                  ) // object is class name
              {
                const ClassDef *cd = ctx->objectType;
                writeMultiLineCodeLink(yyscanner,*yyextra->code,cd,object);
              }
              else // object still needs to be resolved
              {
                const ClassDef *cd = yyextra->symbolResolver.resolveClass(yyextra->currentDefinition, object);
                if (cd && cd->isLinkable())
                {
                  if (ctx->objectType==0) ctx->objectType=cd;
                  writeMultiLineCodeLink(yyscanner,*yyextra->code,cd,object);
                }
                else
                {
                  codifyLines(yyscanner,object);
                }
              }
            }
            else
            {
              DBG_CTX((stderr,"Invalid object: id=%d\n",refId));
            }
          }
          else if (nc=='c') // reference to nested call
          {
            nc=*p++;
            QCString refIdStr;
            while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
            p--;
            int refId=refIdStr.toInt();
            auto it = yyextra->contextMap.find(refId);
            if (it!=yyextra->contextMap.end()) // recurse into nested call
            {
              ObjCCallCtx *ictx = it->second.get();
              writeObjCMethodCall(yyscanner,ictx);
              if (ictx->method) // link to nested call successfully
              {
                // get the ClassDef representing the method's return type
                if (QCString(ictx->method->typeString())=="id")
                {
                  // see if the method name is unique, if so we link to it
                  MemberName *mn=Doxygen::memberNameLinkedMap->find(ctx->methodName);
                  //printf("mn->count=%d ictx->method=%s ctx->methodName=%s\n",
                  //    mn==0?-1:(int)mn->count(),
                  //    qPrint(ictx->method->name()),
                  //    qPrint(ctx->methodName));
                  if (mn && mn->size()==1) // member name unique
                  {
                    ctx->method = mn->front().get();
                  }
                }
                else
                {
                  ctx->objectType = stripClassName(yyscanner,ictx->method->typeString(),yyextra->currentDefinition);
                  if (ctx->objectType && !ctx->methodName.isEmpty())
                  {
                    ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
                  }
                }
                DBG_CTX((stderr,"  ***** method=%s -> object=%p\n",qPrint(ictx->method->name()),(void*)ctx->objectType));
              }
            }
            else
            {
              DBG_CTX((stderr,"Invalid context: id=%d\n",refId));
            }
          }
          else if (nc=='w') // some word
          {
            nc=*p++;
            QCString refIdStr;
            while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
            p--;
            int refId=refIdStr.toInt();
            auto it = yyextra->wordMap.find(refId);
            if (it!=yyextra->wordMap.end())
            {
              QCString word = it->second;
              codifyLines(yyscanner,word);
            }
          }
          else if (nc=='d') // comment block
          {
            nc=*p++;
            QCString refIdStr;
            while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
            p--;
            int refId=refIdStr.toInt();
            auto it = yyextra->commentMap.find(refId);
            if (it!=yyextra->commentMap.end())
            {
              QCString comment = it->second;
              startFontClass(yyscanner,"comment");
              codifyLines(yyscanner,comment);
              endFontClass(yyscanner);
            }
          }
          else // illegal marker
          {
            ASSERT("invalid escape sequence"==0);
          }
        }
      }
      else // normal non-marker character
      {
        char s[2];
        s[0]=c;s[1]=0;
        codifyLines(yyscanner,s);
      }
    }
  }
  DBG_CTX((stderr,"%s %s]\n",qPrint(ctx->objectTypeOrName),qPrint(ctx->methodName)));
  DBG_CTX((stderr,"}=(type='%s',name='%s')",
           qPrint(ctx->objectTypeOrName),
           qPrint(ctx->methodName)));
}

// Replaces an Objective-C method name fragment s by a marker of the form
// $n12, the number (12) can later be used as a key for obtaining the name
// fragment, from yyextra->nameMap
static QCString escapeName(yyscan_t yyscanner,const char *s)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  QCString result;
  result.sprintf("$n%d",yyextra->currentNameId);
  yyextra->nameMap.emplace(std::make_pair(yyextra->currentNameId,s));
  yyextra->currentNameId++;
  return result;
}

static QCString escapeObject(yyscan_t yyscanner,const char *s)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  QCString result;
  result.sprintf("$o%d",yyextra->currentObjId);
  yyextra->objectMap.emplace(std::make_pair(yyextra->currentObjId,s));
  yyextra->currentObjId++;
  return result;
}

static QCString escapeWord(yyscan_t yyscanner,const char *s)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  QCString result;
  result.sprintf("$w%d",yyextra->currentWordId);
  yyextra->wordMap.emplace(std::make_pair(yyextra->currentWordId,s));
  yyextra->currentWordId++;
  return result;
}

static QCString escapeComment(yyscan_t yyscanner,const char *s)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  QCString result;
  result.sprintf("$d%d",yyextra->currentCommentId);
  yyextra->commentMap.emplace(std::make_pair(yyextra->currentCommentId,s));
  yyextra->currentCommentId++;
  return result;
}

static bool skipLanguageSpecificKeyword(yyscan_t yyscanner,const char *keyword)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  static const std::unordered_set<std::string> non_cpp_keywords = {
    "__assume", "__super", "abstract", "function",
    "gcnew", "gcroot", "generic", "get",
    "internal", "null", "pin_ptr", "raise",
    "remove", "self", "set", "transient"};
  static const std::unordered_set<std::string> non_java_keywords = {
    "alignas", "alignof", "and", "and_eq", "asm",
    "atomic_cancel", "atomic_commit", "atomic_noexcept", "auto", "bitand",
    "bitor", "bool", "char8_t", "char16_t", "char32_t",
    "compl", "concept", "consteval", "constexpr", "constinit",
    "const_cast", "co_await", "co_return", "co_yield", "decltype",
    "delete", "dynamic_cast", "explicit", "export", "extern",
    "friend", "inline", "mutable", "namespace", "noexcept",
    "not", "not_eq", "nullptr", "operator", "or",
    "or_eq", "reflexpr", "register", "reinterpret_cast", "requires",
    "signed", "sizeof", "static_assert", "static_cast", "struct",
    "template", "thread_local", "typedef", "typeid", "typename",
    "union", "unsigned", "using", "virtual", "wchar_t",
    "xor", "xor_eq",
    "override"
  };
  bool retval;
  switch (yyextra->lang)
  {
    case SrcLangExt_Cpp:
      retval = (non_cpp_keywords.find(keyword) != non_cpp_keywords.end());
      break;
    case SrcLangExt_Java:
      retval = (non_java_keywords.find(keyword) != non_java_keywords.end());
      break;
    default: 
      retval = false;
      break;
  }
  return retval;
}

static bool isCastKeyword(const char *keyword)
{
  QCString s(keyword);
  int i=s.find('<');
  if (i==-1) return FALSE;
  QCString kw = s.left(i).stripWhiteSpace();
  return kw=="const_cast" || kw=="static_cast" || kw=="dynamic_cast" || kw=="reinterpret_cast";
}

static yy_size_t yyread(yyscan_t yyscanner,char *buf,yy_size_t max_size)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  yy_size_t inputPosition = yyextra->inputPosition;
  const char *s = yyextra->inputString + inputPosition;
  yy_size_t c=0;
  while( c < max_size && *s )
  {
    *buf++ = *s++;
    c++;
  }
  yyextra->inputPosition += c;
  return c;
}


static void saveObjCContext(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  if (yyextra->currentCtx)
  {
    yyextra->currentCtx->format+=QCString().sprintf("$c%d",yyextra->currentCtxId);
    if (yyextra->braceCount==0 && YY_START==ObjCCall)
    {
      yyextra->currentCtx->objectTypeOrName=yyextra->currentCtx->format.mid(1);
      DBG_CTX((stderr,"new type=%s\n",qPrint(yyextra->currentCtx->objectTypeOrName)));
    }
    yyextra->contextStack.push(yyextra->currentCtx);
  }
  else
  {
    DBG_CTX((stderr,"Trying to save NULL context!\n"));
  }
  auto newCtx = std::make_unique<ObjCCallCtx>();
  newCtx->id = yyextra->currentCtxId;
  newCtx->lexState = YY_START;
  newCtx->braceCount = yyextra->braceCount;
  newCtx->objectType = 0;
  newCtx->objectVar = 0;
  newCtx->method = 0;
  DBG_CTX((stderr,"save state=%d\n",YY_START));
  yyextra->currentCtx = newCtx.get();
  yyextra->contextMap.emplace(std::make_pair(yyextra->currentCtxId,std::move(newCtx)));
  yyextra->braceCount = 0;
  yyextra->currentCtxId++;
}

static void restoreObjCContext(yyscan_t yyscanner)
{
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"restore state=%d->%d\n",YY_START,yyextra->currentCtx->lexState));
  BEGIN(yyextra->currentCtx->lexState);
  yyextra->braceCount = yyextra->currentCtx->braceCount;
  if (!yyextra->contextStack.empty())
  {
    yyextra->currentCtx = yyextra->contextStack.top();
    yyextra->contextStack.pop();
  }
  else
  {
    yyextra->currentCtx = 0;
    DBG_CTX((stderr,"Trying to pop context while yyextra->contextStack is empty!\n"));
  }
}

struct CCodeParser::Private
{
  yyscan_t yyscanner;
  codeYY_state state;
};

CCodeParser::CCodeParser() : p(std::make_unique<CCodeParser::Private>())
{
  codeYYlex_init_extra(&p->state,&p->yyscanner);
#ifdef FLEX_DEBUG
  codeYYset_debug(1,p->yyscanner);
#endif
  resetCodeParserState();
}

CCodeParser::~CCodeParser()
{
  codeYYlex_destroy(p->yyscanner);
}

void CCodeParser::resetCodeParserState()
{
  struct yyguts_t *yyg = (struct yyguts_t*)p->yyscanner;
  DBG_CTX((stderr,"***CodeParser::reset()\n"));
  yyextra->theVarContext.clear();
  while (!yyextra->classScopeLengthStack.empty()) yyextra->classScopeLengthStack.pop();
  yyextra->codeClassMap.clear();
  yyextra->curClassBases.clear();
  yyextra->anchorCount = 0;
  yyextra->insideCodeLine = false;
}

void CCodeParser::setInsideCodeLine(bool inp)
{
  struct yyguts_t *yyg = (struct yyguts_t*)p->yyscanner;
  yyextra->insideCodeLine = inp;
}

bool CCodeParser::insideCodeLine() const
{
  struct yyguts_t *yyg = (struct yyguts_t*)p->yyscanner;
  return yyextra->insideCodeLine;
}

void CCodeParser::parseCode(CodeOutputInterface &od,const QCString &className,const QCString &s,
                SrcLangExt lang,bool exBlock, const QCString &exName,const FileDef *fd,
                int startLine,int endLine,bool inlineFragment,
                const MemberDef *memberDef,bool showLineNumbers,const Definition *searchCtx,
                bool collectXRefs)
{
  yyscan_t yyscanner = p->yyscanner;
  struct yyguts_t *yyg = (struct yyguts_t*)yyscanner;
  DBG_CTX((stderr,"***parseCode() exBlock=%d exName=%s fd=%p className=%s searchCtx=%s\n",
           exBlock,qPrint(exName),(void*)fd,qPrint(className),searchCtx?qPrint(searchCtx->name()):"<none>"));

  if (s.isEmpty()) return;

  printlex(yy_flex_debug, TRUE, __FILE__, fd ? qPrint(fd->fileName()): !exName.isEmpty() ? qPrint(exName) : NULL);

  yyextra->code = &od;
  yyextra->inputString   = s.data();
  yyextra->fileName      = fd ? fd->fileName():"";
  yyextra->inputPosition = 0;
  codeYYrestart(0,yyscanner);
  yyextra->currentFontClass = 0;
  yyextra->searchCtx = searchCtx;
  yyextra->collectXRefs = collectXRefs;
  yyextra->inFunctionTryBlock = FALSE;
  yyextra->symbolResolver.setFileScope(fd);

  if (startLine!=-1)
    yyextra->yyLineNr    = startLine;
  else
    yyextra->yyLineNr    = 1;

  if (endLine!=-1)
    yyextra->inputLines  = endLine+1;
  else
    yyextra->inputLines  = yyextra->yyLineNr + countLines(yyscanner) - 1;

  yyextra->curlyCount    = 0;
  yyextra->bodyCurlyCount    = 0;
  yyextra->bracketCount  = 0;
  yyextra->sharpCount    = 0;
  yyextra->insideTemplate = FALSE;
  yyextra->theCallContext.clear();
  while (!yyextra->scopeStack.empty()) yyextra->scopeStack.pop();
  yyextra->classScope    = className;
  DBG_CTX((stderr,"parseCCode %s\n",qPrint(className)));
  yyextra->exampleBlock  = exBlock;
  yyextra->exampleName   = exName;
  yyextra->sourceFileDef = fd;
  yyextra->lineNumbers   = fd!=0 && showLineNumbers;
  bool cleanupSourceDef = FALSE;
  if (fd==0)
  {
    // create a dummy filedef for the example
    yyextra->sourceFileDef = createFileDef(QCString(),(!exName.isEmpty()?exName:"generated"));
    cleanupSourceDef = TRUE;
  }
  yyextra->lang        = lang;
  yyextra->insideObjC  = lang==SrcLangExt_ObjC;
  if (yyextra->sourceFileDef)
  {
    setCurrentDoc(yyscanner,"l00001");
  }
  yyextra->currentDefinition = searchCtx ? searchCtx : getResolvedNamespace(className);
  yyextra->currentMemberDef = 0;
  yyextra->searchingForBody = exBlock;
  yyextra->insideBody = FALSE;
  yyextra->bracketCount = 0;
  if (!yyextra->exampleName.isEmpty())
  {
    yyextra->exampleFile = convertNameToFile(yyextra->exampleName+"-example",FALSE,TRUE);
    DBG_CTX((stderr,"yyextra->exampleFile=%s\n",qPrint(yyextra->exampleFile)));
  }
  yyextra->includeCodeFragment = inlineFragment;
  DBG_CTX((stderr,"** exBlock=%d exName=%s include=%d\n",exBlock,qPrint(exName),inlineFragment));
  if (!yyextra->insideCodeLine)
  {
    startCodeLine(yyscanner);
  }
  yyextra->type.resize(0);
  yyextra->name.resize(0);
  yyextra->args.resize(0);
  yyextra->parmName.resize(0);
  yyextra->parmType.resize(0);
  if (memberDef) setParameterList(yyscanner,memberDef);
  BEGIN( Body );
  codeYYlex(yyscanner);
  yyextra->lexInit=TRUE;
  if (yyextra->insideCodeLine)
  {
    endCodeLine(yyscanner);
  }
  if (cleanupSourceDef)
  {
    // delete the temporary file definition used for this example
    delete yyextra->sourceFileDef;
    yyextra->sourceFileDef=0;
  }
  // write the tooltips
  yyextra->tooltipManager.writeTooltips(od);

  printlex(yy_flex_debug, FALSE, __FILE__, fd ? qPrint(fd->fileName()): NULL);
}

#if USE_STATE2STRING
#include "code.l.h"
#endif

